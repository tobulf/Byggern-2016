
Node_2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000034  00800200  00000cba  00000d4e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000cba  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000a  00800234  00800234  00000d82  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d82  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000160  00000000  00000000  00000dde  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00001085  00000000  00000000  00000f3e  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000875  00000000  00000000  00001fc3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000009d8  00000000  00000000  00002838  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000002c8  00000000  00000000  00003210  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003e1  00000000  00000000  000034d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000605  00000000  00000000  000038b9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000f0  00000000  00000000  00003ebe  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	5e c0       	rjmp	.+188    	; 0x122 <__bad_interrupt>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	48 c0       	rjmp	.+144    	; 0x122 <__bad_interrupt>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	2a c0       	rjmp	.+84     	; 0x122 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	24 c0       	rjmp	.+72     	; 0x122 <__bad_interrupt>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	ea eb       	ldi	r30, 0xBA	; 186
  fc:	fc e0       	ldi	r31, 0x0C	; 12
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 33       	cpi	r26, 0x34	; 52
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	22 e0       	ldi	r18, 0x02	; 2
 110:	a4 e3       	ldi	r26, 0x34	; 52
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ae 33       	cpi	r26, 0x3E	; 62
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	15 d1       	rcall	.+554    	; 0x34a <main>
 120:	ca c5       	rjmp	.+2964   	; 0xcb6 <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <CAN_init>:




CAN_init(){
	MCP2515_init();
 124:	09 d1       	rcall	.+530    	; 0x338 <MCP2515_init>
	MCP2515_bitModify(MCP_CANCTRL, 0b11100000, MODE_NORMAL); 
 126:	40 e0       	ldi	r20, 0x00	; 0
 128:	60 ee       	ldi	r22, 0xE0	; 224
 12a:	8f e0       	ldi	r24, 0x0F	; 15
 12c:	df c0       	rjmp	.+446    	; 0x2ec <MCP2515_bitModify>
 12e:	08 95       	ret

00000130 <Can_CAN_receive>:
	}
	MCP2515_bitModify(CANINTF, 0b00000001, 0);
}

void Can_CAN_receive(){
	uint8_t intf = MCP2515_read(CANINTF);
 130:	8c e2       	ldi	r24, 0x2C	; 44
 132:	c9 d0       	rcall	.+402    	; 0x2c6 <MCP2515_read>
	while ((intf & 0b00000011) == 0) {
 134:	83 70       	andi	r24, 0x03	; 3
 136:	21 f4       	brne	.+8      	; 0x140 <Can_CAN_receive+0x10>
		intf = MCP2515_read(CANINTF);
 138:	8c e2       	ldi	r24, 0x2C	; 44
 13a:	c5 d0       	rcall	.+394    	; 0x2c6 <MCP2515_read>
	MCP2515_bitModify(CANINTF, 0b00000001, 0);
}

void Can_CAN_receive(){
	uint8_t intf = MCP2515_read(CANINTF);
	while ((intf & 0b00000011) == 0) {
 13c:	83 70       	andi	r24, 0x03	; 3
 13e:	e1 f3       	breq	.-8      	; 0x138 <Can_CAN_receive+0x8>
 140:	08 95       	ret

00000142 <CAN_message_recieve>:
	}
	MCP2515_requestToSend(MCP_RTS_TX0);
	
}

void CAN_message_recieve(CAN_message *msg){
 142:	ff 92       	push	r15
 144:	0f 93       	push	r16
 146:	1f 93       	push	r17
 148:	cf 93       	push	r28
 14a:	df 93       	push	r29
 14c:	1f 92       	push	r1
 14e:	cd b7       	in	r28, 0x3d	; 61
 150:	de b7       	in	r29, 0x3e	; 62
 152:	8c 01       	movw	r16, r24
	Can_CAN_receive();
 154:	ed df       	rcall	.-38     	; 0x130 <Can_CAN_receive>
	volatile uint8_t intf = MCP2515_read(CANINTF);
 156:	8c e2       	ldi	r24, 0x2C	; 44
 158:	b6 d0       	rcall	.+364    	; 0x2c6 <MCP2515_read>
 15a:	89 83       	std	Y+1, r24	; 0x01
	msg->id= MCP2515_read(MCP_RXB0SIDH);
 15c:	81 e6       	ldi	r24, 0x61	; 97
 15e:	b3 d0       	rcall	.+358    	; 0x2c6 <MCP2515_read>
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	f8 01       	movw	r30, r16
 164:	91 83       	std	Z+1, r25	; 0x01
 166:	80 83       	st	Z, r24
	msg->length=MCP2515_read(MCP_RXB0DLC);
 168:	85 e6       	ldi	r24, 0x65	; 101
 16a:	ad d0       	rcall	.+346    	; 0x2c6 <MCP2515_read>
 16c:	f8 01       	movw	r30, r16
 16e:	82 83       	std	Z+2, r24	; 0x02
	for(uint8_t i =0; i < msg->length;i++){
 170:	88 23       	and	r24, r24
 172:	69 f0       	breq	.+26     	; 0x18e <CAN_message_recieve+0x4c>
 174:	f1 2c       	mov	r15, r1
		msg->data[i]=MCP2515_read(MCP_RXB0D0 + i);
 176:	86 e6       	ldi	r24, 0x66	; 102
 178:	8f 0d       	add	r24, r15
 17a:	a5 d0       	rcall	.+330    	; 0x2c6 <MCP2515_read>
 17c:	f8 01       	movw	r30, r16
 17e:	ef 0d       	add	r30, r15
 180:	f1 1d       	adc	r31, r1
 182:	83 83       	std	Z+3, r24	; 0x03
void CAN_message_recieve(CAN_message *msg){
	Can_CAN_receive();
	volatile uint8_t intf = MCP2515_read(CANINTF);
	msg->id= MCP2515_read(MCP_RXB0SIDH);
	msg->length=MCP2515_read(MCP_RXB0DLC);
	for(uint8_t i =0; i < msg->length;i++){
 184:	f3 94       	inc	r15
 186:	f8 01       	movw	r30, r16
 188:	82 81       	ldd	r24, Z+2	; 0x02
 18a:	f8 16       	cp	r15, r24
 18c:	a0 f3       	brcs	.-24     	; 0x176 <CAN_message_recieve+0x34>
		msg->data[i]=MCP2515_read(MCP_RXB0D0 + i);
	}
	MCP2515_bitModify(CANINTF, 0b00000001, 0);
 18e:	40 e0       	ldi	r20, 0x00	; 0
 190:	61 e0       	ldi	r22, 0x01	; 1
 192:	8c e2       	ldi	r24, 0x2C	; 44
 194:	ab d0       	rcall	.+342    	; 0x2ec <MCP2515_bitModify>
}
 196:	0f 90       	pop	r0
 198:	df 91       	pop	r29
 19a:	cf 91       	pop	r28
 19c:	1f 91       	pop	r17
 19e:	0f 91       	pop	r16
 1a0:	ff 90       	pop	r15
 1a2:	08 95       	ret

000001a4 <message_decoder>:
 * Created: 18.10.2016 18:11:08
 *  Author: tobiasu
 */ 
#include "CAN_message_decoder.h"

void message_decoder(CAN_message message){
 1a4:	ef 92       	push	r14
 1a6:	ff 92       	push	r15
 1a8:	0f 93       	push	r16
 1aa:	1f 93       	push	r17
 1ac:	cf 93       	push	r28
 1ae:	df 93       	push	r29
 1b0:	cd b7       	in	r28, 0x3d	; 61
 1b2:	de b7       	in	r29, 0x3e	; 62
 1b4:	2b 97       	sbiw	r28, 0x0b	; 11
 1b6:	0f b6       	in	r0, 0x3f	; 63
 1b8:	f8 94       	cli
 1ba:	de bf       	out	0x3e, r29	; 62
 1bc:	0f be       	out	0x3f, r0	; 63
 1be:	cd bf       	out	0x3d, r28	; 61
 1c0:	e9 82       	std	Y+1, r14	; 0x01
 1c2:	fa 82       	std	Y+2, r15	; 0x02
 1c4:	0b 83       	std	Y+3, r16	; 0x03
 1c6:	1c 83       	std	Y+4, r17	; 0x04
 1c8:	2d 83       	std	Y+5, r18	; 0x05
 1ca:	3e 83       	std	Y+6, r19	; 0x06
 1cc:	4f 83       	std	Y+7, r20	; 0x07
 1ce:	58 87       	std	Y+8, r21	; 0x08
 1d0:	69 87       	std	Y+9, r22	; 0x09
 1d2:	7a 87       	std	Y+10, r23	; 0x0a
 1d4:	8b 87       	std	Y+11, r24	; 0x0b
	switch (message.id) {
 1d6:	89 81       	ldd	r24, Y+1	; 0x01
 1d8:	9a 81       	ldd	r25, Y+2	; 0x02
 1da:	00 97       	sbiw	r24, 0x00	; 0
 1dc:	19 f0       	breq	.+6      	; 0x1e4 <message_decoder+0x40>
 1de:	05 97       	sbiw	r24, 0x05	; 5
 1e0:	70 f4       	brcc	.+28     	; 0x1fe <message_decoder+0x5a>
 1e2:	14 c0       	rjmp	.+40     	; 0x20c <message_decoder+0x68>
		case JOYSTICK: 
		print_joy_pos(message);
 1e4:	e9 80       	ldd	r14, Y+1	; 0x01
 1e6:	fa 80       	ldd	r15, Y+2	; 0x02
 1e8:	0b 81       	ldd	r16, Y+3	; 0x03
 1ea:	1c 81       	ldd	r17, Y+4	; 0x04
 1ec:	2d 81       	ldd	r18, Y+5	; 0x05
 1ee:	3e 81       	ldd	r19, Y+6	; 0x06
 1f0:	4f 81       	ldd	r20, Y+7	; 0x07
 1f2:	58 85       	ldd	r21, Y+8	; 0x08
 1f4:	69 85       	ldd	r22, Y+9	; 0x09
 1f6:	7a 85       	ldd	r23, Y+10	; 0x0a
 1f8:	8b 85       	ldd	r24, Y+11	; 0x0b
 1fa:	35 d0       	rcall	.+106    	; 0x266 <print_joy_pos>
		break;
 1fc:	07 c0       	rjmp	.+14     	; 0x20c <message_decoder+0x68>
		
		case RIGHTBUTTON:
		break;
		
		default:
		printf("ID invalid");
 1fe:	86 e0       	ldi	r24, 0x06	; 6
 200:	92 e0       	ldi	r25, 0x02	; 2
 202:	9f 93       	push	r25
 204:	8f 93       	push	r24
 206:	6a d1       	rcall	.+724    	; 0x4dc <printf>
		break;
 208:	0f 90       	pop	r0
 20a:	0f 90       	pop	r0
	}
	
	
	
}
 20c:	2b 96       	adiw	r28, 0x0b	; 11
 20e:	0f b6       	in	r0, 0x3f	; 63
 210:	f8 94       	cli
 212:	de bf       	out	0x3e, r29	; 62
 214:	0f be       	out	0x3f, r0	; 63
 216:	cd bf       	out	0x3d, r28	; 61
 218:	df 91       	pop	r29
 21a:	cf 91       	pop	r28
 21c:	1f 91       	pop	r17
 21e:	0f 91       	pop	r16
 220:	ff 90       	pop	r15
 222:	ef 90       	pop	r14
 224:	08 95       	ret

00000226 <convertjoyPos>:
	Joy_pos position;
	position.x = pos.x - 129;
	position.x *= 100;
	position.x /= 129;
	   
	position.y = pos.y - 128;
 226:	ac 01       	movw	r20, r24
 228:	40 58       	subi	r20, 0x80	; 128
 22a:	51 09       	sbc	r21, r1
	position.y *= 100;
 22c:	e4 e6       	ldi	r30, 0x64	; 100
 22e:	e4 9f       	mul	r30, r20
 230:	90 01       	movw	r18, r0
 232:	e5 9f       	mul	r30, r21
 234:	30 0d       	add	r19, r0
 236:	11 24       	eor	r1, r1
	position.y /= 128;
 238:	33 23       	and	r19, r19
 23a:	14 f4       	brge	.+4      	; 0x240 <convertjoyPos+0x1a>
 23c:	21 58       	subi	r18, 0x81	; 129
 23e:	3f 4f       	sbci	r19, 0xFF	; 255
	printf("direction: %c xpos: %d ypos: %d \n", direction, position.x, position.y);	
}

Joy_pos convertjoyPos(Joy_pos pos){
	Joy_pos position;
	position.x = pos.x - 129;
 240:	61 58       	subi	r22, 0x81	; 129
 242:	71 09       	sbc	r23, r1
	position.x *= 100;
 244:	44 e6       	ldi	r20, 0x64	; 100
 246:	46 9f       	mul	r20, r22
 248:	c0 01       	movw	r24, r0
 24a:	47 9f       	mul	r20, r23
 24c:	90 0d       	add	r25, r0
 24e:	11 24       	eor	r1, r1
	position.x /= 129;
 250:	61 e8       	ldi	r22, 0x81	; 129
 252:	70 e0       	ldi	r23, 0x00	; 0
 254:	d2 d0       	rcall	.+420    	; 0x3fa <__divmodhi4>
 256:	ab 01       	movw	r20, r22
	   
	position.y = pos.y - 128;
	position.y *= 100;
	position.y /= 128;
	return position;
 258:	ba 01       	movw	r22, r20
 25a:	c9 01       	movw	r24, r18
 25c:	88 0f       	add	r24, r24
 25e:	89 2f       	mov	r24, r25
 260:	88 1f       	adc	r24, r24
 262:	99 0b       	sbc	r25, r25
 264:	08 95       	ret

00000266 <print_joy_pos>:
 * Created: 18.10.2016 18:07:03
 *  Author: tobiasu
 */ 
#include "joystick.h"

void print_joy_pos(CAN_message msg){
 266:	ef 92       	push	r14
 268:	ff 92       	push	r15
 26a:	0f 93       	push	r16
 26c:	1f 93       	push	r17
 26e:	cf 93       	push	r28
 270:	df 93       	push	r29
 272:	cd b7       	in	r28, 0x3d	; 61
 274:	de b7       	in	r29, 0x3e	; 62
 276:	2b 97       	sbiw	r28, 0x0b	; 11
 278:	0f b6       	in	r0, 0x3f	; 63
 27a:	f8 94       	cli
 27c:	de bf       	out	0x3e, r29	; 62
 27e:	0f be       	out	0x3f, r0	; 63
 280:	cd bf       	out	0x3d, r28	; 61
 282:	83 2f       	mov	r24, r19
	Joy_pos position;
	DIR direction = msg.data[0];
	position.x = msg.data[1];
 284:	62 2f       	mov	r22, r18
	position.y = msg.data[2];
	position = convertjoyPos(position);
 286:	70 e0       	ldi	r23, 0x00	; 0
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	cd df       	rcall	.-102    	; 0x226 <convertjoyPos>
	printf("direction: %c xpos: %d ypos: %d \n", direction, position.x, position.y);	
 28c:	9f 93       	push	r25
 28e:	8f 93       	push	r24
 290:	7f 93       	push	r23
 292:	6f 93       	push	r22
 294:	1f 92       	push	r1
 296:	1f 93       	push	r17
 298:	81 e1       	ldi	r24, 0x11	; 17
 29a:	92 e0       	ldi	r25, 0x02	; 2
 29c:	9f 93       	push	r25
 29e:	8f 93       	push	r24
 2a0:	1d d1       	rcall	.+570    	; 0x4dc <printf>
 2a2:	0f b6       	in	r0, 0x3f	; 63
 2a4:	f8 94       	cli
 2a6:	de bf       	out	0x3e, r29	; 62
 2a8:	0f be       	out	0x3f, r0	; 63
 2aa:	cd bf       	out	0x3d, r28	; 61
}
 2ac:	2b 96       	adiw	r28, 0x0b	; 11
 2ae:	0f b6       	in	r0, 0x3f	; 63
 2b0:	f8 94       	cli
 2b2:	de bf       	out	0x3e, r29	; 62
 2b4:	0f be       	out	0x3f, r0	; 63
 2b6:	cd bf       	out	0x3d, r28	; 61
 2b8:	df 91       	pop	r29
 2ba:	cf 91       	pop	r28
 2bc:	1f 91       	pop	r17
 2be:	0f 91       	pop	r16
 2c0:	ff 90       	pop	r15
 2c2:	ef 90       	pop	r14
 2c4:	08 95       	ret

000002c6 <MCP2515_read>:
	SPI_chipSelect(chipLOW);
	SPI_write(MCP_READ_STATUS);
	uint8_t readStatus = MCP2515_read(SPDR);
	SPI_chipSelect(chipHIGH);
	return readStatus;
}
 2c6:	cf 93       	push	r28
 2c8:	c8 2f       	mov	r28, r24
 2ca:	80 e0       	ldi	r24, 0x00	; 0
 2cc:	90 e0       	ldi	r25, 0x00	; 0
 2ce:	6e d0       	rcall	.+220    	; 0x3ac <SPI_chipSelect>
 2d0:	83 e0       	ldi	r24, 0x03	; 3
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	56 d0       	rcall	.+172    	; 0x382 <SPI_write>
 2d6:	8c 2f       	mov	r24, r28
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	53 d0       	rcall	.+166    	; 0x382 <SPI_write>
 2dc:	57 d0       	rcall	.+174    	; 0x38c <SPI_read>
 2de:	c8 2f       	mov	r28, r24
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	90 e0       	ldi	r25, 0x00	; 0
 2e4:	63 d0       	rcall	.+198    	; 0x3ac <SPI_chipSelect>
 2e6:	8c 2f       	mov	r24, r28
 2e8:	cf 91       	pop	r28
 2ea:	08 95       	ret

000002ec <MCP2515_bitModify>:

void MCP2515_bitModify(uint8_t address ,uint8_t maskByte, uint8_t data){
 2ec:	1f 93       	push	r17
 2ee:	cf 93       	push	r28
 2f0:	df 93       	push	r29
 2f2:	18 2f       	mov	r17, r24
 2f4:	d6 2f       	mov	r29, r22
 2f6:	c4 2f       	mov	r28, r20
	SPI_chipSelect(chipLOW);
 2f8:	80 e0       	ldi	r24, 0x00	; 0
 2fa:	90 e0       	ldi	r25, 0x00	; 0
 2fc:	57 d0       	rcall	.+174    	; 0x3ac <SPI_chipSelect>
	SPI_write(MCP_BITMOD);
 2fe:	85 e0       	ldi	r24, 0x05	; 5
 300:	90 e0       	ldi	r25, 0x00	; 0
 302:	3f d0       	rcall	.+126    	; 0x382 <SPI_write>
	SPI_write(address);
 304:	81 2f       	mov	r24, r17
 306:	90 e0       	ldi	r25, 0x00	; 0
 308:	3c d0       	rcall	.+120    	; 0x382 <SPI_write>
	SPI_write(maskByte);
 30a:	8d 2f       	mov	r24, r29
 30c:	90 e0       	ldi	r25, 0x00	; 0
 30e:	39 d0       	rcall	.+114    	; 0x382 <SPI_write>
	SPI_write(data);
 310:	8c 2f       	mov	r24, r28
 312:	90 e0       	ldi	r25, 0x00	; 0
 314:	36 d0       	rcall	.+108    	; 0x382 <SPI_write>
	SPI_chipSelect(chipHIGH);
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	48 d0       	rcall	.+144    	; 0x3ac <SPI_chipSelect>
}
 31c:	df 91       	pop	r29
 31e:	cf 91       	pop	r28
 320:	1f 91       	pop	r17
 322:	08 95       	ret

00000324 <MCP2515_reset>:

void MCP2515_reset(){
	SPI_chipSelect(chipLOW);
 324:	80 e0       	ldi	r24, 0x00	; 0
 326:	90 e0       	ldi	r25, 0x00	; 0
 328:	41 d0       	rcall	.+130    	; 0x3ac <SPI_chipSelect>
	SPI_write(MCP_RESET);
 32a:	80 ec       	ldi	r24, 0xC0	; 192
 32c:	90 e0       	ldi	r25, 0x00	; 0
 32e:	29 d0       	rcall	.+82     	; 0x382 <SPI_write>
	SPI_chipSelect(chipHIGH);
 330:	81 e0       	ldi	r24, 0x01	; 1
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	3b c0       	rjmp	.+118    	; 0x3ac <SPI_chipSelect>
 336:	08 95       	ret

00000338 <MCP2515_init>:
#define chipLOW 0
#define chipHIGH 1


uint8_t MCP2515_init(){
	SPI_init();
 338:	2f d0       	rcall	.+94     	; 0x398 <SPI_init>
	MCP2515_reset();
 33a:	f4 df       	rcall	.-24     	; 0x324 <MCP2515_reset>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 33c:	87 ea       	ldi	r24, 0xA7	; 167
 33e:	91 e6       	ldi	r25, 0x61	; 97
 340:	01 97       	sbiw	r24, 0x01	; 1
 342:	f1 f7       	brne	.-4      	; 0x340 <MCP2515_init+0x8>
 344:	00 c0       	rjmp	.+0      	; 0x346 <MCP2515_init+0xe>
 346:	00 00       	nop
	_delay_ms(100);
	
}
 348:	08 95       	ret

0000034a <main>:



	
int main(void)
{	
 34a:	cf 93       	push	r28
 34c:	df 93       	push	r29
 34e:	cd b7       	in	r28, 0x3d	; 61
 350:	de b7       	in	r29, 0x3e	; 62
 352:	2b 97       	sbiw	r28, 0x0b	; 11
 354:	0f b6       	in	r0, 0x3f	; 63
 356:	f8 94       	cli
 358:	de bf       	out	0x3e, r29	; 62
 35a:	0f be       	out	0x3f, r0	; 63
 35c:	cd bf       	out	0x3d, r28	; 61
	//set_bit(DDRD, 7); // Read Pin Atmega, output
	//set_bit(DDRE, 1); //Adresse Latch Enable
	//clear_bit(DDRB, 6);
	//clear_bit(DDRB, 7);
	//clear_bit(DDRB, 8);
	USART_init();
 35e:	3c d0       	rcall	.+120    	; 0x3d8 <USART_init>
	CAN_init();
 360:	e1 de       	rcall	.-574    	; 0x124 <CAN_init>
	CAN_message msg;

    while(1)
    {	
		
		CAN_message_recieve(&msg);
 362:	ce 01       	movw	r24, r28
 364:	01 96       	adiw	r24, 0x01	; 1
 366:	ed de       	rcall	.-550    	; 0x142 <CAN_message_recieve>
		message_decoder(msg);
 368:	e9 80       	ldd	r14, Y+1	; 0x01
 36a:	fa 80       	ldd	r15, Y+2	; 0x02
 36c:	0b 81       	ldd	r16, Y+3	; 0x03
 36e:	1c 81       	ldd	r17, Y+4	; 0x04
 370:	2d 81       	ldd	r18, Y+5	; 0x05
 372:	3e 81       	ldd	r19, Y+6	; 0x06
 374:	4f 81       	ldd	r20, Y+7	; 0x07
 376:	58 85       	ldd	r21, Y+8	; 0x08
 378:	69 85       	ldd	r22, Y+9	; 0x09
 37a:	7a 85       	ldd	r23, Y+10	; 0x0a
 37c:	8b 85       	ldd	r24, Y+11	; 0x0b
 37e:	12 df       	rcall	.-476    	; 0x1a4 <message_decoder>
 380:	f0 cf       	rjmp	.-32     	; 0x362 <main+0x18>

00000382 <SPI_write>:


void SPI_write(uint8_t data)
{
	/* Start transmission */
	SPDR = data;
 382:	8e bd       	out	0x2e, r24	; 46
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)))/* _delay_ms(20)*/;
 384:	0d b4       	in	r0, 0x2d	; 45
 386:	07 fe       	sbrs	r0, 7
 388:	fd cf       	rjmp	.-6      	; 0x384 <SPI_write+0x2>

}
 38a:	08 95       	ret

0000038c <SPI_read>:


uint8_t SPI_read()
{
	/* Start transmission */
	SPDR = 0x00;
 38c:	1e bc       	out	0x2e, r1	; 46
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
 38e:	0d b4       	in	r0, 0x2d	; 45
 390:	07 fe       	sbrs	r0, 7
 392:	fd cf       	rjmp	.-6      	; 0x38e <SPI_read+0x2>
	return SPDR;
 394:	8e b5       	in	r24, 0x2e	; 46
}
 396:	08 95       	ret

00000398 <SPI_init>:

void SPI_init(){
	
	/* Set MOSI and SCK output, all others input */
	
	set_bit(DDRB, DDB2);
 398:	22 9a       	sbi	0x04, 2	; 4
	set_bit(DDRB, DDB1);
 39a:	21 9a       	sbi	0x04, 1	; 4
	set_bit(DDRB, DDB7); //set chip-select
 39c:	27 9a       	sbi	0x04, 7	; 4
	set_bit(PORTB, PB3); //internal pull-up
 39e:	2b 9a       	sbi	0x05, 3	; 5
	clear_bit(DDRB,PB3);
 3a0:	23 98       	cbi	0x04, 3	; 4
	set_bit(DDRB,PB0);
 3a2:	20 9a       	sbi	0x04, 0	; 4
	*/
	
	
	/* Enable SPI, Master, set clock rate fck/16 */
	
	SPCR |= (1<<SPE)|(1<<MSTR); //|(1<<SPR0);
 3a4:	8c b5       	in	r24, 0x2c	; 44
 3a6:	80 65       	ori	r24, 0x50	; 80
 3a8:	8c bd       	out	0x2c, r24	; 44
 3aa:	08 95       	ret

000003ac <SPI_chipSelect>:
// 	set_bit(PORTB, PB0);
}

void SPI_chipSelect(uint8_t select){
	
	if(select == 0){
 3ac:	81 11       	cpse	r24, r1
 3ae:	02 c0       	rjmp	.+4      	; 0x3b4 <SPI_chipSelect+0x8>
		clear_bit(PORTB, PB7);
 3b0:	2f 98       	cbi	0x05, 7	; 5
 3b2:	08 95       	ret
	}
	
	else{
		set_bit(PORTB, PB7);
 3b4:	2f 9a       	sbi	0x05, 7	; 5
 3b6:	08 95       	ret

000003b8 <USART_receive>:


unsigned char USART_receive(void)
{
	/* Wait for data to be received */
	while ( !(UCSR0A & (1<<RXC0)) )
 3b8:	e0 ec       	ldi	r30, 0xC0	; 192
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	80 81       	ld	r24, Z
 3be:	88 23       	and	r24, r24
 3c0:	ec f7       	brge	.-6      	; 0x3bc <USART_receive+0x4>
	;
	/* Get and return received data from buffer */
	return UDR0;
 3c2:	80 91 c6 00 	lds	r24, 0x00C6
}
 3c6:	08 95       	ret

000003c8 <USART_transmit>:


void USART_transmit( uint8_t data )
{
	/* Wait for empty transmit buffer */
	while ( !( UCSR0A & (1<<UDRE0)) )
 3c8:	e0 ec       	ldi	r30, 0xC0	; 192
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	90 81       	ld	r25, Z
 3ce:	95 ff       	sbrs	r25, 5
 3d0:	fd cf       	rjmp	.-6      	; 0x3cc <USART_transmit+0x4>
	;

	/* Put data into buffer, sends the data */
	UDR0 = data;
 3d2:	80 93 c6 00 	sts	0x00C6, r24
 3d6:	08 95       	ret

000003d8 <USART_init>:
// 		// Kopiert:
	//UBRR0H = (unsigned char) (ubrr>>8);
	//UBRR0L = (unsigned char) ubrr;
// 	0x0CF
  
	UBRR0L = 0x067;	
 3d8:	87 e6       	ldi	r24, 0x67	; 103
 3da:	80 93 c4 00 	sts	0x00C4, r24
	UBRR0H = 0;
 3de:	10 92 c5 00 	sts	0x00C5, r1
	// Enabler reciever og transmitter
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 3e2:	88 e1       	ldi	r24, 0x18	; 24
 3e4:	80 93 c1 00 	sts	0x00C1, r24
	
	// Setter til 1stop-bit | Setter til 8-bit data | Initialiserer aksessering til UCSRC-registeret
	UCSR0C = (0<<USBS0)|(3<<UCSZ00); //(1<<URSEL0)|
 3e8:	86 e0       	ldi	r24, 0x06	; 6
 3ea:	80 93 c2 00 	sts	0x00C2, r24
	
	fdevopen(USART_transmit, USART_receive);
 3ee:	6c ed       	ldi	r22, 0xDC	; 220
 3f0:	71 e0       	ldi	r23, 0x01	; 1
 3f2:	84 ee       	ldi	r24, 0xE4	; 228
 3f4:	91 e0       	ldi	r25, 0x01	; 1
 3f6:	28 c0       	rjmp	.+80     	; 0x448 <fdevopen>
 3f8:	08 95       	ret

000003fa <__divmodhi4>:
 3fa:	97 fb       	bst	r25, 7
 3fc:	07 2e       	mov	r0, r23
 3fe:	16 f4       	brtc	.+4      	; 0x404 <__divmodhi4+0xa>
 400:	00 94       	com	r0
 402:	06 d0       	rcall	.+12     	; 0x410 <__divmodhi4_neg1>
 404:	77 fd       	sbrc	r23, 7
 406:	08 d0       	rcall	.+16     	; 0x418 <__divmodhi4_neg2>
 408:	0b d0       	rcall	.+22     	; 0x420 <__udivmodhi4>
 40a:	07 fc       	sbrc	r0, 7
 40c:	05 d0       	rcall	.+10     	; 0x418 <__divmodhi4_neg2>
 40e:	3e f4       	brtc	.+14     	; 0x41e <__divmodhi4_exit>

00000410 <__divmodhi4_neg1>:
 410:	90 95       	com	r25
 412:	81 95       	neg	r24
 414:	9f 4f       	sbci	r25, 0xFF	; 255
 416:	08 95       	ret

00000418 <__divmodhi4_neg2>:
 418:	70 95       	com	r23
 41a:	61 95       	neg	r22
 41c:	7f 4f       	sbci	r23, 0xFF	; 255

0000041e <__divmodhi4_exit>:
 41e:	08 95       	ret

00000420 <__udivmodhi4>:
 420:	aa 1b       	sub	r26, r26
 422:	bb 1b       	sub	r27, r27
 424:	51 e1       	ldi	r21, 0x11	; 17
 426:	07 c0       	rjmp	.+14     	; 0x436 <__udivmodhi4_ep>

00000428 <__udivmodhi4_loop>:
 428:	aa 1f       	adc	r26, r26
 42a:	bb 1f       	adc	r27, r27
 42c:	a6 17       	cp	r26, r22
 42e:	b7 07       	cpc	r27, r23
 430:	10 f0       	brcs	.+4      	; 0x436 <__udivmodhi4_ep>
 432:	a6 1b       	sub	r26, r22
 434:	b7 0b       	sbc	r27, r23

00000436 <__udivmodhi4_ep>:
 436:	88 1f       	adc	r24, r24
 438:	99 1f       	adc	r25, r25
 43a:	5a 95       	dec	r21
 43c:	a9 f7       	brne	.-22     	; 0x428 <__udivmodhi4_loop>
 43e:	80 95       	com	r24
 440:	90 95       	com	r25
 442:	bc 01       	movw	r22, r24
 444:	cd 01       	movw	r24, r26
 446:	08 95       	ret

00000448 <fdevopen>:
 448:	0f 93       	push	r16
 44a:	1f 93       	push	r17
 44c:	cf 93       	push	r28
 44e:	df 93       	push	r29
 450:	ec 01       	movw	r28, r24
 452:	8b 01       	movw	r16, r22
 454:	00 97       	sbiw	r24, 0x00	; 0
 456:	31 f4       	brne	.+12     	; 0x464 <fdevopen+0x1c>
 458:	61 15       	cp	r22, r1
 45a:	71 05       	cpc	r23, r1
 45c:	19 f4       	brne	.+6      	; 0x464 <fdevopen+0x1c>
 45e:	80 e0       	ldi	r24, 0x00	; 0
 460:	90 e0       	ldi	r25, 0x00	; 0
 462:	37 c0       	rjmp	.+110    	; 0x4d2 <fdevopen+0x8a>
 464:	6e e0       	ldi	r22, 0x0E	; 14
 466:	70 e0       	ldi	r23, 0x00	; 0
 468:	81 e0       	ldi	r24, 0x01	; 1
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	36 d2       	rcall	.+1132   	; 0x8da <calloc>
 46e:	fc 01       	movw	r30, r24
 470:	00 97       	sbiw	r24, 0x00	; 0
 472:	a9 f3       	breq	.-22     	; 0x45e <fdevopen+0x16>
 474:	80 e8       	ldi	r24, 0x80	; 128
 476:	83 83       	std	Z+3, r24	; 0x03
 478:	01 15       	cp	r16, r1
 47a:	11 05       	cpc	r17, r1
 47c:	71 f0       	breq	.+28     	; 0x49a <fdevopen+0x52>
 47e:	13 87       	std	Z+11, r17	; 0x0b
 480:	02 87       	std	Z+10, r16	; 0x0a
 482:	81 e8       	ldi	r24, 0x81	; 129
 484:	83 83       	std	Z+3, r24	; 0x03
 486:	80 91 34 02 	lds	r24, 0x0234
 48a:	90 91 35 02 	lds	r25, 0x0235
 48e:	89 2b       	or	r24, r25
 490:	21 f4       	brne	.+8      	; 0x49a <fdevopen+0x52>
 492:	f0 93 35 02 	sts	0x0235, r31
 496:	e0 93 34 02 	sts	0x0234, r30
 49a:	20 97       	sbiw	r28, 0x00	; 0
 49c:	c9 f0       	breq	.+50     	; 0x4d0 <fdevopen+0x88>
 49e:	d1 87       	std	Z+9, r29	; 0x09
 4a0:	c0 87       	std	Z+8, r28	; 0x08
 4a2:	83 81       	ldd	r24, Z+3	; 0x03
 4a4:	82 60       	ori	r24, 0x02	; 2
 4a6:	83 83       	std	Z+3, r24	; 0x03
 4a8:	80 91 36 02 	lds	r24, 0x0236
 4ac:	90 91 37 02 	lds	r25, 0x0237
 4b0:	89 2b       	or	r24, r25
 4b2:	71 f4       	brne	.+28     	; 0x4d0 <fdevopen+0x88>
 4b4:	f0 93 37 02 	sts	0x0237, r31
 4b8:	e0 93 36 02 	sts	0x0236, r30
 4bc:	80 91 38 02 	lds	r24, 0x0238
 4c0:	90 91 39 02 	lds	r25, 0x0239
 4c4:	89 2b       	or	r24, r25
 4c6:	21 f4       	brne	.+8      	; 0x4d0 <fdevopen+0x88>
 4c8:	f0 93 39 02 	sts	0x0239, r31
 4cc:	e0 93 38 02 	sts	0x0238, r30
 4d0:	cf 01       	movw	r24, r30
 4d2:	df 91       	pop	r29
 4d4:	cf 91       	pop	r28
 4d6:	1f 91       	pop	r17
 4d8:	0f 91       	pop	r16
 4da:	08 95       	ret

000004dc <printf>:
 4dc:	cf 93       	push	r28
 4de:	df 93       	push	r29
 4e0:	cd b7       	in	r28, 0x3d	; 61
 4e2:	de b7       	in	r29, 0x3e	; 62
 4e4:	fe 01       	movw	r30, r28
 4e6:	36 96       	adiw	r30, 0x06	; 6
 4e8:	61 91       	ld	r22, Z+
 4ea:	71 91       	ld	r23, Z+
 4ec:	af 01       	movw	r20, r30
 4ee:	80 91 36 02 	lds	r24, 0x0236
 4f2:	90 91 37 02 	lds	r25, 0x0237
 4f6:	03 d0       	rcall	.+6      	; 0x4fe <vfprintf>
 4f8:	df 91       	pop	r29
 4fa:	cf 91       	pop	r28
 4fc:	08 95       	ret

000004fe <vfprintf>:
 4fe:	2f 92       	push	r2
 500:	3f 92       	push	r3
 502:	4f 92       	push	r4
 504:	5f 92       	push	r5
 506:	6f 92       	push	r6
 508:	7f 92       	push	r7
 50a:	8f 92       	push	r8
 50c:	9f 92       	push	r9
 50e:	af 92       	push	r10
 510:	bf 92       	push	r11
 512:	cf 92       	push	r12
 514:	df 92       	push	r13
 516:	ef 92       	push	r14
 518:	ff 92       	push	r15
 51a:	0f 93       	push	r16
 51c:	1f 93       	push	r17
 51e:	cf 93       	push	r28
 520:	df 93       	push	r29
 522:	cd b7       	in	r28, 0x3d	; 61
 524:	de b7       	in	r29, 0x3e	; 62
 526:	2c 97       	sbiw	r28, 0x0c	; 12
 528:	0f b6       	in	r0, 0x3f	; 63
 52a:	f8 94       	cli
 52c:	de bf       	out	0x3e, r29	; 62
 52e:	0f be       	out	0x3f, r0	; 63
 530:	cd bf       	out	0x3d, r28	; 61
 532:	7c 01       	movw	r14, r24
 534:	6b 01       	movw	r12, r22
 536:	8a 01       	movw	r16, r20
 538:	fc 01       	movw	r30, r24
 53a:	17 82       	std	Z+7, r1	; 0x07
 53c:	16 82       	std	Z+6, r1	; 0x06
 53e:	83 81       	ldd	r24, Z+3	; 0x03
 540:	81 ff       	sbrs	r24, 1
 542:	b0 c1       	rjmp	.+864    	; 0x8a4 <vfprintf+0x3a6>
 544:	ce 01       	movw	r24, r28
 546:	01 96       	adiw	r24, 0x01	; 1
 548:	4c 01       	movw	r8, r24
 54a:	f7 01       	movw	r30, r14
 54c:	93 81       	ldd	r25, Z+3	; 0x03
 54e:	f6 01       	movw	r30, r12
 550:	93 fd       	sbrc	r25, 3
 552:	85 91       	lpm	r24, Z+
 554:	93 ff       	sbrs	r25, 3
 556:	81 91       	ld	r24, Z+
 558:	6f 01       	movw	r12, r30
 55a:	88 23       	and	r24, r24
 55c:	09 f4       	brne	.+2      	; 0x560 <vfprintf+0x62>
 55e:	9e c1       	rjmp	.+828    	; 0x89c <vfprintf+0x39e>
 560:	85 32       	cpi	r24, 0x25	; 37
 562:	39 f4       	brne	.+14     	; 0x572 <vfprintf+0x74>
 564:	93 fd       	sbrc	r25, 3
 566:	85 91       	lpm	r24, Z+
 568:	93 ff       	sbrs	r25, 3
 56a:	81 91       	ld	r24, Z+
 56c:	6f 01       	movw	r12, r30
 56e:	85 32       	cpi	r24, 0x25	; 37
 570:	21 f4       	brne	.+8      	; 0x57a <vfprintf+0x7c>
 572:	b7 01       	movw	r22, r14
 574:	90 e0       	ldi	r25, 0x00	; 0
 576:	0f d3       	rcall	.+1566   	; 0xb96 <fputc>
 578:	e8 cf       	rjmp	.-48     	; 0x54a <vfprintf+0x4c>
 57a:	51 2c       	mov	r5, r1
 57c:	31 2c       	mov	r3, r1
 57e:	20 e0       	ldi	r18, 0x00	; 0
 580:	20 32       	cpi	r18, 0x20	; 32
 582:	a0 f4       	brcc	.+40     	; 0x5ac <vfprintf+0xae>
 584:	8b 32       	cpi	r24, 0x2B	; 43
 586:	69 f0       	breq	.+26     	; 0x5a2 <vfprintf+0xa4>
 588:	30 f4       	brcc	.+12     	; 0x596 <vfprintf+0x98>
 58a:	80 32       	cpi	r24, 0x20	; 32
 58c:	59 f0       	breq	.+22     	; 0x5a4 <vfprintf+0xa6>
 58e:	83 32       	cpi	r24, 0x23	; 35
 590:	69 f4       	brne	.+26     	; 0x5ac <vfprintf+0xae>
 592:	20 61       	ori	r18, 0x10	; 16
 594:	2c c0       	rjmp	.+88     	; 0x5ee <vfprintf+0xf0>
 596:	8d 32       	cpi	r24, 0x2D	; 45
 598:	39 f0       	breq	.+14     	; 0x5a8 <vfprintf+0xaa>
 59a:	80 33       	cpi	r24, 0x30	; 48
 59c:	39 f4       	brne	.+14     	; 0x5ac <vfprintf+0xae>
 59e:	21 60       	ori	r18, 0x01	; 1
 5a0:	26 c0       	rjmp	.+76     	; 0x5ee <vfprintf+0xf0>
 5a2:	22 60       	ori	r18, 0x02	; 2
 5a4:	24 60       	ori	r18, 0x04	; 4
 5a6:	23 c0       	rjmp	.+70     	; 0x5ee <vfprintf+0xf0>
 5a8:	28 60       	ori	r18, 0x08	; 8
 5aa:	21 c0       	rjmp	.+66     	; 0x5ee <vfprintf+0xf0>
 5ac:	27 fd       	sbrc	r18, 7
 5ae:	27 c0       	rjmp	.+78     	; 0x5fe <vfprintf+0x100>
 5b0:	30 ed       	ldi	r19, 0xD0	; 208
 5b2:	38 0f       	add	r19, r24
 5b4:	3a 30       	cpi	r19, 0x0A	; 10
 5b6:	78 f4       	brcc	.+30     	; 0x5d6 <vfprintf+0xd8>
 5b8:	26 ff       	sbrs	r18, 6
 5ba:	06 c0       	rjmp	.+12     	; 0x5c8 <vfprintf+0xca>
 5bc:	fa e0       	ldi	r31, 0x0A	; 10
 5be:	5f 9e       	mul	r5, r31
 5c0:	30 0d       	add	r19, r0
 5c2:	11 24       	eor	r1, r1
 5c4:	53 2e       	mov	r5, r19
 5c6:	13 c0       	rjmp	.+38     	; 0x5ee <vfprintf+0xf0>
 5c8:	8a e0       	ldi	r24, 0x0A	; 10
 5ca:	38 9e       	mul	r3, r24
 5cc:	30 0d       	add	r19, r0
 5ce:	11 24       	eor	r1, r1
 5d0:	33 2e       	mov	r3, r19
 5d2:	20 62       	ori	r18, 0x20	; 32
 5d4:	0c c0       	rjmp	.+24     	; 0x5ee <vfprintf+0xf0>
 5d6:	8e 32       	cpi	r24, 0x2E	; 46
 5d8:	21 f4       	brne	.+8      	; 0x5e2 <vfprintf+0xe4>
 5da:	26 fd       	sbrc	r18, 6
 5dc:	5f c1       	rjmp	.+702    	; 0x89c <vfprintf+0x39e>
 5de:	20 64       	ori	r18, 0x40	; 64
 5e0:	06 c0       	rjmp	.+12     	; 0x5ee <vfprintf+0xf0>
 5e2:	8c 36       	cpi	r24, 0x6C	; 108
 5e4:	11 f4       	brne	.+4      	; 0x5ea <vfprintf+0xec>
 5e6:	20 68       	ori	r18, 0x80	; 128
 5e8:	02 c0       	rjmp	.+4      	; 0x5ee <vfprintf+0xf0>
 5ea:	88 36       	cpi	r24, 0x68	; 104
 5ec:	41 f4       	brne	.+16     	; 0x5fe <vfprintf+0x100>
 5ee:	f6 01       	movw	r30, r12
 5f0:	93 fd       	sbrc	r25, 3
 5f2:	85 91       	lpm	r24, Z+
 5f4:	93 ff       	sbrs	r25, 3
 5f6:	81 91       	ld	r24, Z+
 5f8:	6f 01       	movw	r12, r30
 5fa:	81 11       	cpse	r24, r1
 5fc:	c1 cf       	rjmp	.-126    	; 0x580 <vfprintf+0x82>
 5fe:	98 2f       	mov	r25, r24
 600:	9f 7d       	andi	r25, 0xDF	; 223
 602:	95 54       	subi	r25, 0x45	; 69
 604:	93 30       	cpi	r25, 0x03	; 3
 606:	28 f4       	brcc	.+10     	; 0x612 <vfprintf+0x114>
 608:	0c 5f       	subi	r16, 0xFC	; 252
 60a:	1f 4f       	sbci	r17, 0xFF	; 255
 60c:	ff e3       	ldi	r31, 0x3F	; 63
 60e:	f9 83       	std	Y+1, r31	; 0x01
 610:	0d c0       	rjmp	.+26     	; 0x62c <vfprintf+0x12e>
 612:	83 36       	cpi	r24, 0x63	; 99
 614:	31 f0       	breq	.+12     	; 0x622 <vfprintf+0x124>
 616:	83 37       	cpi	r24, 0x73	; 115
 618:	71 f0       	breq	.+28     	; 0x636 <vfprintf+0x138>
 61a:	83 35       	cpi	r24, 0x53	; 83
 61c:	09 f0       	breq	.+2      	; 0x620 <vfprintf+0x122>
 61e:	57 c0       	rjmp	.+174    	; 0x6ce <vfprintf+0x1d0>
 620:	21 c0       	rjmp	.+66     	; 0x664 <vfprintf+0x166>
 622:	f8 01       	movw	r30, r16
 624:	80 81       	ld	r24, Z
 626:	89 83       	std	Y+1, r24	; 0x01
 628:	0e 5f       	subi	r16, 0xFE	; 254
 62a:	1f 4f       	sbci	r17, 0xFF	; 255
 62c:	44 24       	eor	r4, r4
 62e:	43 94       	inc	r4
 630:	51 2c       	mov	r5, r1
 632:	54 01       	movw	r10, r8
 634:	14 c0       	rjmp	.+40     	; 0x65e <vfprintf+0x160>
 636:	38 01       	movw	r6, r16
 638:	f2 e0       	ldi	r31, 0x02	; 2
 63a:	6f 0e       	add	r6, r31
 63c:	71 1c       	adc	r7, r1
 63e:	f8 01       	movw	r30, r16
 640:	a0 80       	ld	r10, Z
 642:	b1 80       	ldd	r11, Z+1	; 0x01
 644:	26 ff       	sbrs	r18, 6
 646:	03 c0       	rjmp	.+6      	; 0x64e <vfprintf+0x150>
 648:	65 2d       	mov	r22, r5
 64a:	70 e0       	ldi	r23, 0x00	; 0
 64c:	02 c0       	rjmp	.+4      	; 0x652 <vfprintf+0x154>
 64e:	6f ef       	ldi	r22, 0xFF	; 255
 650:	7f ef       	ldi	r23, 0xFF	; 255
 652:	c5 01       	movw	r24, r10
 654:	2c 87       	std	Y+12, r18	; 0x0c
 656:	94 d2       	rcall	.+1320   	; 0xb80 <strnlen>
 658:	2c 01       	movw	r4, r24
 65a:	83 01       	movw	r16, r6
 65c:	2c 85       	ldd	r18, Y+12	; 0x0c
 65e:	2f 77       	andi	r18, 0x7F	; 127
 660:	22 2e       	mov	r2, r18
 662:	16 c0       	rjmp	.+44     	; 0x690 <vfprintf+0x192>
 664:	38 01       	movw	r6, r16
 666:	f2 e0       	ldi	r31, 0x02	; 2
 668:	6f 0e       	add	r6, r31
 66a:	71 1c       	adc	r7, r1
 66c:	f8 01       	movw	r30, r16
 66e:	a0 80       	ld	r10, Z
 670:	b1 80       	ldd	r11, Z+1	; 0x01
 672:	26 ff       	sbrs	r18, 6
 674:	03 c0       	rjmp	.+6      	; 0x67c <vfprintf+0x17e>
 676:	65 2d       	mov	r22, r5
 678:	70 e0       	ldi	r23, 0x00	; 0
 67a:	02 c0       	rjmp	.+4      	; 0x680 <vfprintf+0x182>
 67c:	6f ef       	ldi	r22, 0xFF	; 255
 67e:	7f ef       	ldi	r23, 0xFF	; 255
 680:	c5 01       	movw	r24, r10
 682:	2c 87       	std	Y+12, r18	; 0x0c
 684:	6b d2       	rcall	.+1238   	; 0xb5c <strnlen_P>
 686:	2c 01       	movw	r4, r24
 688:	2c 85       	ldd	r18, Y+12	; 0x0c
 68a:	20 68       	ori	r18, 0x80	; 128
 68c:	22 2e       	mov	r2, r18
 68e:	83 01       	movw	r16, r6
 690:	23 fc       	sbrc	r2, 3
 692:	19 c0       	rjmp	.+50     	; 0x6c6 <vfprintf+0x1c8>
 694:	83 2d       	mov	r24, r3
 696:	90 e0       	ldi	r25, 0x00	; 0
 698:	48 16       	cp	r4, r24
 69a:	59 06       	cpc	r5, r25
 69c:	a0 f4       	brcc	.+40     	; 0x6c6 <vfprintf+0x1c8>
 69e:	b7 01       	movw	r22, r14
 6a0:	80 e2       	ldi	r24, 0x20	; 32
 6a2:	90 e0       	ldi	r25, 0x00	; 0
 6a4:	78 d2       	rcall	.+1264   	; 0xb96 <fputc>
 6a6:	3a 94       	dec	r3
 6a8:	f5 cf       	rjmp	.-22     	; 0x694 <vfprintf+0x196>
 6aa:	f5 01       	movw	r30, r10
 6ac:	27 fc       	sbrc	r2, 7
 6ae:	85 91       	lpm	r24, Z+
 6b0:	27 fe       	sbrs	r2, 7
 6b2:	81 91       	ld	r24, Z+
 6b4:	5f 01       	movw	r10, r30
 6b6:	b7 01       	movw	r22, r14
 6b8:	90 e0       	ldi	r25, 0x00	; 0
 6ba:	6d d2       	rcall	.+1242   	; 0xb96 <fputc>
 6bc:	31 10       	cpse	r3, r1
 6be:	3a 94       	dec	r3
 6c0:	f1 e0       	ldi	r31, 0x01	; 1
 6c2:	4f 1a       	sub	r4, r31
 6c4:	51 08       	sbc	r5, r1
 6c6:	41 14       	cp	r4, r1
 6c8:	51 04       	cpc	r5, r1
 6ca:	79 f7       	brne	.-34     	; 0x6aa <vfprintf+0x1ac>
 6cc:	de c0       	rjmp	.+444    	; 0x88a <vfprintf+0x38c>
 6ce:	84 36       	cpi	r24, 0x64	; 100
 6d0:	11 f0       	breq	.+4      	; 0x6d6 <vfprintf+0x1d8>
 6d2:	89 36       	cpi	r24, 0x69	; 105
 6d4:	31 f5       	brne	.+76     	; 0x722 <vfprintf+0x224>
 6d6:	f8 01       	movw	r30, r16
 6d8:	27 ff       	sbrs	r18, 7
 6da:	07 c0       	rjmp	.+14     	; 0x6ea <vfprintf+0x1ec>
 6dc:	60 81       	ld	r22, Z
 6de:	71 81       	ldd	r23, Z+1	; 0x01
 6e0:	82 81       	ldd	r24, Z+2	; 0x02
 6e2:	93 81       	ldd	r25, Z+3	; 0x03
 6e4:	0c 5f       	subi	r16, 0xFC	; 252
 6e6:	1f 4f       	sbci	r17, 0xFF	; 255
 6e8:	08 c0       	rjmp	.+16     	; 0x6fa <vfprintf+0x1fc>
 6ea:	60 81       	ld	r22, Z
 6ec:	71 81       	ldd	r23, Z+1	; 0x01
 6ee:	88 27       	eor	r24, r24
 6f0:	77 fd       	sbrc	r23, 7
 6f2:	80 95       	com	r24
 6f4:	98 2f       	mov	r25, r24
 6f6:	0e 5f       	subi	r16, 0xFE	; 254
 6f8:	1f 4f       	sbci	r17, 0xFF	; 255
 6fa:	2f 76       	andi	r18, 0x6F	; 111
 6fc:	b2 2e       	mov	r11, r18
 6fe:	97 ff       	sbrs	r25, 7
 700:	09 c0       	rjmp	.+18     	; 0x714 <vfprintf+0x216>
 702:	90 95       	com	r25
 704:	80 95       	com	r24
 706:	70 95       	com	r23
 708:	61 95       	neg	r22
 70a:	7f 4f       	sbci	r23, 0xFF	; 255
 70c:	8f 4f       	sbci	r24, 0xFF	; 255
 70e:	9f 4f       	sbci	r25, 0xFF	; 255
 710:	20 68       	ori	r18, 0x80	; 128
 712:	b2 2e       	mov	r11, r18
 714:	2a e0       	ldi	r18, 0x0A	; 10
 716:	30 e0       	ldi	r19, 0x00	; 0
 718:	a4 01       	movw	r20, r8
 71a:	6f d2       	rcall	.+1246   	; 0xbfa <__ultoa_invert>
 71c:	a8 2e       	mov	r10, r24
 71e:	a8 18       	sub	r10, r8
 720:	43 c0       	rjmp	.+134    	; 0x7a8 <vfprintf+0x2aa>
 722:	85 37       	cpi	r24, 0x75	; 117
 724:	29 f4       	brne	.+10     	; 0x730 <vfprintf+0x232>
 726:	2f 7e       	andi	r18, 0xEF	; 239
 728:	b2 2e       	mov	r11, r18
 72a:	2a e0       	ldi	r18, 0x0A	; 10
 72c:	30 e0       	ldi	r19, 0x00	; 0
 72e:	25 c0       	rjmp	.+74     	; 0x77a <vfprintf+0x27c>
 730:	f2 2f       	mov	r31, r18
 732:	f9 7f       	andi	r31, 0xF9	; 249
 734:	bf 2e       	mov	r11, r31
 736:	8f 36       	cpi	r24, 0x6F	; 111
 738:	c1 f0       	breq	.+48     	; 0x76a <vfprintf+0x26c>
 73a:	18 f4       	brcc	.+6      	; 0x742 <vfprintf+0x244>
 73c:	88 35       	cpi	r24, 0x58	; 88
 73e:	79 f0       	breq	.+30     	; 0x75e <vfprintf+0x260>
 740:	ad c0       	rjmp	.+346    	; 0x89c <vfprintf+0x39e>
 742:	80 37       	cpi	r24, 0x70	; 112
 744:	19 f0       	breq	.+6      	; 0x74c <vfprintf+0x24e>
 746:	88 37       	cpi	r24, 0x78	; 120
 748:	21 f0       	breq	.+8      	; 0x752 <vfprintf+0x254>
 74a:	a8 c0       	rjmp	.+336    	; 0x89c <vfprintf+0x39e>
 74c:	2f 2f       	mov	r18, r31
 74e:	20 61       	ori	r18, 0x10	; 16
 750:	b2 2e       	mov	r11, r18
 752:	b4 fe       	sbrs	r11, 4
 754:	0d c0       	rjmp	.+26     	; 0x770 <vfprintf+0x272>
 756:	8b 2d       	mov	r24, r11
 758:	84 60       	ori	r24, 0x04	; 4
 75a:	b8 2e       	mov	r11, r24
 75c:	09 c0       	rjmp	.+18     	; 0x770 <vfprintf+0x272>
 75e:	24 ff       	sbrs	r18, 4
 760:	0a c0       	rjmp	.+20     	; 0x776 <vfprintf+0x278>
 762:	9f 2f       	mov	r25, r31
 764:	96 60       	ori	r25, 0x06	; 6
 766:	b9 2e       	mov	r11, r25
 768:	06 c0       	rjmp	.+12     	; 0x776 <vfprintf+0x278>
 76a:	28 e0       	ldi	r18, 0x08	; 8
 76c:	30 e0       	ldi	r19, 0x00	; 0
 76e:	05 c0       	rjmp	.+10     	; 0x77a <vfprintf+0x27c>
 770:	20 e1       	ldi	r18, 0x10	; 16
 772:	30 e0       	ldi	r19, 0x00	; 0
 774:	02 c0       	rjmp	.+4      	; 0x77a <vfprintf+0x27c>
 776:	20 e1       	ldi	r18, 0x10	; 16
 778:	32 e0       	ldi	r19, 0x02	; 2
 77a:	f8 01       	movw	r30, r16
 77c:	b7 fe       	sbrs	r11, 7
 77e:	07 c0       	rjmp	.+14     	; 0x78e <vfprintf+0x290>
 780:	60 81       	ld	r22, Z
 782:	71 81       	ldd	r23, Z+1	; 0x01
 784:	82 81       	ldd	r24, Z+2	; 0x02
 786:	93 81       	ldd	r25, Z+3	; 0x03
 788:	0c 5f       	subi	r16, 0xFC	; 252
 78a:	1f 4f       	sbci	r17, 0xFF	; 255
 78c:	06 c0       	rjmp	.+12     	; 0x79a <vfprintf+0x29c>
 78e:	60 81       	ld	r22, Z
 790:	71 81       	ldd	r23, Z+1	; 0x01
 792:	80 e0       	ldi	r24, 0x00	; 0
 794:	90 e0       	ldi	r25, 0x00	; 0
 796:	0e 5f       	subi	r16, 0xFE	; 254
 798:	1f 4f       	sbci	r17, 0xFF	; 255
 79a:	a4 01       	movw	r20, r8
 79c:	2e d2       	rcall	.+1116   	; 0xbfa <__ultoa_invert>
 79e:	a8 2e       	mov	r10, r24
 7a0:	a8 18       	sub	r10, r8
 7a2:	fb 2d       	mov	r31, r11
 7a4:	ff 77       	andi	r31, 0x7F	; 127
 7a6:	bf 2e       	mov	r11, r31
 7a8:	b6 fe       	sbrs	r11, 6
 7aa:	0b c0       	rjmp	.+22     	; 0x7c2 <vfprintf+0x2c4>
 7ac:	2b 2d       	mov	r18, r11
 7ae:	2e 7f       	andi	r18, 0xFE	; 254
 7b0:	a5 14       	cp	r10, r5
 7b2:	50 f4       	brcc	.+20     	; 0x7c8 <vfprintf+0x2ca>
 7b4:	b4 fe       	sbrs	r11, 4
 7b6:	0a c0       	rjmp	.+20     	; 0x7cc <vfprintf+0x2ce>
 7b8:	b2 fc       	sbrc	r11, 2
 7ba:	08 c0       	rjmp	.+16     	; 0x7cc <vfprintf+0x2ce>
 7bc:	2b 2d       	mov	r18, r11
 7be:	2e 7e       	andi	r18, 0xEE	; 238
 7c0:	05 c0       	rjmp	.+10     	; 0x7cc <vfprintf+0x2ce>
 7c2:	7a 2c       	mov	r7, r10
 7c4:	2b 2d       	mov	r18, r11
 7c6:	03 c0       	rjmp	.+6      	; 0x7ce <vfprintf+0x2d0>
 7c8:	7a 2c       	mov	r7, r10
 7ca:	01 c0       	rjmp	.+2      	; 0x7ce <vfprintf+0x2d0>
 7cc:	75 2c       	mov	r7, r5
 7ce:	24 ff       	sbrs	r18, 4
 7d0:	0d c0       	rjmp	.+26     	; 0x7ec <vfprintf+0x2ee>
 7d2:	fe 01       	movw	r30, r28
 7d4:	ea 0d       	add	r30, r10
 7d6:	f1 1d       	adc	r31, r1
 7d8:	80 81       	ld	r24, Z
 7da:	80 33       	cpi	r24, 0x30	; 48
 7dc:	11 f4       	brne	.+4      	; 0x7e2 <vfprintf+0x2e4>
 7de:	29 7e       	andi	r18, 0xE9	; 233
 7e0:	09 c0       	rjmp	.+18     	; 0x7f4 <vfprintf+0x2f6>
 7e2:	22 ff       	sbrs	r18, 2
 7e4:	06 c0       	rjmp	.+12     	; 0x7f2 <vfprintf+0x2f4>
 7e6:	73 94       	inc	r7
 7e8:	73 94       	inc	r7
 7ea:	04 c0       	rjmp	.+8      	; 0x7f4 <vfprintf+0x2f6>
 7ec:	82 2f       	mov	r24, r18
 7ee:	86 78       	andi	r24, 0x86	; 134
 7f0:	09 f0       	breq	.+2      	; 0x7f4 <vfprintf+0x2f6>
 7f2:	73 94       	inc	r7
 7f4:	23 fd       	sbrc	r18, 3
 7f6:	12 c0       	rjmp	.+36     	; 0x81c <vfprintf+0x31e>
 7f8:	20 ff       	sbrs	r18, 0
 7fa:	06 c0       	rjmp	.+12     	; 0x808 <vfprintf+0x30a>
 7fc:	5a 2c       	mov	r5, r10
 7fe:	73 14       	cp	r7, r3
 800:	18 f4       	brcc	.+6      	; 0x808 <vfprintf+0x30a>
 802:	53 0c       	add	r5, r3
 804:	57 18       	sub	r5, r7
 806:	73 2c       	mov	r7, r3
 808:	73 14       	cp	r7, r3
 80a:	60 f4       	brcc	.+24     	; 0x824 <vfprintf+0x326>
 80c:	b7 01       	movw	r22, r14
 80e:	80 e2       	ldi	r24, 0x20	; 32
 810:	90 e0       	ldi	r25, 0x00	; 0
 812:	2c 87       	std	Y+12, r18	; 0x0c
 814:	c0 d1       	rcall	.+896    	; 0xb96 <fputc>
 816:	73 94       	inc	r7
 818:	2c 85       	ldd	r18, Y+12	; 0x0c
 81a:	f6 cf       	rjmp	.-20     	; 0x808 <vfprintf+0x30a>
 81c:	73 14       	cp	r7, r3
 81e:	10 f4       	brcc	.+4      	; 0x824 <vfprintf+0x326>
 820:	37 18       	sub	r3, r7
 822:	01 c0       	rjmp	.+2      	; 0x826 <vfprintf+0x328>
 824:	31 2c       	mov	r3, r1
 826:	24 ff       	sbrs	r18, 4
 828:	11 c0       	rjmp	.+34     	; 0x84c <vfprintf+0x34e>
 82a:	b7 01       	movw	r22, r14
 82c:	80 e3       	ldi	r24, 0x30	; 48
 82e:	90 e0       	ldi	r25, 0x00	; 0
 830:	2c 87       	std	Y+12, r18	; 0x0c
 832:	b1 d1       	rcall	.+866    	; 0xb96 <fputc>
 834:	2c 85       	ldd	r18, Y+12	; 0x0c
 836:	22 ff       	sbrs	r18, 2
 838:	16 c0       	rjmp	.+44     	; 0x866 <vfprintf+0x368>
 83a:	21 ff       	sbrs	r18, 1
 83c:	03 c0       	rjmp	.+6      	; 0x844 <vfprintf+0x346>
 83e:	88 e5       	ldi	r24, 0x58	; 88
 840:	90 e0       	ldi	r25, 0x00	; 0
 842:	02 c0       	rjmp	.+4      	; 0x848 <vfprintf+0x34a>
 844:	88 e7       	ldi	r24, 0x78	; 120
 846:	90 e0       	ldi	r25, 0x00	; 0
 848:	b7 01       	movw	r22, r14
 84a:	0c c0       	rjmp	.+24     	; 0x864 <vfprintf+0x366>
 84c:	82 2f       	mov	r24, r18
 84e:	86 78       	andi	r24, 0x86	; 134
 850:	51 f0       	breq	.+20     	; 0x866 <vfprintf+0x368>
 852:	21 fd       	sbrc	r18, 1
 854:	02 c0       	rjmp	.+4      	; 0x85a <vfprintf+0x35c>
 856:	80 e2       	ldi	r24, 0x20	; 32
 858:	01 c0       	rjmp	.+2      	; 0x85c <vfprintf+0x35e>
 85a:	8b e2       	ldi	r24, 0x2B	; 43
 85c:	27 fd       	sbrc	r18, 7
 85e:	8d e2       	ldi	r24, 0x2D	; 45
 860:	b7 01       	movw	r22, r14
 862:	90 e0       	ldi	r25, 0x00	; 0
 864:	98 d1       	rcall	.+816    	; 0xb96 <fputc>
 866:	a5 14       	cp	r10, r5
 868:	30 f4       	brcc	.+12     	; 0x876 <vfprintf+0x378>
 86a:	b7 01       	movw	r22, r14
 86c:	80 e3       	ldi	r24, 0x30	; 48
 86e:	90 e0       	ldi	r25, 0x00	; 0
 870:	92 d1       	rcall	.+804    	; 0xb96 <fputc>
 872:	5a 94       	dec	r5
 874:	f8 cf       	rjmp	.-16     	; 0x866 <vfprintf+0x368>
 876:	aa 94       	dec	r10
 878:	f4 01       	movw	r30, r8
 87a:	ea 0d       	add	r30, r10
 87c:	f1 1d       	adc	r31, r1
 87e:	80 81       	ld	r24, Z
 880:	b7 01       	movw	r22, r14
 882:	90 e0       	ldi	r25, 0x00	; 0
 884:	88 d1       	rcall	.+784    	; 0xb96 <fputc>
 886:	a1 10       	cpse	r10, r1
 888:	f6 cf       	rjmp	.-20     	; 0x876 <vfprintf+0x378>
 88a:	33 20       	and	r3, r3
 88c:	09 f4       	brne	.+2      	; 0x890 <vfprintf+0x392>
 88e:	5d ce       	rjmp	.-838    	; 0x54a <vfprintf+0x4c>
 890:	b7 01       	movw	r22, r14
 892:	80 e2       	ldi	r24, 0x20	; 32
 894:	90 e0       	ldi	r25, 0x00	; 0
 896:	7f d1       	rcall	.+766    	; 0xb96 <fputc>
 898:	3a 94       	dec	r3
 89a:	f7 cf       	rjmp	.-18     	; 0x88a <vfprintf+0x38c>
 89c:	f7 01       	movw	r30, r14
 89e:	86 81       	ldd	r24, Z+6	; 0x06
 8a0:	97 81       	ldd	r25, Z+7	; 0x07
 8a2:	02 c0       	rjmp	.+4      	; 0x8a8 <vfprintf+0x3aa>
 8a4:	8f ef       	ldi	r24, 0xFF	; 255
 8a6:	9f ef       	ldi	r25, 0xFF	; 255
 8a8:	2c 96       	adiw	r28, 0x0c	; 12
 8aa:	0f b6       	in	r0, 0x3f	; 63
 8ac:	f8 94       	cli
 8ae:	de bf       	out	0x3e, r29	; 62
 8b0:	0f be       	out	0x3f, r0	; 63
 8b2:	cd bf       	out	0x3d, r28	; 61
 8b4:	df 91       	pop	r29
 8b6:	cf 91       	pop	r28
 8b8:	1f 91       	pop	r17
 8ba:	0f 91       	pop	r16
 8bc:	ff 90       	pop	r15
 8be:	ef 90       	pop	r14
 8c0:	df 90       	pop	r13
 8c2:	cf 90       	pop	r12
 8c4:	bf 90       	pop	r11
 8c6:	af 90       	pop	r10
 8c8:	9f 90       	pop	r9
 8ca:	8f 90       	pop	r8
 8cc:	7f 90       	pop	r7
 8ce:	6f 90       	pop	r6
 8d0:	5f 90       	pop	r5
 8d2:	4f 90       	pop	r4
 8d4:	3f 90       	pop	r3
 8d6:	2f 90       	pop	r2
 8d8:	08 95       	ret

000008da <calloc>:
 8da:	0f 93       	push	r16
 8dc:	1f 93       	push	r17
 8de:	cf 93       	push	r28
 8e0:	df 93       	push	r29
 8e2:	86 9f       	mul	r24, r22
 8e4:	80 01       	movw	r16, r0
 8e6:	87 9f       	mul	r24, r23
 8e8:	10 0d       	add	r17, r0
 8ea:	96 9f       	mul	r25, r22
 8ec:	10 0d       	add	r17, r0
 8ee:	11 24       	eor	r1, r1
 8f0:	c8 01       	movw	r24, r16
 8f2:	0d d0       	rcall	.+26     	; 0x90e <malloc>
 8f4:	ec 01       	movw	r28, r24
 8f6:	00 97       	sbiw	r24, 0x00	; 0
 8f8:	21 f0       	breq	.+8      	; 0x902 <calloc+0x28>
 8fa:	a8 01       	movw	r20, r16
 8fc:	60 e0       	ldi	r22, 0x00	; 0
 8fe:	70 e0       	ldi	r23, 0x00	; 0
 900:	38 d1       	rcall	.+624    	; 0xb72 <memset>
 902:	ce 01       	movw	r24, r28
 904:	df 91       	pop	r29
 906:	cf 91       	pop	r28
 908:	1f 91       	pop	r17
 90a:	0f 91       	pop	r16
 90c:	08 95       	ret

0000090e <malloc>:
 90e:	cf 93       	push	r28
 910:	df 93       	push	r29
 912:	82 30       	cpi	r24, 0x02	; 2
 914:	91 05       	cpc	r25, r1
 916:	10 f4       	brcc	.+4      	; 0x91c <malloc+0xe>
 918:	82 e0       	ldi	r24, 0x02	; 2
 91a:	90 e0       	ldi	r25, 0x00	; 0
 91c:	e0 91 3c 02 	lds	r30, 0x023C
 920:	f0 91 3d 02 	lds	r31, 0x023D
 924:	20 e0       	ldi	r18, 0x00	; 0
 926:	30 e0       	ldi	r19, 0x00	; 0
 928:	a0 e0       	ldi	r26, 0x00	; 0
 92a:	b0 e0       	ldi	r27, 0x00	; 0
 92c:	30 97       	sbiw	r30, 0x00	; 0
 92e:	39 f1       	breq	.+78     	; 0x97e <malloc+0x70>
 930:	40 81       	ld	r20, Z
 932:	51 81       	ldd	r21, Z+1	; 0x01
 934:	48 17       	cp	r20, r24
 936:	59 07       	cpc	r21, r25
 938:	b8 f0       	brcs	.+46     	; 0x968 <malloc+0x5a>
 93a:	48 17       	cp	r20, r24
 93c:	59 07       	cpc	r21, r25
 93e:	71 f4       	brne	.+28     	; 0x95c <malloc+0x4e>
 940:	82 81       	ldd	r24, Z+2	; 0x02
 942:	93 81       	ldd	r25, Z+3	; 0x03
 944:	10 97       	sbiw	r26, 0x00	; 0
 946:	29 f0       	breq	.+10     	; 0x952 <malloc+0x44>
 948:	13 96       	adiw	r26, 0x03	; 3
 94a:	9c 93       	st	X, r25
 94c:	8e 93       	st	-X, r24
 94e:	12 97       	sbiw	r26, 0x02	; 2
 950:	2c c0       	rjmp	.+88     	; 0x9aa <malloc+0x9c>
 952:	90 93 3d 02 	sts	0x023D, r25
 956:	80 93 3c 02 	sts	0x023C, r24
 95a:	27 c0       	rjmp	.+78     	; 0x9aa <malloc+0x9c>
 95c:	21 15       	cp	r18, r1
 95e:	31 05       	cpc	r19, r1
 960:	31 f0       	breq	.+12     	; 0x96e <malloc+0x60>
 962:	42 17       	cp	r20, r18
 964:	53 07       	cpc	r21, r19
 966:	18 f0       	brcs	.+6      	; 0x96e <malloc+0x60>
 968:	a9 01       	movw	r20, r18
 96a:	db 01       	movw	r26, r22
 96c:	01 c0       	rjmp	.+2      	; 0x970 <malloc+0x62>
 96e:	ef 01       	movw	r28, r30
 970:	9a 01       	movw	r18, r20
 972:	bd 01       	movw	r22, r26
 974:	df 01       	movw	r26, r30
 976:	02 80       	ldd	r0, Z+2	; 0x02
 978:	f3 81       	ldd	r31, Z+3	; 0x03
 97a:	e0 2d       	mov	r30, r0
 97c:	d7 cf       	rjmp	.-82     	; 0x92c <malloc+0x1e>
 97e:	21 15       	cp	r18, r1
 980:	31 05       	cpc	r19, r1
 982:	f9 f0       	breq	.+62     	; 0x9c2 <malloc+0xb4>
 984:	28 1b       	sub	r18, r24
 986:	39 0b       	sbc	r19, r25
 988:	24 30       	cpi	r18, 0x04	; 4
 98a:	31 05       	cpc	r19, r1
 98c:	80 f4       	brcc	.+32     	; 0x9ae <malloc+0xa0>
 98e:	8a 81       	ldd	r24, Y+2	; 0x02
 990:	9b 81       	ldd	r25, Y+3	; 0x03
 992:	61 15       	cp	r22, r1
 994:	71 05       	cpc	r23, r1
 996:	21 f0       	breq	.+8      	; 0x9a0 <malloc+0x92>
 998:	fb 01       	movw	r30, r22
 99a:	93 83       	std	Z+3, r25	; 0x03
 99c:	82 83       	std	Z+2, r24	; 0x02
 99e:	04 c0       	rjmp	.+8      	; 0x9a8 <malloc+0x9a>
 9a0:	90 93 3d 02 	sts	0x023D, r25
 9a4:	80 93 3c 02 	sts	0x023C, r24
 9a8:	fe 01       	movw	r30, r28
 9aa:	32 96       	adiw	r30, 0x02	; 2
 9ac:	44 c0       	rjmp	.+136    	; 0xa36 <malloc+0x128>
 9ae:	fe 01       	movw	r30, r28
 9b0:	e2 0f       	add	r30, r18
 9b2:	f3 1f       	adc	r31, r19
 9b4:	81 93       	st	Z+, r24
 9b6:	91 93       	st	Z+, r25
 9b8:	22 50       	subi	r18, 0x02	; 2
 9ba:	31 09       	sbc	r19, r1
 9bc:	39 83       	std	Y+1, r19	; 0x01
 9be:	28 83       	st	Y, r18
 9c0:	3a c0       	rjmp	.+116    	; 0xa36 <malloc+0x128>
 9c2:	20 91 3a 02 	lds	r18, 0x023A
 9c6:	30 91 3b 02 	lds	r19, 0x023B
 9ca:	23 2b       	or	r18, r19
 9cc:	41 f4       	brne	.+16     	; 0x9de <malloc+0xd0>
 9ce:	20 91 02 02 	lds	r18, 0x0202
 9d2:	30 91 03 02 	lds	r19, 0x0203
 9d6:	30 93 3b 02 	sts	0x023B, r19
 9da:	20 93 3a 02 	sts	0x023A, r18
 9de:	20 91 00 02 	lds	r18, 0x0200
 9e2:	30 91 01 02 	lds	r19, 0x0201
 9e6:	21 15       	cp	r18, r1
 9e8:	31 05       	cpc	r19, r1
 9ea:	41 f4       	brne	.+16     	; 0x9fc <malloc+0xee>
 9ec:	2d b7       	in	r18, 0x3d	; 61
 9ee:	3e b7       	in	r19, 0x3e	; 62
 9f0:	40 91 04 02 	lds	r20, 0x0204
 9f4:	50 91 05 02 	lds	r21, 0x0205
 9f8:	24 1b       	sub	r18, r20
 9fa:	35 0b       	sbc	r19, r21
 9fc:	e0 91 3a 02 	lds	r30, 0x023A
 a00:	f0 91 3b 02 	lds	r31, 0x023B
 a04:	e2 17       	cp	r30, r18
 a06:	f3 07       	cpc	r31, r19
 a08:	a0 f4       	brcc	.+40     	; 0xa32 <malloc+0x124>
 a0a:	2e 1b       	sub	r18, r30
 a0c:	3f 0b       	sbc	r19, r31
 a0e:	28 17       	cp	r18, r24
 a10:	39 07       	cpc	r19, r25
 a12:	78 f0       	brcs	.+30     	; 0xa32 <malloc+0x124>
 a14:	ac 01       	movw	r20, r24
 a16:	4e 5f       	subi	r20, 0xFE	; 254
 a18:	5f 4f       	sbci	r21, 0xFF	; 255
 a1a:	24 17       	cp	r18, r20
 a1c:	35 07       	cpc	r19, r21
 a1e:	48 f0       	brcs	.+18     	; 0xa32 <malloc+0x124>
 a20:	4e 0f       	add	r20, r30
 a22:	5f 1f       	adc	r21, r31
 a24:	50 93 3b 02 	sts	0x023B, r21
 a28:	40 93 3a 02 	sts	0x023A, r20
 a2c:	81 93       	st	Z+, r24
 a2e:	91 93       	st	Z+, r25
 a30:	02 c0       	rjmp	.+4      	; 0xa36 <malloc+0x128>
 a32:	e0 e0       	ldi	r30, 0x00	; 0
 a34:	f0 e0       	ldi	r31, 0x00	; 0
 a36:	cf 01       	movw	r24, r30
 a38:	df 91       	pop	r29
 a3a:	cf 91       	pop	r28
 a3c:	08 95       	ret

00000a3e <free>:
 a3e:	cf 93       	push	r28
 a40:	df 93       	push	r29
 a42:	00 97       	sbiw	r24, 0x00	; 0
 a44:	09 f4       	brne	.+2      	; 0xa48 <free+0xa>
 a46:	87 c0       	rjmp	.+270    	; 0xb56 <free+0x118>
 a48:	fc 01       	movw	r30, r24
 a4a:	32 97       	sbiw	r30, 0x02	; 2
 a4c:	13 82       	std	Z+3, r1	; 0x03
 a4e:	12 82       	std	Z+2, r1	; 0x02
 a50:	c0 91 3c 02 	lds	r28, 0x023C
 a54:	d0 91 3d 02 	lds	r29, 0x023D
 a58:	20 97       	sbiw	r28, 0x00	; 0
 a5a:	81 f4       	brne	.+32     	; 0xa7c <free+0x3e>
 a5c:	20 81       	ld	r18, Z
 a5e:	31 81       	ldd	r19, Z+1	; 0x01
 a60:	28 0f       	add	r18, r24
 a62:	39 1f       	adc	r19, r25
 a64:	80 91 3a 02 	lds	r24, 0x023A
 a68:	90 91 3b 02 	lds	r25, 0x023B
 a6c:	82 17       	cp	r24, r18
 a6e:	93 07       	cpc	r25, r19
 a70:	79 f5       	brne	.+94     	; 0xad0 <free+0x92>
 a72:	f0 93 3b 02 	sts	0x023B, r31
 a76:	e0 93 3a 02 	sts	0x023A, r30
 a7a:	6d c0       	rjmp	.+218    	; 0xb56 <free+0x118>
 a7c:	de 01       	movw	r26, r28
 a7e:	20 e0       	ldi	r18, 0x00	; 0
 a80:	30 e0       	ldi	r19, 0x00	; 0
 a82:	ae 17       	cp	r26, r30
 a84:	bf 07       	cpc	r27, r31
 a86:	50 f4       	brcc	.+20     	; 0xa9c <free+0x5e>
 a88:	12 96       	adiw	r26, 0x02	; 2
 a8a:	4d 91       	ld	r20, X+
 a8c:	5c 91       	ld	r21, X
 a8e:	13 97       	sbiw	r26, 0x03	; 3
 a90:	9d 01       	movw	r18, r26
 a92:	41 15       	cp	r20, r1
 a94:	51 05       	cpc	r21, r1
 a96:	09 f1       	breq	.+66     	; 0xada <free+0x9c>
 a98:	da 01       	movw	r26, r20
 a9a:	f3 cf       	rjmp	.-26     	; 0xa82 <free+0x44>
 a9c:	b3 83       	std	Z+3, r27	; 0x03
 a9e:	a2 83       	std	Z+2, r26	; 0x02
 aa0:	40 81       	ld	r20, Z
 aa2:	51 81       	ldd	r21, Z+1	; 0x01
 aa4:	84 0f       	add	r24, r20
 aa6:	95 1f       	adc	r25, r21
 aa8:	8a 17       	cp	r24, r26
 aaa:	9b 07       	cpc	r25, r27
 aac:	71 f4       	brne	.+28     	; 0xaca <free+0x8c>
 aae:	8d 91       	ld	r24, X+
 ab0:	9c 91       	ld	r25, X
 ab2:	11 97       	sbiw	r26, 0x01	; 1
 ab4:	84 0f       	add	r24, r20
 ab6:	95 1f       	adc	r25, r21
 ab8:	02 96       	adiw	r24, 0x02	; 2
 aba:	91 83       	std	Z+1, r25	; 0x01
 abc:	80 83       	st	Z, r24
 abe:	12 96       	adiw	r26, 0x02	; 2
 ac0:	8d 91       	ld	r24, X+
 ac2:	9c 91       	ld	r25, X
 ac4:	13 97       	sbiw	r26, 0x03	; 3
 ac6:	93 83       	std	Z+3, r25	; 0x03
 ac8:	82 83       	std	Z+2, r24	; 0x02
 aca:	21 15       	cp	r18, r1
 acc:	31 05       	cpc	r19, r1
 ace:	29 f4       	brne	.+10     	; 0xada <free+0x9c>
 ad0:	f0 93 3d 02 	sts	0x023D, r31
 ad4:	e0 93 3c 02 	sts	0x023C, r30
 ad8:	3e c0       	rjmp	.+124    	; 0xb56 <free+0x118>
 ada:	d9 01       	movw	r26, r18
 adc:	13 96       	adiw	r26, 0x03	; 3
 ade:	fc 93       	st	X, r31
 ae0:	ee 93       	st	-X, r30
 ae2:	12 97       	sbiw	r26, 0x02	; 2
 ae4:	4d 91       	ld	r20, X+
 ae6:	5d 91       	ld	r21, X+
 ae8:	a4 0f       	add	r26, r20
 aea:	b5 1f       	adc	r27, r21
 aec:	ea 17       	cp	r30, r26
 aee:	fb 07       	cpc	r31, r27
 af0:	79 f4       	brne	.+30     	; 0xb10 <free+0xd2>
 af2:	80 81       	ld	r24, Z
 af4:	91 81       	ldd	r25, Z+1	; 0x01
 af6:	84 0f       	add	r24, r20
 af8:	95 1f       	adc	r25, r21
 afa:	02 96       	adiw	r24, 0x02	; 2
 afc:	d9 01       	movw	r26, r18
 afe:	11 96       	adiw	r26, 0x01	; 1
 b00:	9c 93       	st	X, r25
 b02:	8e 93       	st	-X, r24
 b04:	82 81       	ldd	r24, Z+2	; 0x02
 b06:	93 81       	ldd	r25, Z+3	; 0x03
 b08:	13 96       	adiw	r26, 0x03	; 3
 b0a:	9c 93       	st	X, r25
 b0c:	8e 93       	st	-X, r24
 b0e:	12 97       	sbiw	r26, 0x02	; 2
 b10:	e0 e0       	ldi	r30, 0x00	; 0
 b12:	f0 e0       	ldi	r31, 0x00	; 0
 b14:	8a 81       	ldd	r24, Y+2	; 0x02
 b16:	9b 81       	ldd	r25, Y+3	; 0x03
 b18:	00 97       	sbiw	r24, 0x00	; 0
 b1a:	19 f0       	breq	.+6      	; 0xb22 <free+0xe4>
 b1c:	fe 01       	movw	r30, r28
 b1e:	ec 01       	movw	r28, r24
 b20:	f9 cf       	rjmp	.-14     	; 0xb14 <free+0xd6>
 b22:	ce 01       	movw	r24, r28
 b24:	02 96       	adiw	r24, 0x02	; 2
 b26:	28 81       	ld	r18, Y
 b28:	39 81       	ldd	r19, Y+1	; 0x01
 b2a:	82 0f       	add	r24, r18
 b2c:	93 1f       	adc	r25, r19
 b2e:	20 91 3a 02 	lds	r18, 0x023A
 b32:	30 91 3b 02 	lds	r19, 0x023B
 b36:	28 17       	cp	r18, r24
 b38:	39 07       	cpc	r19, r25
 b3a:	69 f4       	brne	.+26     	; 0xb56 <free+0x118>
 b3c:	30 97       	sbiw	r30, 0x00	; 0
 b3e:	29 f4       	brne	.+10     	; 0xb4a <free+0x10c>
 b40:	10 92 3d 02 	sts	0x023D, r1
 b44:	10 92 3c 02 	sts	0x023C, r1
 b48:	02 c0       	rjmp	.+4      	; 0xb4e <free+0x110>
 b4a:	13 82       	std	Z+3, r1	; 0x03
 b4c:	12 82       	std	Z+2, r1	; 0x02
 b4e:	d0 93 3b 02 	sts	0x023B, r29
 b52:	c0 93 3a 02 	sts	0x023A, r28
 b56:	df 91       	pop	r29
 b58:	cf 91       	pop	r28
 b5a:	08 95       	ret

00000b5c <strnlen_P>:
 b5c:	fc 01       	movw	r30, r24
 b5e:	05 90       	lpm	r0, Z+
 b60:	61 50       	subi	r22, 0x01	; 1
 b62:	70 40       	sbci	r23, 0x00	; 0
 b64:	01 10       	cpse	r0, r1
 b66:	d8 f7       	brcc	.-10     	; 0xb5e <strnlen_P+0x2>
 b68:	80 95       	com	r24
 b6a:	90 95       	com	r25
 b6c:	8e 0f       	add	r24, r30
 b6e:	9f 1f       	adc	r25, r31
 b70:	08 95       	ret

00000b72 <memset>:
 b72:	dc 01       	movw	r26, r24
 b74:	01 c0       	rjmp	.+2      	; 0xb78 <memset+0x6>
 b76:	6d 93       	st	X+, r22
 b78:	41 50       	subi	r20, 0x01	; 1
 b7a:	50 40       	sbci	r21, 0x00	; 0
 b7c:	e0 f7       	brcc	.-8      	; 0xb76 <memset+0x4>
 b7e:	08 95       	ret

00000b80 <strnlen>:
 b80:	fc 01       	movw	r30, r24
 b82:	61 50       	subi	r22, 0x01	; 1
 b84:	70 40       	sbci	r23, 0x00	; 0
 b86:	01 90       	ld	r0, Z+
 b88:	01 10       	cpse	r0, r1
 b8a:	d8 f7       	brcc	.-10     	; 0xb82 <strnlen+0x2>
 b8c:	80 95       	com	r24
 b8e:	90 95       	com	r25
 b90:	8e 0f       	add	r24, r30
 b92:	9f 1f       	adc	r25, r31
 b94:	08 95       	ret

00000b96 <fputc>:
 b96:	0f 93       	push	r16
 b98:	1f 93       	push	r17
 b9a:	cf 93       	push	r28
 b9c:	df 93       	push	r29
 b9e:	18 2f       	mov	r17, r24
 ba0:	09 2f       	mov	r16, r25
 ba2:	eb 01       	movw	r28, r22
 ba4:	8b 81       	ldd	r24, Y+3	; 0x03
 ba6:	81 fd       	sbrc	r24, 1
 ba8:	03 c0       	rjmp	.+6      	; 0xbb0 <fputc+0x1a>
 baa:	8f ef       	ldi	r24, 0xFF	; 255
 bac:	9f ef       	ldi	r25, 0xFF	; 255
 bae:	20 c0       	rjmp	.+64     	; 0xbf0 <fputc+0x5a>
 bb0:	82 ff       	sbrs	r24, 2
 bb2:	10 c0       	rjmp	.+32     	; 0xbd4 <fputc+0x3e>
 bb4:	4e 81       	ldd	r20, Y+6	; 0x06
 bb6:	5f 81       	ldd	r21, Y+7	; 0x07
 bb8:	2c 81       	ldd	r18, Y+4	; 0x04
 bba:	3d 81       	ldd	r19, Y+5	; 0x05
 bbc:	42 17       	cp	r20, r18
 bbe:	53 07       	cpc	r21, r19
 bc0:	7c f4       	brge	.+30     	; 0xbe0 <fputc+0x4a>
 bc2:	e8 81       	ld	r30, Y
 bc4:	f9 81       	ldd	r31, Y+1	; 0x01
 bc6:	9f 01       	movw	r18, r30
 bc8:	2f 5f       	subi	r18, 0xFF	; 255
 bca:	3f 4f       	sbci	r19, 0xFF	; 255
 bcc:	39 83       	std	Y+1, r19	; 0x01
 bce:	28 83       	st	Y, r18
 bd0:	10 83       	st	Z, r17
 bd2:	06 c0       	rjmp	.+12     	; 0xbe0 <fputc+0x4a>
 bd4:	e8 85       	ldd	r30, Y+8	; 0x08
 bd6:	f9 85       	ldd	r31, Y+9	; 0x09
 bd8:	81 2f       	mov	r24, r17
 bda:	19 95       	eicall
 bdc:	89 2b       	or	r24, r25
 bde:	29 f7       	brne	.-54     	; 0xbaa <fputc+0x14>
 be0:	2e 81       	ldd	r18, Y+6	; 0x06
 be2:	3f 81       	ldd	r19, Y+7	; 0x07
 be4:	2f 5f       	subi	r18, 0xFF	; 255
 be6:	3f 4f       	sbci	r19, 0xFF	; 255
 be8:	3f 83       	std	Y+7, r19	; 0x07
 bea:	2e 83       	std	Y+6, r18	; 0x06
 bec:	81 2f       	mov	r24, r17
 bee:	90 2f       	mov	r25, r16
 bf0:	df 91       	pop	r29
 bf2:	cf 91       	pop	r28
 bf4:	1f 91       	pop	r17
 bf6:	0f 91       	pop	r16
 bf8:	08 95       	ret

00000bfa <__ultoa_invert>:
 bfa:	fa 01       	movw	r30, r20
 bfc:	aa 27       	eor	r26, r26
 bfe:	28 30       	cpi	r18, 0x08	; 8
 c00:	51 f1       	breq	.+84     	; 0xc56 <__ultoa_invert+0x5c>
 c02:	20 31       	cpi	r18, 0x10	; 16
 c04:	81 f1       	breq	.+96     	; 0xc66 <__ultoa_invert+0x6c>
 c06:	e8 94       	clt
 c08:	6f 93       	push	r22
 c0a:	6e 7f       	andi	r22, 0xFE	; 254
 c0c:	6e 5f       	subi	r22, 0xFE	; 254
 c0e:	7f 4f       	sbci	r23, 0xFF	; 255
 c10:	8f 4f       	sbci	r24, 0xFF	; 255
 c12:	9f 4f       	sbci	r25, 0xFF	; 255
 c14:	af 4f       	sbci	r26, 0xFF	; 255
 c16:	b1 e0       	ldi	r27, 0x01	; 1
 c18:	3e d0       	rcall	.+124    	; 0xc96 <__ultoa_invert+0x9c>
 c1a:	b4 e0       	ldi	r27, 0x04	; 4
 c1c:	3c d0       	rcall	.+120    	; 0xc96 <__ultoa_invert+0x9c>
 c1e:	67 0f       	add	r22, r23
 c20:	78 1f       	adc	r23, r24
 c22:	89 1f       	adc	r24, r25
 c24:	9a 1f       	adc	r25, r26
 c26:	a1 1d       	adc	r26, r1
 c28:	68 0f       	add	r22, r24
 c2a:	79 1f       	adc	r23, r25
 c2c:	8a 1f       	adc	r24, r26
 c2e:	91 1d       	adc	r25, r1
 c30:	a1 1d       	adc	r26, r1
 c32:	6a 0f       	add	r22, r26
 c34:	71 1d       	adc	r23, r1
 c36:	81 1d       	adc	r24, r1
 c38:	91 1d       	adc	r25, r1
 c3a:	a1 1d       	adc	r26, r1
 c3c:	20 d0       	rcall	.+64     	; 0xc7e <__ultoa_invert+0x84>
 c3e:	09 f4       	brne	.+2      	; 0xc42 <__ultoa_invert+0x48>
 c40:	68 94       	set
 c42:	3f 91       	pop	r19
 c44:	2a e0       	ldi	r18, 0x0A	; 10
 c46:	26 9f       	mul	r18, r22
 c48:	11 24       	eor	r1, r1
 c4a:	30 19       	sub	r19, r0
 c4c:	30 5d       	subi	r19, 0xD0	; 208
 c4e:	31 93       	st	Z+, r19
 c50:	de f6       	brtc	.-74     	; 0xc08 <__ultoa_invert+0xe>
 c52:	cf 01       	movw	r24, r30
 c54:	08 95       	ret
 c56:	46 2f       	mov	r20, r22
 c58:	47 70       	andi	r20, 0x07	; 7
 c5a:	40 5d       	subi	r20, 0xD0	; 208
 c5c:	41 93       	st	Z+, r20
 c5e:	b3 e0       	ldi	r27, 0x03	; 3
 c60:	0f d0       	rcall	.+30     	; 0xc80 <__ultoa_invert+0x86>
 c62:	c9 f7       	brne	.-14     	; 0xc56 <__ultoa_invert+0x5c>
 c64:	f6 cf       	rjmp	.-20     	; 0xc52 <__ultoa_invert+0x58>
 c66:	46 2f       	mov	r20, r22
 c68:	4f 70       	andi	r20, 0x0F	; 15
 c6a:	40 5d       	subi	r20, 0xD0	; 208
 c6c:	4a 33       	cpi	r20, 0x3A	; 58
 c6e:	18 f0       	brcs	.+6      	; 0xc76 <__ultoa_invert+0x7c>
 c70:	49 5d       	subi	r20, 0xD9	; 217
 c72:	31 fd       	sbrc	r19, 1
 c74:	40 52       	subi	r20, 0x20	; 32
 c76:	41 93       	st	Z+, r20
 c78:	02 d0       	rcall	.+4      	; 0xc7e <__ultoa_invert+0x84>
 c7a:	a9 f7       	brne	.-22     	; 0xc66 <__ultoa_invert+0x6c>
 c7c:	ea cf       	rjmp	.-44     	; 0xc52 <__ultoa_invert+0x58>
 c7e:	b4 e0       	ldi	r27, 0x04	; 4
 c80:	a6 95       	lsr	r26
 c82:	97 95       	ror	r25
 c84:	87 95       	ror	r24
 c86:	77 95       	ror	r23
 c88:	67 95       	ror	r22
 c8a:	ba 95       	dec	r27
 c8c:	c9 f7       	brne	.-14     	; 0xc80 <__ultoa_invert+0x86>
 c8e:	00 97       	sbiw	r24, 0x00	; 0
 c90:	61 05       	cpc	r22, r1
 c92:	71 05       	cpc	r23, r1
 c94:	08 95       	ret
 c96:	9b 01       	movw	r18, r22
 c98:	ac 01       	movw	r20, r24
 c9a:	0a 2e       	mov	r0, r26
 c9c:	06 94       	lsr	r0
 c9e:	57 95       	ror	r21
 ca0:	47 95       	ror	r20
 ca2:	37 95       	ror	r19
 ca4:	27 95       	ror	r18
 ca6:	ba 95       	dec	r27
 ca8:	c9 f7       	brne	.-14     	; 0xc9c <__ultoa_invert+0xa2>
 caa:	62 0f       	add	r22, r18
 cac:	73 1f       	adc	r23, r19
 cae:	84 1f       	adc	r24, r20
 cb0:	95 1f       	adc	r25, r21
 cb2:	a0 1d       	adc	r26, r0
 cb4:	08 95       	ret

00000cb6 <_exit>:
 cb6:	f8 94       	cli

00000cb8 <__stop_program>:
 cb8:	ff cf       	rjmp	.-2      	; 0xcb8 <__stop_program>
