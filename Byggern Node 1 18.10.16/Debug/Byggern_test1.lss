
Byggern_test1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000084  00800100  00002e5a  00002eee  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00002e5a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000000e0  00800184  00800184  00002f72  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002f72  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 00000288  00000000  00000000  00002fce  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002a5a  00000000  00000000  00003256  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000ea4  00000000  00000000  00005cb0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000e56  00000000  00000000  00006b54  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000005e4  00000000  00000000  000079ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000072b  00000000  00000000  00007f90  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000014a8  00000000  00000000  000086bb  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000288  00000000  00000000  00009b63  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 0b 	jmp	0x1768	; 0x1768 <__ctors_end>
       4:	0c 94 ef 0b 	jmp	0x17de	; 0x17de <__vector_1>
       8:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
       c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      10:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      14:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      18:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      1c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      20:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      24:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      28:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      2c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      30:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      34:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      38:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      3c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      40:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      44:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      48:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      4c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      50:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      54:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      58:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      5c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      60:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      64:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      68:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      6c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	08 00       	.word	0x0008	; ????
      74:	01 01       	movw	r0, r2
      76:	00 00       	nop
      78:	00 00       	nop
      7a:	00 04       	cpc	r0, r0
      7c:	06 00       	.word	0x0006	; ????
      7e:	50 c0       	rjmp	.+160    	; 0x120 <__trampolines_end+0xb0>
      80:	c6 c6       	rjmp	.+3468   	; 0xe0e <tobias+0x19e>
      82:	52 52       	subi	r21, 0x22	; 34
      84:	02 02       	muls	r16, r18
      86:	01 01       	movw	r0, r2
      88:	30 30       	cpi	r19, 0x00	; 0
      8a:	30 00       	.word	0x0030	; ????
	...
      94:	00 e0       	ldi	r16, 0x00	; 0
      96:	f0 f0       	brcs	.+60     	; 0xd4 <__trampolines_end+0x64>
      98:	e0 e0       	ldi	r30, 0x00	; 0
      9a:	e0 c0       	rjmp	.+448    	; 0x25c <__trampolines_end+0x1ec>
      9c:	c0 80       	ld	r12, Z
      9e:	80 80       	ld	r8, Z
	...
      e8:	e0 f0       	brcs	.+56     	; 0x122 <__trampolines_end+0xb2>
      ea:	f0 f0       	brcs	.+60     	; 0x128 <__trampolines_end+0xb8>
      ec:	e4 e4       	ldi	r30, 0x44	; 68
      ee:	e4 f4       	brge	.+56     	; 0x128 <__trampolines_end+0xb8>
      f0:	10 00       	.word	0x0010	; ????
      f2:	00 00       	nop
      f4:	00 00       	nop
      f6:	00 04       	cpc	r0, r0
      f8:	04 00       	.word	0x0004	; ????
      fa:	00 03       	mulsu	r16, r16
      fc:	63 e3       	ldi	r22, 0x33	; 51
      fe:	e3 63       	ori	r30, 0x33	; 51
     100:	02 0b       	sbc	r16, r18
     102:	6b 63       	ori	r22, 0x3B	; 59
     104:	e0 fc       	sbrc	r14, 0
     106:	fe ff       	.word	0xfffe	; ????
     108:	e7 e3       	ldi	r30, 0x37	; 55
     10a:	f3 f2       	brvs	.-68     	; 0xc8 <__trampolines_end+0x58>
     10c:	fc f0       	brlt	.+62     	; 0x14c <__trampolines_end+0xdc>
     10e:	e0 80       	ld	r14, Z
     110:	00 00       	nop
     112:	00 00       	nop
     114:	c0 ff       	sbrs	r28, 0
     116:	ff ff       	.word	0xffff	; ????
     118:	ff ff       	.word	0xffff	; ????
     11a:	ff ff       	.word	0xffff	; ????
     11c:	ff ff       	.word	0xffff	; ????
     11e:	ff ff       	.word	0xffff	; ????
     120:	ff fe       	.word	0xfeff	; ????
     122:	ee c3       	rjmp	.+2012   	; 0x900 <brage+0x90>
     124:	c1 c0       	rjmp	.+386    	; 0x2a8 <__trampolines_end+0x238>
     126:	e0 e0       	ldi	r30, 0x00	; 0
     128:	e0 e0       	ldi	r30, 0x00	; 0
     12a:	60 40       	sbci	r22, 0x00	; 0
     12c:	40 00       	.word	0x0040	; ????
	...
     136:	80 c0       	rjmp	.+256    	; 0x238 <__trampolines_end+0x1c8>
     138:	80 c0       	rjmp	.+256    	; 0x23a <__trampolines_end+0x1ca>
     13a:	e0 f8       	bld	r14, 0
     13c:	f8 f0       	brcs	.+62     	; 0x17c <__trampolines_end+0x10c>
	...
     162:	c0 c0       	rjmp	.+384    	; 0x2e4 <__trampolines_end+0x274>
     164:	e0 f0       	brcs	.+56     	; 0x19e <__trampolines_end+0x12e>
     166:	f8 fc       	.word	0xfcf8	; ????
     168:	ff ff       	.word	0xffff	; ????
     16a:	ff ff       	.word	0xffff	; ????
     16c:	ff ff       	.word	0xffff	; ????
     16e:	ff ff       	.word	0xffff	; ????
     170:	00 0c       	add	r0, r0
     172:	1c 78       	andi	r17, 0x8C	; 140
     174:	1c 1c       	adc	r1, r12
     176:	2c 0c       	add	r2, r12
     178:	0c 04       	cpc	r0, r12
     17a:	00 00       	nop
     17c:	00 01       	movw	r0, r0
     17e:	43 41       	sbci	r20, 0x13	; 19
     180:	1c 1c       	adc	r1, r12
     182:	0c 08       	sbc	r0, r12
     184:	7f ff       	.word	0xff7f	; ????
     186:	ff ff       	.word	0xffff	; ????
     188:	ff ff       	.word	0xffff	; ????
     18a:	ff ff       	.word	0xffff	; ????
     18c:	c3 e3       	ldi	r28, 0x33	; 51
     18e:	f1 f3       	breq	.-4      	; 0x18c <__trampolines_end+0x11c>
     190:	ff fe       	.word	0xfeff	; ????
     192:	fc fc       	.word	0xfcfc	; ????
     194:	ff ff       	.word	0xffff	; ????
     196:	ff ff       	.word	0xffff	; ????
     198:	ff ff       	.word	0xffff	; ????
     19a:	ff ff       	.word	0xffff	; ????
     19c:	ff ff       	.word	0xffff	; ????
     19e:	ff ff       	.word	0xffff	; ????
     1a0:	ff ff       	.word	0xffff	; ????
     1a2:	ff ff       	.word	0xffff	; ????
     1a4:	ff ff       	.word	0xffff	; ????
     1a6:	ff ff       	.word	0xffff	; ????
     1a8:	ff fe       	.word	0xfeff	; ????
     1aa:	fc fc       	.word	0xfcfc	; ????
     1ac:	fc fc       	.word	0xfcfc	; ????
     1ae:	fc fc       	.word	0xfcfc	; ????
     1b0:	fc fc       	.word	0xfcfc	; ????
     1b2:	fc fe       	.word	0xfefc	; ????
     1b4:	fe fe       	.word	0xfefe	; ????
     1b6:	ff ff       	.word	0xffff	; ????
     1b8:	ff ff       	.word	0xffff	; ????
     1ba:	ff ff       	.word	0xffff	; ????
     1bc:	7f 07       	cpc	r23, r31
	...
     1c6:	c0 c0       	rjmp	.+384    	; 0x348 <__trampolines_end+0x2d8>
     1c8:	c0 80       	ld	r12, Z
     1ca:	80 80       	ld	r8, Z
	...
     1e0:	00 08       	sbc	r0, r0
     1e2:	7f ff       	.word	0xff7f	; ????
     1e4:	ff ff       	.word	0xffff	; ????
     1e6:	ff ff       	.word	0xffff	; ????
     1e8:	ff ff       	.word	0xffff	; ????
     1ea:	ff ff       	.word	0xffff	; ????
     1ec:	ff ff       	.word	0xffff	; ????
     1ee:	ff 7f       	andi	r31, 0xFF	; 255
     1f0:	00 00       	nop
     1f2:	30 31       	cpi	r19, 0x10	; 16
     1f4:	00 00       	nop
     1f6:	00 00       	nop
     1f8:	32 02       	muls	r19, r18
     1fa:	00 00       	nop
     1fc:	00 08       	sbc	r0, r0
     1fe:	00 00       	nop
     200:	00 00       	nop
     202:	00 80       	ld	r0, Z
     204:	80 c7       	rjmp	.+3840   	; 0x1106 <pig+0x96>
     206:	df ff       	.word	0xffdf	; ????
     208:	ff ff       	.word	0xffff	; ????
     20a:	ff ff       	.word	0xffff	; ????
     20c:	ff ff       	.word	0xffff	; ????
     20e:	ff ff       	.word	0xffff	; ????
     210:	ff ff       	.word	0xffff	; ????
     212:	ff ff       	.word	0xffff	; ????
     214:	ff ff       	.word	0xffff	; ????
     216:	ff ff       	.word	0xffff	; ????
     218:	ff ff       	.word	0xffff	; ????
     21a:	ff ff       	.word	0xffff	; ????
     21c:	ff ff       	.word	0xffff	; ????
     21e:	ff ff       	.word	0xffff	; ????
     220:	ff ff       	.word	0xffff	; ????
     222:	ff ff       	.word	0xffff	; ????
     224:	ff 7f       	andi	r31, 0xFF	; 255
     226:	3f 3f       	cpi	r19, 0xFF	; 255
     228:	1f 0f       	add	r17, r31
     22a:	0f 87       	std	Y+15, r16	; 0x0f
     22c:	87 c7       	rjmp	.+3854   	; 0x113c <pig+0xcc>
     22e:	e3 f3       	brvs	.-8      	; 0x228 <__trampolines_end+0x1b8>
     230:	7f 3f       	cpi	r23, 0xFF	; 255
     232:	3f 3f       	cpi	r19, 0xFF	; 255
     234:	3f 3f       	cpi	r19, 0xFF	; 255
     236:	3f 3f       	cpi	r19, 0xFF	; 255
     238:	3f 3f       	cpi	r19, 0xFF	; 255
     23a:	3f 3f       	cpi	r19, 0xFF	; 255
     23c:	3f 1c       	adc	r3, r15
     23e:	00 00       	nop
     240:	00 00       	nop
     242:	00 00       	nop
     244:	00 7e       	andi	r16, 0xE0	; 224
     246:	ff ff       	.word	0xffff	; ????
     248:	ff ff       	.word	0xffff	; ????
     24a:	ff ff       	.word	0xffff	; ????
     24c:	ff ff       	.word	0xffff	; ????
     24e:	ff ff       	.word	0xffff	; ????
     250:	fe fc       	.word	0xfcfe	; ????
     252:	fc 20       	and	r15, r12
	...
     260:	00 00       	nop
     262:	18 1f       	adc	r17, r24
     264:	1f 1f       	adc	r17, r31
     266:	0f 0f       	add	r16, r31
     268:	07 03       	mulsu	r16, r23
     26a:	03 03       	mulsu	r16, r19
     26c:	01 00       	.word	0x0001	; ????
     26e:	00 00       	nop
     270:	00 08       	sbc	r0, r0
     272:	1e 72       	andi	r17, 0x2E	; 46
     274:	32 00       	.word	0x0032	; ????
     276:	0c 5f       	subi	r16, 0xFC	; 252
     278:	ff da       	rcall	.-2562   	; 0xfffff878 <__eeprom_end+0xff7ef878>
     27a:	c0 00       	.word	0x00c0	; ????
     27c:	00 00       	nop
     27e:	00 00       	nop
     280:	b9 ff       	.word	0xffb9	; ????
     282:	bb b9       	out	0x0b, r27	; 11
     284:	bb ff       	.word	0xffbb	; ????
     286:	b9 99       	sbic	0x17, 1	; 23
     288:	bf bf       	out	0x3f, r27	; 63
     28a:	bf bf       	out	0x3f, r27	; 63
     28c:	bf bf       	out	0x3f, r27	; 63
     28e:	9f 9f       	mul	r25, r31
     290:	ff ff       	.word	0xffff	; ????
     292:	f7 ff       	sbrs	r31, 7
     294:	ff ff       	.word	0xffff	; ????
     296:	ff ff       	.word	0xffff	; ????
     298:	ff ff       	.word	0xffff	; ????
     29a:	ff ff       	.word	0xffff	; ????
     29c:	ff fb       	.word	0xfbff	; ????
     29e:	f1 ff       	sbrs	r31, 1
     2a0:	ff ff       	.word	0xffff	; ????
     2a2:	e7 e1       	ldi	r30, 0x17	; 23
     2a4:	f0 f8       	bld	r15, 0
     2a6:	7c 3e       	cpi	r23, 0xEC	; 236
     2a8:	3e 3f       	cpi	r19, 0xFE	; 254
     2aa:	7f 7f       	andi	r23, 0xFF	; 255
     2ac:	7f 7f       	andi	r23, 0xFF	; 255
     2ae:	3f 3f       	cpi	r19, 0xFF	; 255
     2b0:	7f 7e       	andi	r23, 0xEF	; 239
     2b2:	7c 7c       	andi	r23, 0xCC	; 204
     2b4:	7c 78       	andi	r23, 0x8C	; 140
     2b6:	70 e0       	ldi	r23, 0x00	; 0
     2b8:	c0 c0       	rjmp	.+384    	; 0x43a <__trampolines_end+0x3ca>
     2ba:	c0 c0       	rjmp	.+384    	; 0x43c <__trampolines_end+0x3cc>
     2bc:	c0 00       	.word	0x00c0	; ????
	...
     2c6:	30 61       	ori	r19, 0x10	; 16
     2c8:	c3 87       	std	Z+11, r28	; 0x0b
     2ca:	0f 0f       	add	r16, r31
     2cc:	0f 1f       	adc	r16, r31
     2ce:	1f 0f       	add	r17, r31
     2d0:	0f 07       	cpc	r16, r31
	...
     2f2:	00 66       	ori	r16, 0x60	; 96
     2f4:	26 06       	cpc	r2, r22
     2f6:	84 86       	std	Z+12, r8	; 0x0c
     2f8:	c7 c7       	rjmp	.+3982   	; 0x1288 <pig+0x218>
     2fa:	c3 01       	movw	r24, r6
     2fc:	00 00       	nop
     2fe:	00 00       	nop
     300:	33 7f       	andi	r19, 0xF3	; 243
     302:	ff fb       	.word	0xfbff	; ????
     304:	3b ff       	.word	0xff3b	; ????
     306:	ff fb       	.word	0xfbff	; ????
     308:	fb ff       	.word	0xfffb	; ????
     30a:	fb bb       	out	0x1b, r31	; 27
     30c:	ff ff       	.word	0xffff	; ????
     30e:	bb 3b       	cpi	r27, 0xBB	; 187
     310:	ff ff       	.word	0xffff	; ????
     312:	ff ff       	.word	0xffff	; ????
     314:	ff ff       	.word	0xffff	; ????
     316:	ff ff       	.word	0xffff	; ????
     318:	ff ff       	.word	0xffff	; ????
     31a:	9f 1f       	adc	r25, r31
     31c:	3f 7f       	andi	r19, 0xFF	; 255
     31e:	ff ff       	.word	0xffff	; ????
     320:	ff ff       	.word	0xffff	; ????
     322:	ff ff       	.word	0xffff	; ????
     324:	ff ff       	.word	0xffff	; ????
     326:	fe fe       	.word	0xfefe	; ????
     328:	fe fe       	.word	0xfefe	; ????
     32a:	fe fe       	.word	0xfefe	; ????
     32c:	fc fc       	.word	0xfcfc	; ????
     32e:	fc fc       	.word	0xfcfc	; ????
     330:	fc fc       	.word	0xfcfc	; ????
     332:	fc fc       	.word	0xfcfc	; ????
     334:	fc fc       	.word	0xfcfc	; ????
     336:	f8 e8       	ldi	r31, 0x88	; 136
     338:	e0 c0       	rjmp	.+448    	; 0x4fa <credits+0x8a>
     33a:	c0 c0       	rjmp	.+384    	; 0x4bc <credits+0x4c>
     33c:	80 00       	.word	0x0080	; ????
	...
     346:	00 00       	nop
     348:	00 c1       	rjmp	.+512    	; 0x54a <__stack+0x4b>
     34a:	c3 00       	.word	0x00c3	; ????
	...
     370:	00 00       	nop
     372:	20 01       	movw	r4, r0
     374:	01 71       	andi	r16, 0x11	; 17
     376:	f1 f0       	breq	.+60     	; 0x3b4 <__trampolines_end+0x344>
     378:	f0 f0       	brcs	.+60     	; 0x3b6 <__trampolines_end+0x346>
     37a:	f0 70       	andi	r31, 0x00	; 0
     37c:	70 00       	.word	0x0070	; ????
     37e:	e0 e0       	ldi	r30, 0x00	; 0
     380:	a3 87       	std	Z+11, r26	; 0x0b
     382:	87 07       	cpc	r24, r23
     384:	07 07       	cpc	r16, r23
     386:	07 07       	cpc	r16, r23
     388:	07 07       	cpc	r16, r23
     38a:	07 07       	cpc	r16, r23
     38c:	03 07       	cpc	r16, r19
     38e:	c7 f3       	brie	.-16     	; 0x380 <__trampolines_end+0x310>
     390:	ff ff       	.word	0xffff	; ????
     392:	ff ff       	.word	0xffff	; ????
     394:	ff ff       	.word	0xffff	; ????
     396:	ff ff       	.word	0xffff	; ????
     398:	ff fd       	.word	0xfdff	; ????
     39a:	c1 04       	cpc	r12, r1
     39c:	08 00       	.word	0x0008	; ????
     39e:	01 0f       	add	r16, r17
     3a0:	3f 7f       	andi	r19, 0xFF	; 255
     3a2:	ff ff       	.word	0xffff	; ????
     3a4:	ff ff       	.word	0xffff	; ????
     3a6:	ff ff       	.word	0xffff	; ????
     3a8:	ff ff       	.word	0xffff	; ????
     3aa:	ff ff       	.word	0xffff	; ????
     3ac:	ff ff       	.word	0xffff	; ????
     3ae:	ff ff       	.word	0xffff	; ????
     3b0:	ff ff       	.word	0xffff	; ????
     3b2:	ff ff       	.word	0xffff	; ????
     3b4:	ff ff       	.word	0xffff	; ????
     3b6:	ff fd       	.word	0xfdff	; ????
     3b8:	f9 f9       	.word	0xf9f9	; ????
     3ba:	f8 f8       	.word	0xf8f8	; ????
     3bc:	f8 f8       	.word	0xf8f8	; ????
     3be:	f0 e0       	ldi	r31, 0x00	; 0
     3c0:	c0 c0       	rjmp	.+384    	; 0x542 <__stack+0x43>
     3c2:	c0 00       	.word	0x00c0	; ????
	...
     3d0:	00 00       	nop
     3d2:	00 80       	ld	r0, Z
     3d4:	80 00       	.word	0x0080	; ????
     3d6:	80 00       	.word	0x0080	; ????
	...
     3f0:	00 00       	nop
     3f2:	04 07       	cpc	r16, r20
     3f4:	07 83       	std	Z+7, r16	; 0x07
     3f6:	81 81       	ldd	r24, Z+1	; 0x01
     3f8:	83 cb       	rjmp	.-2298   	; 0xfffffb00 <__eeprom_end+0xff7efb00>
     3fa:	cb 03       	fmulsu	r20, r19
     3fc:	0b 08       	sbc	r0, r11
     3fe:	0c 0f       	add	r16, r28
     400:	03 01       	movw	r0, r6
     402:	01 00       	.word	0x0001	; ????
	...
     40c:	78 fe       	.word	0xfe78	; ????
     40e:	ff ff       	.word	0xffff	; ????
     410:	ff ff       	.word	0xffff	; ????
     412:	ff ff       	.word	0xffff	; ????
     414:	ff ff       	.word	0xffff	; ????
     416:	ff ff       	.word	0xffff	; ????
     418:	ff ff       	.word	0xffff	; ????
     41a:	ff ff       	.word	0xffff	; ????
     41c:	fe fc       	.word	0xfcfe	; ????
     41e:	f8 f0       	brcs	.+62     	; 0x45e <__trampolines_end+0x3ee>
     420:	e0 c0       	rjmp	.+448    	; 0x5e2 <__stack+0xe3>
     422:	00 00       	nop
     424:	01 01       	movw	r0, r2
     426:	03 03       	mulsu	r16, r19
     428:	03 03       	mulsu	r16, r19
     42a:	03 07       	cpc	r16, r19
     42c:	07 0f       	add	r16, r23
     42e:	0f 0f       	add	r16, r31
     430:	0f 1f       	adc	r16, r31
     432:	1f 1f       	adc	r17, r31
     434:	1f 1f       	adc	r17, r31
     436:	1f 1f       	adc	r17, r31
     438:	1f 1f       	adc	r17, r31
     43a:	0f 0f       	add	r16, r31
     43c:	07 03       	mulsu	r16, r23
     43e:	03 01       	movw	r0, r6
     440:	01 01       	movw	r0, r2
	...
     44e:	00 00       	nop
     450:	04 00       	.word	0x0004	; ????
     452:	02 07       	cpc	r16, r18
     454:	03 00       	.word	0x0003	; ????
	...
     46a:	00 80       	ld	r0, Z
     46c:	c0 c0       	rjmp	.+384    	; 0x5ee <__stack+0xef>
	...

00000470 <credits>:
     470:	ff ff ff ff ff ff ff ff ff 3f 3f 3f 3f 1f 1f 1f     .........????...
     480:	0f 0f 0f 0f 07 07 07 07 07 07 07 07 07 0f 0f 1f     ................
     490:	1f 3f 3f 7f 7f ff ff ff ff ff ff ff ff ff ff ff     .??.............
     4a0:	ff 7f 7f 3f 3f 1f 1f 1f 1f 1f 1f 3f 3f 7f 7f ff     ...??......??...
     4b0:	ff ff ff ff ff 7f 7f 7f 3f 3f 1f 1f 1f 0f 0f 0f     ........??......
     4c0:	0f 0f 0f 0f 0f 0f 0f 0f 0f 1f 1f 1f 1f 1f 1f 3f     ...............?
     4d0:	3f 3f 3f 3f 3f 1f 1f 1f 0f 0f 07 07 07 07 07 07     ?????...........
     4e0:	0f 0f 1f 3f 7f ff ff ff ff ff ff ff ff ff ff ff     ...?............
     4f0:	ff ff ff ff ff ff ff ff ff ff fe fc f8 f8 f0 f0     ................
     500:	f0 f8 f8 f8 fc fc fc fc fe fe fe fe fe fe fe fe     ................
     510:	fe fc fc f8 f8 f0 f0 e1 e1 c1 c1 81 81 81 81 80     ................
     520:	80 80 80 c0 c0 c0 e0 f0 f0 f0 f8 f8 f8 f8 f8 f0     ................
     530:	f0 e0 c0 c0 c0 c0 c0 c0 c0 e0 e0 60 70 f0 f8 f8     ...........`p...
     540:	f8 f8 fc fc fc fc fc fc fc fc fc fc fc f8 f8 f8     ................
     550:	f8 f8 f8 f0 f0 f0 f0 f0 f0 f8 f8 f8 fc fc fc fe     ................
     560:	fe fe fe fc fc fc fd ff ff ff ff ff ff ff ff ff     ................
     570:	ff ff ff ff ff ff ff 7f 3f 1f 0f 07 c3 e3 e1 f1     ........?.......
     580:	f1 f1 f1 c1 80 80 c3 ff ff ff ff ff ff ff ff ff     ................
     590:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     5a0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     5b0:	ff ff ff ff ff ff ff ff ff ff 00 00 00 ff ff ff     ................
     5c0:	ff ff ff e3 e3 e3 f7 ff ff ff ff ff ff ff ff 0f     ................
     5d0:	07 07 1f ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     5e0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     5f0:	ff ff ff ff 1f 07 01 80 f0 fc fe ff ff ff ff ff     ................
     600:	ff ff ff ff ff ff ff ff ff 03 01 01 07 87 c3 e3     ................
     610:	e1 f1 f1 01 01 03 ff ff ff 3f 0f 07 83 e3 e1 f1     .........?......
     620:	f1 71 71 31 21 03 07 cf ff ff ff ff 7f 1f 0f 87     .qq1!...........
     630:	c3 e3 f1 f1 f1 f1 f1 e1 c3 07 00 00 f8 ff ff ff     ................
     640:	ff ff 03 01 01 03 ff ff ff ff f9 f1 f1 f1 f1 00     ................
     650:	00 00 00 f1 f1 f1 f1 f1 ff ff ff 3f 0f 0f 07 c7     ...........?....
     660:	e7 e3 e3 f3 f1 c1 81 81 cf ff ff ff ff ff ff ff     ................
     670:	ff ff ff ff c0 00 00 1f 3f 7f ff ff ff ff 7f 7f     ........?.......
     680:	3f 3f 1f 0f 0f 9f ff ff ff 00 00 00 ff ff ff ff     ??..............
     690:	ff ff ff fe fe fe ff ff f7 80 00 02 23 71 71 f8     ............#qq.
     6a0:	f8 fc fc fe 7e 7f 3f 1f 1f ff ff ff c0 00 00 1f     ....~.?.........
     6b0:	3f 7f ff ff ff ff ff 7f 3f 00 00 00 3f ff ff ff     ?.......?...?...
     6c0:	ff ff 00 00 00 00 ff ff ff ff ff ff ff ff ff f8     ................
     6d0:	00 00 00 ff ff ff ff ff ff ff 3f 3e 7c 78 f8 f8     ..........?>|x..
     6e0:	f8 f8 f0 f1 61 03 03 0f ff ff ff ff ff ff ff ff     ....a...........
     6f0:	ff ff ff ff ff ff fe fc fc f8 f8 f8 78 38 38 1c     ............x88.
     700:	1c 1c 0e 0f 0f 0f 0f 1f 3f 7c f8 f8 ff ff ff ff     ........?|......
     710:	ff ff ff ff ff ff ff ff ff ff fe fe fc fc f8 f8     ................
     720:	f8 f8 f8 f8 f8 fc fc fe ff ff ff ff ff ff fe fc     ................
     730:	fc f8 f8 f8 f8 f8 f8 f8 fc fc f8 f8 fc ff ff ff     ................
     740:	ff ff fc f8 f8 fc ff ff ff ff ff ff ff ff ff fd     ................
     750:	f8 f8 fc ff ff ff ff ff ff ff fe fc fc f8 f8 f8     ................
     760:	f8 f8 f8 f8 fc fc fe ff ff ff ff ff ff ff ff ff     ................
     770:	ff ff ff ff ff ff 3f 0f 07 03 01 00 00 00 00 80     ......?.........
     780:	c0 e0 f0 f0 f8 f8 fc fc fc fc f8 f1 e3 e7 c7 8f     ................
     790:	0f 1f 3f 7f 7f ff ff ff ff ff ff ff ff ff ff 7f     ..?.............
     7a0:	3f 3f 1f 1f 1f 0f 0f 0f 0f 0f 0f 0f 0f 0f 0f 0f     ??..............
     7b0:	1f 1f 3f 3f 3f 3f 3f 3f 1f 1f 0f 0f 0f 07 07 03     ..??????........
     7c0:	03 03 03 03 03 03 07 07 0f 1f 1f 1f 3f 3f 3f 3f     ............????
     7d0:	3f 3f 3f 3f 1f 1f 1f 1f 0f 0f 07 07 03 03 03 03     ????............
     7e0:	03 03 03 07 0f 1f 3f 7f ff ff ff ff ff ff ff ff     ......?.........
     7f0:	ff ff ff ff ff ff fe fc f8 f0 f0 e0 f8 fe ff ff     ................
     800:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     810:	ff fe fe fc f8 f0 e0 e1 c1 c1 81 81 81 80 80 80     ................
     820:	80 c0 c0 e0 e0 f0 f0 f8 f8 fc fc fc fc fc fc fc     ................
     830:	fc fc fc f8 f8 f8 f0 f0 f0 f0 f0 f0 f0 f8 fc fc     ................
     840:	fc fe fe ff ff ff ff ff ff fe fe fe fc f8 f8 f8     ................
     850:	f0 f0 f0 f0 f0 f0 f0 f0 f8 f8 f8 f8 fc fc fe fe     ................
     860:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

00000870 <brage>:
     870:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     880:	ff ff ff ff ff ff ff ff ff ff ff ff 3f 1f 1f 0f     ............?...
     890:	1f 9f 5f 5f 7f 3f 3f bf bf 7f 7f 7f 3f 3f bf bf     ..__.??.....??..
     8a0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     8b0:	fc fc fc f8 f8 f0 f0 f0 fc fc f8 f9 f9 fb f2 f6     ................
     8c0:	f4 f0 e0 c0 c0 c0 c0 c0 80 00 00 00 00 00 01 03     ................
     8d0:	07 1f 7f ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     8e0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     8f0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     900:	ff ff ff ff ff ff ff ff ff ff 81 00 00 00 00 00     ................
     910:	00 00 00 00 00 80 c0 f0 f8 fc fc fe fe ff ff ff     ................
     920:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     930:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     940:	ff ff 7f 7f 3f 7f ff ff ff fc f0 f0 f0 00 18 03     ....?...........
     950:	00 00 06 6f 1f 3f ff ff ff ff ff ff ff ff ff ff     ...o.?..........
     960:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     970:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     980:	ff ff ff ff ff ff ff ff ff ff ff ff fc 00 00 00     ................
     990:	00 00 00 0c ff ff ff ff ff ff ff ff ff ff ff ff     ................
     9a0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     9b0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     9c0:	ff fb e0 00 00 00 65 47 4f 3f ff ef 3e 18 00 00     ......eGO?..>...
     9d0:	00 00 00 00 00 1c 7f ff ff ff ff ff ff ff ff ff     ................
     9e0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     9f0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a00:	ff ff ff ff ff ff ff ff ff ff ff ff ff f0 c0 80     ................
     a10:	3e 04 c0 f0 fb df 9f 9f 9f 9f 9f 9f df cb 8b 83     >...............
     a20:	83 83 c7 e7 cf cf df ff ff ff ff ff ff ff ff ef     ................
     a30:	e7 e3 e1 e1 f0 f9 f3 e3 e3 e3 e3 f3 f3 f3 f3 f3     ................
     a40:	f3 f3 f3 fe fe fe f8 c0 e0 20 07 1f 1c 78 70 30     ......... ...xp0
     a50:	00 00 00 00 00 00 f0 ff ff ff ff ff ff ff ff ff     ................
     a60:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a70:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a80:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a90:	fe fe ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     aa0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     ab0:	ff ff ff ff 7f 3f ff ff ff ff ff ff ff ff ff ff     .....?..........
     ac0:	ff ff ff ff ff ff ff ff 7f 18 00 00 00 00 20 20     ..............  
     ad0:	20 10 00 00 80 f8 f8 ff ff ff ff ff ff ff ff ff      ...............
     ae0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     af0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     b00:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     b10:	ff ff ff ff ff ff cf 9f 9f ff ff ff ff ff ff ff     ................
     b20:	ff 7f ff ff ff ff f3 f3 f3 e7 e7 e7 e7 e7 e3 f3     ................
     b30:	f3 71 79 79 7c 7e 7f 3f 3f 3f 3f 3f bf ff fb ff     .qyy|~.?????....
     b40:	ff ff ff ff ff e7 fd fd fc 00 00 e0 fc fc fc f8     ................
     b50:	f8 fc fe ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     b60:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     b70:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     b80:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     b90:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     ba0:	ff ff fe fe fc fc fc fc fe fe fe ff ff ff ff ff     ................
     bb0:	ff ff ff ff ff fd ff fe fe fe ff ff ff ff ff ff     ................
     bc0:	ff ff ff ff ff 7f 1f 03 00 80 c3 c1 c0 81 1f 7f     ................
     bd0:	7f 7f 7f ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     be0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     bf0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     c00:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     c10:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     c20:	ff ff ff ff ff ff ff 7f 7f 7f 7f 7f ff ff ff ff     ................
     c30:	ff ff ff ff ff ff 7f 7f 7f 3f 3f 3f 1f 1f 0f 07     .........???....
     c40:	03 83 c1 e0 f0 f8 fc fe ff ff ff ff ff ff fe fc     ................
     c50:	f0 e0 c0 80 f9 ff ff ff ff ff ff ff ff ff ff ff     ................
     c60:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

00000c70 <tobias>:
	...
     cec:	00 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     d6c:	00 00 01 03 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     da8:	00 00 00 80 80 00 00 00 00 00 80 80 00 00 40 40     ..............@@
     db8:	40 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00     @...............
	...
     dd4:	00 80 80 a0 60 40 00 00 00 00 00 00 00 00 00 00     ....`@..........
	...
     e08:	00 00 00 38 7c fc f8 f8 f8 f8 f0 f0 f0 f0 f0 f0     ...8|...........
     e18:	f0 f0 f0 f0 f8 f8 f8 f8 fc fc fc fe fe fe fe 7e     ...............~
     e28:	7f 3f 3f 3f 9f 9f df ef ff ff ff f7 f7 f7 70 f0     .???..........p.
     e38:	70 70 f1 e1 e1 e1 e7 e3 e3 e6 c6 c0 c0 80 00 00     pp..............
	...
     e50:	00 f0 f0 7c 7c ff ff ff ff ff ff fe fc 78 00 00     ...||........x..
	...
     e8c:	00 01 03 03 03 03 03 03 03 03 07 07 07 07 27 2f     ..............'/
     e9c:	0f 0f 0f 1f 7f ff ff ff fd fc fc fc f8 f8 f8 f8     ................
     eac:	f0 f0 f0 e0 f0 f3 f3 ff ff fe fe fe fe fe ff ff     ................
     ebc:	ff ff ff ff ff ff ff ff ff ff 3d 00 00 00 00 00     ..........=.....
     ecc:	00 00 00 00 00 00 07 0f 0f 0f 0f 0f 0f 07 03 01     ................
	...
     f10:	00 00 00 06 1c 1e 3e 3e 3c 7e 7e 7e fe fe fc e0     ......>><~~~....
     f20:	80 9f 9f bf bf bf bf bf 9f 9f 9f ff ff ff ff f3     ................
     f30:	f3 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     f40:	ff ff ff ff f7 fc fe ff ff ff ff ff ff fe fe fe     ................
     f50:	f8 f0 f0 f8 f8 f8 f8 fc fc f8 f0 c0 00 00 00 00     ................
     f60:	00 00 18 10 00 00 00 00 80 80 00 00 00 00 00 00     ................
	...
     f9c:	00 00 00 01 01 03 07 07 0f 0f 0b 03 01 01 05 05     ................
     fac:	07 0e 0e 0f 07 07 87 87 87 c3 e3 e3 f3 f1 f8 ff     ................
     fbc:	ff ff ff ff ff ff ff ff ff ff ff 7f 3f 7f 7f 3f     ............?..?
     fcc:	1f 1f 8f cf c7 f7 ff ff ff ff ff ff ff ff ff ff     ................
     fdc:	ff fe fc f0 e0 c0 06 0e ff ff ff ff ff ff ff ff     ................
     fec:	ff ff ff ff 80 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    102c:	00 00 00 01 03 03 07 07 07 07 07 0f 0f 0f 07 07     ................
    103c:	07 07 07 07 07 07 03 03 31 31 78 78 7c 7c 7e fe     ........11xx||~.
    104c:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    105c:	ff ff ff ff ff ff fe ff ff ff ff ff ff ff df ff     ................
    106c:	ff ff ff ff                                         ....

00001070 <pig>:
    1070:	ff ff ff ff ff ff ff 7f 7f ff ff ff ff ff ff ff     ................
    1080:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1090:	ff ff ff ff ff 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f     ................
    10a0:	7f 3f 3f 3f 3f 3f 3f 1f 1f 1f 1f 1f 1f 1f 1f 0f     .??????.........
    10b0:	0f 0f 0f 0f 0f 0f 0f 07 07 07 07 07 03 03 03 03     ................
    10c0:	03 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00     ................
    10d0:	00 00 00 00 00 01 01 01 01 01 01 03 03 03 07 0f     ................
    10e0:	0f 1f 3f 3f 0f 07 67 e7 07 07 1f ff ff ff ff ff     ..??..g.........
    10f0:	ff ff ff ff ff ff ff c0 80 01 07 07 0f 1f c7 1f     ................
    1100:	3f 3f 7f 3f 1f 1f 0f 0f 0f 07 07 03 03 01 01 01     ??.?............
    1110:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1168:	1c fc fb fb fb ff ff ff ff ff ff ff ff ff ff ff     ................
    1178:	ff fe fc 3c 00 00 80 02 10 40 00 00 00 00 00 00     ...<.....@......
	...
    11e8:	00 00 ff ff ff ff ff ff ff 1f 1f 1f 1f 1f 0f 0f     ................
    11f8:	07 03 00 00 00 00 03 03 00 00 00 00 00 00 00 00     ................
    1208:	01 00 00 00 00 00 08 00 00 20 40 00 00 00 00 00     ......... @.....
	...
    1264:	00 80 c0 e2 f8 fe ff ff ff ff ff ff ff fc fa f9     ................
    1274:	f0 e0 c0 80 80 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    128c:	00 00 00 40 00 00 00 00 00 01 00 10 20 00 00 00     ...@........ ...
	...
    12d0:	00 00 80 80 00 00 00 00 00 00 00 00 00 00 00 02     ................
    12e0:	00 00 00 fe ff ff ff ff ff ff ff ff ff ff ff ff     ................
    12f0:	ff ff ff ff ff ff ff ff ff ff fe fe fc fc fc fe     ................
    1300:	fc fc fc f8 f8 fc fc fc fc fc fc fc fc f9 f8 fc     ................
    1310:	fc fc fc fe fe fe fe fc fc fc f2 04 20 00 00 00     ............ ...
    1320:	00 00 00 00 00 e0 f8 f8 f8 fc fc fc fc fc fc f8     ................
    1330:	f8 fc fc fc fc fc f8 f8 fc fc fc fc f8 f8 f8 fc     ................
    1340:	fc fc fc fc fc f8 fe fe fe fe fe fe fe ff ff ff     ................
    1350:	ff ff ff ff 80 00 00 00 00 00 00 00 00 00 00 00     ................
    1360:	00 00 00 83 f7 ff ff ff ff ff ff ff ff ff ff ff     ................
    1370:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1380:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1390:	ff ff ff ff ff ff ff ff ff ff ff 00 00 00 98 00     ................
    13a0:	00 00 00 00 fc ff ff ff ff ff ff ff ff ff ff ff     ................
    13b0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    13c0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    13d0:	ff ff ff ff 3f 00 00 00 00 88 c0 e4 f8 00 00 00     ....?...........
    13e0:	00 e0 fc ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    13f0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1400:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1410:	ff ff ff ff ff ff ff ff ff f7 f3 f0 d0 c0 c4 e8     ................
    1420:	c0 c8 c0 f8 ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1430:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1440:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1450:	ff ff 9f 91 90 b0 80 80 f8 ff ff f7 e0 e0 f0 f0     ................
    1460:	fe ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

00001470 <font>:
	...
    1478:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
    1488:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
    1498:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
    14a8:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
    14b8:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
    14c8:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
    14d8:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
    14e8:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
    14f8:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
    1508:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
    1518:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
    1528:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
    1538:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
    1548:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
    1558:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
    1568:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
    1578:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
    1588:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
    1598:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
    15a8:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
    15b8:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
    15c8:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
    15d8:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
    15e8:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
    15f8:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
    1608:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
    1618:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
    1628:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
    1638:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
    1648:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
    1658:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
    1668:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
    1678:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
    1688:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
    1698:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
    16a8:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
    16b8:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
    16c8:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
    16d8:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
    16e8:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
    16f8:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
    1708:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
    1718:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
    1728:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
    1738:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
    1748:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
    1758:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............

00001768 <__ctors_end>:
    1768:	11 24       	eor	r1, r1
    176a:	1f be       	out	0x3f, r1	; 63
    176c:	cf ef       	ldi	r28, 0xFF	; 255
    176e:	d4 e0       	ldi	r29, 0x04	; 4
    1770:	de bf       	out	0x3e, r29	; 62
    1772:	cd bf       	out	0x3d, r28	; 61

00001774 <__do_copy_data>:
    1774:	11 e0       	ldi	r17, 0x01	; 1
    1776:	a0 e0       	ldi	r26, 0x00	; 0
    1778:	b1 e0       	ldi	r27, 0x01	; 1
    177a:	ea e5       	ldi	r30, 0x5A	; 90
    177c:	fe e2       	ldi	r31, 0x2E	; 46
    177e:	02 c0       	rjmp	.+4      	; 0x1784 <__do_copy_data+0x10>
    1780:	05 90       	lpm	r0, Z+
    1782:	0d 92       	st	X+, r0
    1784:	a4 38       	cpi	r26, 0x84	; 132
    1786:	b1 07       	cpc	r27, r17
    1788:	d9 f7       	brne	.-10     	; 0x1780 <__do_copy_data+0xc>

0000178a <__do_clear_bss>:
    178a:	22 e0       	ldi	r18, 0x02	; 2
    178c:	a4 e8       	ldi	r26, 0x84	; 132
    178e:	b1 e0       	ldi	r27, 0x01	; 1
    1790:	01 c0       	rjmp	.+2      	; 0x1794 <.do_clear_bss_start>

00001792 <.do_clear_bss_loop>:
    1792:	1d 92       	st	X+, r1

00001794 <.do_clear_bss_start>:
    1794:	a4 36       	cpi	r26, 0x64	; 100
    1796:	b2 07       	cpc	r27, r18
    1798:	e1 f7       	brne	.-8      	; 0x1792 <.do_clear_bss_loop>
    179a:	0e 94 6c 0c 	call	0x18d8	; 0x18d8 <main>
    179e:	0c 94 2b 17 	jmp	0x2e56	; 0x2e56 <_exit>

000017a2 <__bad_interrupt>:
    17a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000017a6 <ADC_init>:
    17a6:	85 b7       	in	r24, 0x35	; 53
    17a8:	88 60       	ori	r24, 0x08	; 8
    17aa:	85 bf       	out	0x35, r24	; 53
    17ac:	85 b7       	in	r24, 0x35	; 53
    17ae:	84 60       	ori	r24, 0x04	; 4
    17b0:	85 bf       	out	0x35, r24	; 53
    17b2:	86 b7       	in	r24, 0x36	; 54
    17b4:	80 64       	ori	r24, 0x40	; 64
    17b6:	86 bf       	out	0x36, r24	; 54
    17b8:	10 92 4e 02 	sts	0x024E, r1
    17bc:	c3 9a       	sbi	0x18, 3	; 24
    17be:	bb 98       	cbi	0x17, 3	; 23
    17c0:	08 95       	ret

000017c2 <ADC_read>:
    17c2:	e0 91 06 01 	lds	r30, 0x0106
    17c6:	f0 91 07 01 	lds	r31, 0x0107
    17ca:	8d 5f       	subi	r24, 0xFD	; 253
    17cc:	80 83       	st	Z, r24
    17ce:	b3 99       	sbic	0x16, 3	; 22
    17d0:	fe cf       	rjmp	.-4      	; 0x17ce <ADC_read+0xc>
    17d2:	e0 91 06 01 	lds	r30, 0x0106
    17d6:	f0 91 07 01 	lds	r31, 0x0107
    17da:	80 81       	ld	r24, Z
    17dc:	08 95       	ret

000017de <__vector_1>:
    17de:	1f 92       	push	r1
    17e0:	0f 92       	push	r0
    17e2:	0f b6       	in	r0, 0x3f	; 63
    17e4:	0f 92       	push	r0
    17e6:	11 24       	eor	r1, r1
    17e8:	8f 93       	push	r24
    17ea:	81 e0       	ldi	r24, 0x01	; 1
    17ec:	80 93 4e 02 	sts	0x024E, r24
    17f0:	8f 91       	pop	r24
    17f2:	0f 90       	pop	r0
    17f4:	0f be       	out	0x3f, r0	; 63
    17f6:	0f 90       	pop	r0
    17f8:	1f 90       	pop	r1
    17fa:	18 95       	reti

000017fc <CAN_init>:




CAN_init(){
	MCP2515_init();
    17fc:	0e 94 d4 0d 	call	0x1ba8	; 0x1ba8 <MCP2515_init>
	MCP2515_bitModify(MCP_CANCTRL, 0b11100000, MODE_LOOPBACK); 
    1800:	40 e4       	ldi	r20, 0x40	; 64
    1802:	50 e0       	ldi	r21, 0x00	; 0
    1804:	60 ee       	ldi	r22, 0xE0	; 224
    1806:	70 e0       	ldi	r23, 0x00	; 0
    1808:	8f e0       	ldi	r24, 0x0F	; 15
    180a:	90 e0       	ldi	r25, 0x00	; 0
    180c:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <MCP2515_bitModify>
    1810:	08 95       	ret

00001812 <CAN_message_send>:
// CAN_transmit(){
// 	MCP2515_requestToSend(MCP_RTS_TX0);
// 	
// }

void CAN_message_send(CAN_message* message) {
    1812:	1f 93       	push	r17
    1814:	cf 93       	push	r28
    1816:	df 93       	push	r29
    1818:	ec 01       	movw	r28, r24
	MCP2515_bitModify(MCP_TXB0SIDL, 0b00010000, 0b00001000);
    181a:	48 e0       	ldi	r20, 0x08	; 8
    181c:	50 e0       	ldi	r21, 0x00	; 0
    181e:	60 e1       	ldi	r22, 0x10	; 16
    1820:	70 e0       	ldi	r23, 0x00	; 0
    1822:	82 e3       	ldi	r24, 0x32	; 50
    1824:	90 e0       	ldi	r25, 0x00	; 0
    1826:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <MCP2515_bitModify>
	MCP2515_write(MCP_TXB0SIDH, message->id);
    182a:	68 81       	ld	r22, Y
    182c:	79 81       	ldd	r23, Y+1	; 0x01
    182e:	81 e3       	ldi	r24, 0x31	; 49
    1830:	90 e0       	ldi	r25, 0x00	; 0
    1832:	0e 94 65 0d 	call	0x1aca	; 0x1aca <MCP2515_write>
	MCP2515_write(MCP_TXB0SIDL, 0x00);
    1836:	60 e0       	ldi	r22, 0x00	; 0
    1838:	70 e0       	ldi	r23, 0x00	; 0
    183a:	82 e3       	ldi	r24, 0x32	; 50
    183c:	90 e0       	ldi	r25, 0x00	; 0
    183e:	0e 94 65 0d 	call	0x1aca	; 0x1aca <MCP2515_write>
	MCP2515_write(MCP_TXB0DLC, message->length);
    1842:	6a 81       	ldd	r22, Y+2	; 0x02
    1844:	70 e0       	ldi	r23, 0x00	; 0
    1846:	85 e3       	ldi	r24, 0x35	; 53
    1848:	90 e0       	ldi	r25, 0x00	; 0
    184a:	0e 94 65 0d 	call	0x1aca	; 0x1aca <MCP2515_write>
	
	for (uint8_t i = 0; i < message->length; i++){
    184e:	8a 81       	ldd	r24, Y+2	; 0x02
    1850:	88 23       	and	r24, r24
    1852:	79 f0       	breq	.+30     	; 0x1872 <CAN_message_send+0x60>
    1854:	10 e0       	ldi	r17, 0x00	; 0
		MCP2515_write(MCP_TXB0D0 + i, message->data[i]);	
    1856:	81 2f       	mov	r24, r17
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	fe 01       	movw	r30, r28
    185c:	e8 0f       	add	r30, r24
    185e:	f9 1f       	adc	r31, r25
    1860:	63 81       	ldd	r22, Z+3	; 0x03
    1862:	70 e0       	ldi	r23, 0x00	; 0
    1864:	c6 96       	adiw	r24, 0x36	; 54
    1866:	0e 94 65 0d 	call	0x1aca	; 0x1aca <MCP2515_write>
	MCP2515_bitModify(MCP_TXB0SIDL, 0b00010000, 0b00001000);
	MCP2515_write(MCP_TXB0SIDH, message->id);
	MCP2515_write(MCP_TXB0SIDL, 0x00);
	MCP2515_write(MCP_TXB0DLC, message->length);
	
	for (uint8_t i = 0; i < message->length; i++){
    186a:	1f 5f       	subi	r17, 0xFF	; 255
    186c:	8a 81       	ldd	r24, Y+2	; 0x02
    186e:	18 17       	cp	r17, r24
    1870:	90 f3       	brcs	.-28     	; 0x1856 <CAN_message_send+0x44>
		MCP2515_write(MCP_TXB0D0 + i, message->data[i]);	
	}
	MCP2515_requestToSend(MCP_RTS_TX0);
    1872:	81 e8       	ldi	r24, 0x81	; 129
    1874:	90 e0       	ldi	r25, 0x00	; 0
    1876:	0e 94 80 0d 	call	0x1b00	; 0x1b00 <MCP2515_requestToSend>
	
}
    187a:	df 91       	pop	r29
    187c:	cf 91       	pop	r28
    187e:	1f 91       	pop	r17
    1880:	08 95       	ret

00001882 <CAN_message_recieve>:

void CAN_message_recieve(CAN_message *msg){
    1882:	ff 92       	push	r15
    1884:	0f 93       	push	r16
    1886:	1f 93       	push	r17
    1888:	cf 93       	push	r28
    188a:	df 93       	push	r29
    188c:	8c 01       	movw	r16, r24
	msg->id= MCP2515_read(MCP_RXB0SIDH);
    188e:	81 e6       	ldi	r24, 0x61	; 97
    1890:	90 e0       	ldi	r25, 0x00	; 0
    1892:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <MCP2515_read>
    1896:	f8 01       	movw	r30, r16
    1898:	91 83       	std	Z+1, r25	; 0x01
    189a:	80 83       	st	Z, r24
	msg->length=MCP2515_read(MCP_RXB0DLC);
    189c:	85 e6       	ldi	r24, 0x65	; 101
    189e:	90 e0       	ldi	r25, 0x00	; 0
    18a0:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <MCP2515_read>
    18a4:	f8 01       	movw	r30, r16
    18a6:	82 83       	std	Z+2, r24	; 0x02
	for(uint8_t i =0; i < msg->length;i++){
    18a8:	88 23       	and	r24, r24
    18aa:	81 f0       	breq	.+32     	; 0x18cc <CAN_message_recieve+0x4a>
    18ac:	f1 2c       	mov	r15, r1
		msg->data[i]=MCP2515_read(MCP_RXB0D0 + i);
    18ae:	cf 2d       	mov	r28, r15
    18b0:	d0 e0       	ldi	r29, 0x00	; 0
    18b2:	ce 01       	movw	r24, r28
    18b4:	8a 59       	subi	r24, 0x9A	; 154
    18b6:	9f 4f       	sbci	r25, 0xFF	; 255
    18b8:	0e 94 4d 0d 	call	0x1a9a	; 0x1a9a <MCP2515_read>
    18bc:	c0 0f       	add	r28, r16
    18be:	d1 1f       	adc	r29, r17
    18c0:	8b 83       	std	Y+3, r24	; 0x03
}

void CAN_message_recieve(CAN_message *msg){
	msg->id= MCP2515_read(MCP_RXB0SIDH);
	msg->length=MCP2515_read(MCP_RXB0DLC);
	for(uint8_t i =0; i < msg->length;i++){
    18c2:	f3 94       	inc	r15
    18c4:	f8 01       	movw	r30, r16
    18c6:	82 81       	ldd	r24, Z+2	; 0x02
    18c8:	f8 16       	cp	r15, r24
    18ca:	88 f3       	brcs	.-30     	; 0x18ae <CAN_message_recieve+0x2c>
		msg->data[i]=MCP2515_read(MCP_RXB0D0 + i);
	}
}
    18cc:	df 91       	pop	r29
    18ce:	cf 91       	pop	r28
    18d0:	1f 91       	pop	r17
    18d2:	0f 91       	pop	r16
    18d4:	ff 90       	pop	r15
    18d6:	08 95       	ret

000018d8 <main>:
#include "CAN.h"

int main(void)
{
	
	USART_init();
    18d8:	0e 94 9d 12 	call	0x253a	; 0x253a <USART_init>
	set_bit(MCUCR, SRE);
    18dc:	85 b7       	in	r24, 0x35	; 53
    18de:	80 68       	ori	r24, 0x80	; 128
    18e0:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR,XMM2);
    18e2:	80 b7       	in	r24, 0x30	; 48
    18e4:	80 62       	ori	r24, 0x20	; 32
    18e6:	80 bf       	out	0x30, r24	; 48
	set_bit(MCUCR,SRW10);
    18e8:	85 b7       	in	r24, 0x35	; 53
    18ea:	80 64       	ori	r24, 0x40	; 64
    18ec:	85 bf       	out	0x35, r24	; 53
	set_bit(EMCUCR,SRW11);
    18ee:	86 b7       	in	r24, 0x36	; 54
    18f0:	82 60       	ori	r24, 0x02	; 2
    18f2:	86 bf       	out	0x36, r24	; 54
	
	//SRAM_test();
	set_bit(DDRD, 6); // Write pin Atmega, output
    18f4:	8e 9a       	sbi	0x11, 6	; 17
	set_bit(DDRD, 7); // Read Pin Atmega, output
    18f6:	8f 9a       	sbi	0x11, 7	; 17
	set_bit(DDRE, 1); //Adresse Latch Enable
    18f8:	31 9a       	sbi	0x06, 1	; 6
	clear_bit(DDRB, 6);
    18fa:	be 98       	cbi	0x17, 6	; 23
	clear_bit(DDRB, 7);
    18fc:	bf 98       	cbi	0x17, 7	; 23
	clear_bit(DDRB, 8);
    18fe:	87 b3       	in	r24, 0x17	; 23
    1900:	87 bb       	out	0x17, r24	; 23
	ADC_init();
    1902:	0e 94 d3 0b 	call	0x17a6	; 0x17a6 <ADC_init>
	joystick_init();
    1906:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <joystick_init>
	OLED_init();
    190a:	0e 94 80 10 	call	0x2100	; 0x2100 <OLED_init>
	CAN_init();
    190e:	0e 94 fe 0b 	call	0x17fc	; 0x17fc <CAN_init>
	MENU_init_menu();
    1912:	0e 94 d9 0d 	call	0x1bb2	; 0x1bb2 <MENU_init_menu>
	
	
	DIR joystick_direction = NEUTRAL;
	MENU_print_menu();
    1916:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <MENU_print_menu>
	
	CAN_message *msg;
	for (int i = 0; i < 8; i++){
		msg->data[i] = (uint8_t)(65+i);
    191a:	e0 e0       	ldi	r30, 0x00	; 0
    191c:	f0 e0       	ldi	r31, 0x00	; 0
    191e:	81 e4       	ldi	r24, 0x41	; 65
    1920:	83 83       	std	Z+3, r24	; 0x03
    1922:	82 e4       	ldi	r24, 0x42	; 66
    1924:	84 83       	std	Z+4, r24	; 0x04
    1926:	83 e4       	ldi	r24, 0x43	; 67
    1928:	85 83       	std	Z+5, r24	; 0x05
    192a:	84 e4       	ldi	r24, 0x44	; 68
    192c:	86 83       	std	Z+6, r24	; 0x06
    192e:	85 e4       	ldi	r24, 0x45	; 69
    1930:	87 83       	std	Z+7, r24	; 0x07
    1932:	86 e4       	ldi	r24, 0x46	; 70
    1934:	80 87       	std	Z+8, r24	; 0x08
    1936:	87 e4       	ldi	r24, 0x47	; 71
    1938:	81 87       	std	Z+9, r24	; 0x09
    193a:	88 e4       	ldi	r24, 0x48	; 72
    193c:	82 87       	std	Z+10, r24	; 0x0a
	}
	msg->id = 0;
    193e:	11 82       	std	Z+1, r1	; 0x01
    1940:	10 82       	st	Z, r1
	msg->length = 8;
    1942:	88 e0       	ldi	r24, 0x08	; 8
    1944:	82 83       	std	Z+2, r24	; 0x02
	CAN_message_send(msg);
    1946:	cf 01       	movw	r24, r30
    1948:	0e 94 09 0c 	call	0x1812	; 0x1812 <CAN_message_send>
	CAN_message *newMsg;
	CAN_message_recieve(newMsg);
    194c:	e1 2c       	mov	r14, r1
    194e:	f1 2c       	mov	r15, r1
    1950:	c7 01       	movw	r24, r14
    1952:	0e 94 41 0c 	call	0x1882	; 0x1882 <CAN_message_recieve>
    1956:	83 e0       	ldi	r24, 0x03	; 3
    1958:	e8 0e       	add	r14, r24
    195a:	f1 1c       	adc	r15, r1
	for (int i = 0; i < 8; i++){
    195c:	c0 e0       	ldi	r28, 0x00	; 0
    195e:	d0 e0       	ldi	r29, 0x00	; 0
		printf("%c\n", (char)newMsg->data[i]);
    1960:	0c e0       	ldi	r16, 0x0C	; 12
    1962:	11 e0       	ldi	r17, 0x01	; 1
    1964:	f7 01       	movw	r30, r14
    1966:	81 91       	ld	r24, Z+
    1968:	7f 01       	movw	r14, r30
    196a:	1f 92       	push	r1
    196c:	8f 93       	push	r24
    196e:	1f 93       	push	r17
    1970:	0f 93       	push	r16
    1972:	0e 94 1e 13 	call	0x263c	; 0x263c <printf>
	msg->id = 0;
	msg->length = 8;
	CAN_message_send(msg);
	CAN_message *newMsg;
	CAN_message_recieve(newMsg);
	for (int i = 0; i < 8; i++){
    1976:	21 96       	adiw	r28, 0x01	; 1
    1978:	0f 90       	pop	r0
    197a:	0f 90       	pop	r0
    197c:	0f 90       	pop	r0
    197e:	0f 90       	pop	r0
    1980:	c8 30       	cpi	r28, 0x08	; 8
    1982:	d1 05       	cpc	r29, r1
    1984:	79 f7       	brne	.-34     	; 0x1964 <main+0x8c>
    1986:	c4 e0       	ldi	r28, 0x04	; 4
 		MCP2515_write(0x0F, 0x54);
		char result = MCP2515_read(0x0F);
 		printf("%d\n",result);
 		_delay_ms(400);
 		*/
 		if (getJoyDir() != joystick_direction){
    1988:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <getJoyDir>
    198c:	8c 17       	cp	r24, r28
    198e:	e1 f3       	breq	.-8      	; 0x1988 <main+0xb0>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1990:	80 e0       	ldi	r24, 0x00	; 0
    1992:	90 ef       	ldi	r25, 0xF0	; 240
    1994:	01 97       	sbiw	r24, 0x01	; 1
    1996:	f1 f7       	brne	.-4      	; 0x1994 <main+0xbc>
			_delay_ms(50); 
 			joystick_direction = getJoyDir();
    1998:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <getJoyDir>
    199c:	c8 2f       	mov	r28, r24
			MENU_navigate(joystick_direction);
    199e:	0e 94 27 0f 	call	0x1e4e	; 0x1e4e <MENU_navigate>
			if (joystick_direction == RIGHT){
    19a2:	c2 30       	cpi	r28, 0x02	; 2
    19a4:	89 f7       	brne	.-30     	; 0x1988 <main+0xb0>
				MENU_selectAction();
    19a6:	0e 94 87 0f 	call	0x1f0e	; 0x1f0e <MENU_selectAction>
    19aa:	ee cf       	rjmp	.-36     	; 0x1988 <main+0xb0>

000019ac <calibrate>:
    19ac:	cf 93       	push	r28
    19ae:	81 e0       	ldi	r24, 0x01	; 1
    19b0:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <ADC_read>
    19b4:	c8 2f       	mov	r28, r24
    19b6:	82 e0       	ldi	r24, 0x02	; 2
    19b8:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <ADC_read>
    19bc:	28 2f       	mov	r18, r24
    19be:	6c 2f       	mov	r22, r28
    19c0:	70 e0       	ldi	r23, 0x00	; 0
    19c2:	82 2f       	mov	r24, r18
    19c4:	90 e0       	ldi	r25, 0x00	; 0
    19c6:	cf 91       	pop	r28
    19c8:	08 95       	ret

000019ca <getJoyPos>:
    19ca:	0f 93       	push	r16
    19cc:	1f 93       	push	r17
    19ce:	cf 93       	push	r28
    19d0:	82 e0       	ldi	r24, 0x02	; 2
    19d2:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <ADC_read>
    19d6:	c8 2f       	mov	r28, r24
    19d8:	81 e0       	ldi	r24, 0x01	; 1
    19da:	0e 94 e1 0b 	call	0x17c2	; 0x17c2 <ADC_read>
    19de:	48 2f       	mov	r20, r24
    19e0:	60 91 53 02 	lds	r22, 0x0253
    19e4:	70 91 54 02 	lds	r23, 0x0254
    19e8:	e0 91 55 02 	lds	r30, 0x0255
    19ec:	f0 91 56 02 	lds	r31, 0x0256
    19f0:	ac 2f       	mov	r26, r28
    19f2:	b0 e0       	ldi	r27, 0x00	; 0
    19f4:	a6 1b       	sub	r26, r22
    19f6:	b7 0b       	sbc	r27, r23
    19f8:	c4 e6       	ldi	r28, 0x64	; 100
    19fa:	ca 9f       	mul	r28, r26
    19fc:	c0 01       	movw	r24, r0
    19fe:	cb 9f       	mul	r28, r27
    1a00:	90 0d       	add	r25, r0
    1a02:	11 24       	eor	r1, r1
    1a04:	0e 94 ab 12 	call	0x2556	; 0x2556 <__divmodhi4>
    1a08:	8b 01       	movw	r16, r22
    1a0a:	50 e0       	ldi	r21, 0x00	; 0
    1a0c:	4e 1b       	sub	r20, r30
    1a0e:	5f 0b       	sbc	r21, r31
    1a10:	c4 9f       	mul	r28, r20
    1a12:	c0 01       	movw	r24, r0
    1a14:	c5 9f       	mul	r28, r21
    1a16:	90 0d       	add	r25, r0
    1a18:	11 24       	eor	r1, r1
    1a1a:	bf 01       	movw	r22, r30
    1a1c:	0e 94 ab 12 	call	0x2556	; 0x2556 <__divmodhi4>
    1a20:	9b 01       	movw	r18, r22
    1a22:	c9 01       	movw	r24, r18
    1a24:	b8 01       	movw	r22, r16
    1a26:	cf 91       	pop	r28
    1a28:	1f 91       	pop	r17
    1a2a:	0f 91       	pop	r16
    1a2c:	08 95       	ret

00001a2e <joystick_init>:
    1a2e:	c2 9a       	sbi	0x18, 2	; 24
    1a30:	ba 98       	cbi	0x17, 2	; 23
    1a32:	0e 94 d6 0c 	call	0x19ac	; 0x19ac <calibrate>
    1a36:	60 93 53 02 	sts	0x0253, r22
    1a3a:	70 93 54 02 	sts	0x0254, r23
    1a3e:	80 93 55 02 	sts	0x0255, r24
    1a42:	90 93 56 02 	sts	0x0256, r25
    1a46:	80 e0       	ldi	r24, 0x00	; 0
    1a48:	90 e0       	ldi	r25, 0x00	; 0
    1a4a:	08 95       	ret

00001a4c <getJoyDir>:
    1a4c:	0e 94 e5 0c 	call	0x19ca	; 0x19ca <getJoyPos>
    1a50:	63 33       	cpi	r22, 0x33	; 51
    1a52:	71 05       	cpc	r23, r1
    1a54:	b4 f4       	brge	.+44     	; 0x1a82 <getJoyDir+0x36>
    1a56:	6e 3c       	cpi	r22, 0xCE	; 206
    1a58:	ef ef       	ldi	r30, 0xFF	; 255
    1a5a:	7e 07       	cpc	r23, r30
    1a5c:	a4 f0       	brlt	.+40     	; 0x1a86 <getJoyDir+0x3a>
    1a5e:	8e 3c       	cpi	r24, 0xCE	; 206
    1a60:	2f ef       	ldi	r18, 0xFF	; 255
    1a62:	92 07       	cpc	r25, r18
    1a64:	94 f0       	brlt	.+36     	; 0x1a8a <getJoyDir+0x3e>
    1a66:	83 33       	cpi	r24, 0x33	; 51
    1a68:	91 05       	cpc	r25, r1
    1a6a:	8c f4       	brge	.+34     	; 0x1a8e <getJoyDir+0x42>
    1a6c:	9b 01       	movw	r18, r22
    1a6e:	2c 5f       	subi	r18, 0xFC	; 252
    1a70:	3f 4f       	sbci	r19, 0xFF	; 255
    1a72:	29 30       	cpi	r18, 0x09	; 9
    1a74:	31 05       	cpc	r19, r1
    1a76:	68 f4       	brcc	.+26     	; 0x1a92 <getJoyDir+0x46>
    1a78:	04 96       	adiw	r24, 0x04	; 4
    1a7a:	09 97       	sbiw	r24, 0x09	; 9
    1a7c:	60 f0       	brcs	.+24     	; 0x1a96 <getJoyDir+0x4a>
    1a7e:	85 e0       	ldi	r24, 0x05	; 5
    1a80:	08 95       	ret
    1a82:	82 e0       	ldi	r24, 0x02	; 2
    1a84:	08 95       	ret
    1a86:	83 e0       	ldi	r24, 0x03	; 3
    1a88:	08 95       	ret
    1a8a:	81 e0       	ldi	r24, 0x01	; 1
    1a8c:	08 95       	ret
    1a8e:	80 e0       	ldi	r24, 0x00	; 0
    1a90:	08 95       	ret
    1a92:	85 e0       	ldi	r24, 0x05	; 5
    1a94:	08 95       	ret
    1a96:	84 e0       	ldi	r24, 0x04	; 4
    1a98:	08 95       	ret

00001a9a <MCP2515_read>:
}



uint8_t MCP2515_read(uint8_t address)
{
    1a9a:	cf 93       	push	r28
    1a9c:	c8 2f       	mov	r28, r24
	
	SPI_chipSelect(chipLOW);
    1a9e:	80 e0       	ldi	r24, 0x00	; 0
    1aa0:	90 e0       	ldi	r25, 0x00	; 0
    1aa2:	0e 94 8f 12 	call	0x251e	; 0x251e <SPI_chipSelect>
	SPI_write(MCP_READ);
    1aa6:	83 e0       	ldi	r24, 0x03	; 3
    1aa8:	90 e0       	ldi	r25, 0x00	; 0
    1aaa:	0e 94 7e 12 	call	0x24fc	; 0x24fc <SPI_write>
	SPI_write(address);
    1aae:	8c 2f       	mov	r24, r28
    1ab0:	90 e0       	ldi	r25, 0x00	; 0
    1ab2:	0e 94 7e 12 	call	0x24fc	; 0x24fc <SPI_write>
	uint8_t result = SPI_read();
    1ab6:	0e 94 82 12 	call	0x2504	; 0x2504 <SPI_read>
    1aba:	c8 2f       	mov	r28, r24
	SPI_chipSelect(chipHIGH);
    1abc:	81 e0       	ldi	r24, 0x01	; 1
    1abe:	90 e0       	ldi	r25, 0x00	; 0
    1ac0:	0e 94 8f 12 	call	0x251e	; 0x251e <SPI_chipSelect>
	return result;
	
}
    1ac4:	8c 2f       	mov	r24, r28
    1ac6:	cf 91       	pop	r28
    1ac8:	08 95       	ret

00001aca <MCP2515_write>:

void MCP2515_write(uint8_t address, uint8_t data){
    1aca:	cf 93       	push	r28
    1acc:	df 93       	push	r29
    1ace:	d8 2f       	mov	r29, r24
    1ad0:	c6 2f       	mov	r28, r22
	SPI_chipSelect(chipLOW);
    1ad2:	80 e0       	ldi	r24, 0x00	; 0
    1ad4:	90 e0       	ldi	r25, 0x00	; 0
    1ad6:	0e 94 8f 12 	call	0x251e	; 0x251e <SPI_chipSelect>
	SPI_write(MCP_WRITE);
    1ada:	82 e0       	ldi	r24, 0x02	; 2
    1adc:	90 e0       	ldi	r25, 0x00	; 0
    1ade:	0e 94 7e 12 	call	0x24fc	; 0x24fc <SPI_write>
	SPI_write(address);
    1ae2:	8d 2f       	mov	r24, r29
    1ae4:	90 e0       	ldi	r25, 0x00	; 0
    1ae6:	0e 94 7e 12 	call	0x24fc	; 0x24fc <SPI_write>
	SPI_write(data);
    1aea:	8c 2f       	mov	r24, r28
    1aec:	90 e0       	ldi	r25, 0x00	; 0
    1aee:	0e 94 7e 12 	call	0x24fc	; 0x24fc <SPI_write>
	SPI_chipSelect(chipHIGH);
    1af2:	81 e0       	ldi	r24, 0x01	; 1
    1af4:	90 e0       	ldi	r25, 0x00	; 0
    1af6:	0e 94 8f 12 	call	0x251e	; 0x251e <SPI_chipSelect>
}
    1afa:	df 91       	pop	r29
    1afc:	cf 91       	pop	r28
    1afe:	08 95       	ret

00001b00 <MCP2515_requestToSend>:


void MCP2515_requestToSend(uint8_t address){
    1b00:	cf 93       	push	r28
    1b02:	c8 2f       	mov	r28, r24
	
	SPI_chipSelect(chipLOW);
    1b04:	80 e0       	ldi	r24, 0x00	; 0
    1b06:	90 e0       	ldi	r25, 0x00	; 0
    1b08:	0e 94 8f 12 	call	0x251e	; 0x251e <SPI_chipSelect>
	if(address == MCP_RTS_TX0 || address == MCP_RTS_TX1 || address == MCP_RTS_TX2 || address == MCP_RTS_ALL){
    1b0c:	8f e7       	ldi	r24, 0x7F	; 127
    1b0e:	8c 0f       	add	r24, r28
    1b10:	82 30       	cpi	r24, 0x02	; 2
    1b12:	20 f0       	brcs	.+8      	; 0x1b1c <MCP2515_requestToSend+0x1c>
    1b14:	c4 38       	cpi	r28, 0x84	; 132
    1b16:	11 f0       	breq	.+4      	; 0x1b1c <MCP2515_requestToSend+0x1c>
    1b18:	c7 38       	cpi	r28, 0x87	; 135
    1b1a:	29 f4       	brne	.+10     	; 0x1b26 <MCP2515_requestToSend+0x26>
		SPI_write(address);	
    1b1c:	8c 2f       	mov	r24, r28
    1b1e:	90 e0       	ldi	r25, 0x00	; 0
    1b20:	0e 94 7e 12 	call	0x24fc	; 0x24fc <SPI_write>


void MCP2515_requestToSend(uint8_t address){
	
	SPI_chipSelect(chipLOW);
	if(address == MCP_RTS_TX0 || address == MCP_RTS_TX1 || address == MCP_RTS_TX2 || address == MCP_RTS_ALL){
    1b24:	0c c0       	rjmp	.+24     	; 0x1b3e <MCP2515_requestToSend+0x3e>
		SPI_write(address);	
	}
	
	else{
		OLED_print_pig();
    1b26:	0e 94 3b 12 	call	0x2476	; 0x2476 <OLED_print_pig>
    1b2a:	2a e2       	ldi	r18, 0x2A	; 42
    1b2c:	30 e5       	ldi	r19, 0x50	; 80
    1b2e:	8e ef       	ldi	r24, 0xFE	; 254
    1b30:	90 e0       	ldi	r25, 0x00	; 0
    1b32:	21 50       	subi	r18, 0x01	; 1
    1b34:	30 40       	sbci	r19, 0x00	; 0
    1b36:	80 40       	sbci	r24, 0x00	; 0
    1b38:	90 40       	sbci	r25, 0x00	; 0
    1b3a:	d9 f7       	brne	.-10     	; 0x1b32 <MCP2515_requestToSend+0x32>
    1b3c:	00 00       	nop
		_delay_ms(100000);
	}
	SPI_chipSelect(chipHIGH);
    1b3e:	81 e0       	ldi	r24, 0x01	; 1
    1b40:	90 e0       	ldi	r25, 0x00	; 0
    1b42:	0e 94 8f 12 	call	0x251e	; 0x251e <SPI_chipSelect>
}
    1b46:	cf 91       	pop	r28
    1b48:	08 95       	ret

00001b4a <MCP2515_bitModify>:
	uint8_t readStatus = MCP2515_read(SPDR);
	SPI_chipSelect(chipHIGH);
	return readStatus;
}

void MCP2515_bitModify(uint8_t address ,uint8_t maskByte, uint8_t data){
    1b4a:	1f 93       	push	r17
    1b4c:	cf 93       	push	r28
    1b4e:	df 93       	push	r29
    1b50:	18 2f       	mov	r17, r24
    1b52:	d6 2f       	mov	r29, r22
    1b54:	c4 2f       	mov	r28, r20
	SPI_chipSelect(chipLOW);
    1b56:	80 e0       	ldi	r24, 0x00	; 0
    1b58:	90 e0       	ldi	r25, 0x00	; 0
    1b5a:	0e 94 8f 12 	call	0x251e	; 0x251e <SPI_chipSelect>
	SPI_write(MCP_BITMOD);
    1b5e:	85 e0       	ldi	r24, 0x05	; 5
    1b60:	90 e0       	ldi	r25, 0x00	; 0
    1b62:	0e 94 7e 12 	call	0x24fc	; 0x24fc <SPI_write>
	SPI_write(address);
    1b66:	81 2f       	mov	r24, r17
    1b68:	90 e0       	ldi	r25, 0x00	; 0
    1b6a:	0e 94 7e 12 	call	0x24fc	; 0x24fc <SPI_write>
	SPI_write(maskByte);
    1b6e:	8d 2f       	mov	r24, r29
    1b70:	90 e0       	ldi	r25, 0x00	; 0
    1b72:	0e 94 7e 12 	call	0x24fc	; 0x24fc <SPI_write>
	SPI_write(data);
    1b76:	8c 2f       	mov	r24, r28
    1b78:	90 e0       	ldi	r25, 0x00	; 0
    1b7a:	0e 94 7e 12 	call	0x24fc	; 0x24fc <SPI_write>
	SPI_chipSelect(chipHIGH);
    1b7e:	81 e0       	ldi	r24, 0x01	; 1
    1b80:	90 e0       	ldi	r25, 0x00	; 0
    1b82:	0e 94 8f 12 	call	0x251e	; 0x251e <SPI_chipSelect>
}
    1b86:	df 91       	pop	r29
    1b88:	cf 91       	pop	r28
    1b8a:	1f 91       	pop	r17
    1b8c:	08 95       	ret

00001b8e <MCP2515_reset>:

void MCP2515_reset(){
	SPI_chipSelect(chipLOW);
    1b8e:	80 e0       	ldi	r24, 0x00	; 0
    1b90:	90 e0       	ldi	r25, 0x00	; 0
    1b92:	0e 94 8f 12 	call	0x251e	; 0x251e <SPI_chipSelect>
	SPI_write(MCP_RESET);
    1b96:	80 ec       	ldi	r24, 0xC0	; 192
    1b98:	90 e0       	ldi	r25, 0x00	; 0
    1b9a:	0e 94 7e 12 	call	0x24fc	; 0x24fc <SPI_write>
	SPI_chipSelect(chipHIGH);
    1b9e:	81 e0       	ldi	r24, 0x01	; 1
    1ba0:	90 e0       	ldi	r25, 0x00	; 0
    1ba2:	0e 94 8f 12 	call	0x251e	; 0x251e <SPI_chipSelect>
    1ba6:	08 95       	ret

00001ba8 <MCP2515_init>:
#define chipLOW 0
#define chipHIGH 1


uint8_t MCP2515_init(){
	SPI_init();
    1ba8:	0e 94 87 12 	call	0x250e	; 0x250e <SPI_init>
	MCP2515_reset();
    1bac:	0e 94 c7 0d 	call	0x1b8e	; 0x1b8e <MCP2515_reset>
	//	return 1;
	//}
	//else{
	//	return 0;
	//}
}
    1bb0:	08 95       	ret

00001bb2 <MENU_init_menu>:
#include "OLEDdriver.h"
static  struct menuScreen main, newGame, HighScores, Options, currentMenu, easyGame, normalGame, hardGame, Credits, Brightness, Sound;

uint8_t markerPage;

void MENU_init_menu(){
    1bb2:	8f 92       	push	r8
    1bb4:	9f 92       	push	r9
    1bb6:	bf 92       	push	r11
    1bb8:	cf 92       	push	r12
    1bba:	df 92       	push	r13
    1bbc:	ef 92       	push	r14
    1bbe:	ff 92       	push	r15
    1bc0:	0f 93       	push	r16
    1bc2:	1f 93       	push	r17
    1bc4:	cf 93       	push	r28
    1bc6:	df 93       	push	r29
	
	main.name = "MainMenu";
    1bc8:	e8 e3       	ldi	r30, 0x38	; 56
    1bca:	f2 e0       	ldi	r31, 0x02	; 2
    1bcc:	80 e1       	ldi	r24, 0x10	; 16
    1bce:	91 e0       	ldi	r25, 0x01	; 1
    1bd0:	91 83       	std	Z+1, r25	; 0x01
    1bd2:	80 83       	st	Z, r24
	main.parent = NULL;
    1bd4:	10 92 3b 02 	sts	0x023B, r1
    1bd8:	10 92 3a 02 	sts	0x023A, r1
	main.child[1] = &newGame;
    1bdc:	a6 e2       	ldi	r26, 0x26	; 38
    1bde:	b2 e0       	ldi	r27, 0x02	; 2
    1be0:	b0 93 3f 02 	sts	0x023F, r27
    1be4:	a0 93 3e 02 	sts	0x023E, r26
	main.child[2] = &HighScores;
    1be8:	24 e1       	ldi	r18, 0x14	; 20
    1bea:	32 e0       	ldi	r19, 0x02	; 2
    1bec:	30 93 41 02 	sts	0x0241, r19
    1bf0:	20 93 40 02 	sts	0x0240, r18
	main.child[3] = &Options;
    1bf4:	0f 2e       	mov	r0, r31
    1bf6:	f2 e0       	ldi	r31, 0x02	; 2
    1bf8:	8f 2e       	mov	r8, r31
    1bfa:	f2 e0       	ldi	r31, 0x02	; 2
    1bfc:	9f 2e       	mov	r9, r31
    1bfe:	f0 2d       	mov	r31, r0
    1c00:	90 92 43 02 	sts	0x0243, r9
    1c04:	80 92 42 02 	sts	0x0242, r8
	main.child[4] = &Credits;
    1c08:	88 ea       	ldi	r24, 0xA8	; 168
    1c0a:	91 e0       	ldi	r25, 0x01	; 1
    1c0c:	90 93 45 02 	sts	0x0245, r25
    1c10:	80 93 44 02 	sts	0x0244, r24
	main.menuIndex = 0;
    1c14:	10 92 49 02 	sts	0x0249, r1
	main.nmbrChilds = 4;
    1c18:	04 e0       	ldi	r16, 0x04	; 4
    1c1a:	00 93 48 02 	sts	0x0248, r16
	
	newGame.name = "New Game";
    1c1e:	49 e1       	ldi	r20, 0x19	; 25
    1c20:	51 e0       	ldi	r21, 0x01	; 1
    1c22:	11 96       	adiw	r26, 0x01	; 1
    1c24:	5c 93       	st	X, r21
    1c26:	4e 93       	st	-X, r20
	newGame.parent = &main;
    1c28:	f0 93 29 02 	sts	0x0229, r31
    1c2c:	e0 93 28 02 	sts	0x0228, r30
	newGame.child[1] = &easyGame;
    1c30:	0f 2e       	mov	r0, r31
    1c32:	fe ed       	ldi	r31, 0xDE	; 222
    1c34:	ef 2e       	mov	r14, r31
    1c36:	f1 e0       	ldi	r31, 0x01	; 1
    1c38:	ff 2e       	mov	r15, r31
    1c3a:	f0 2d       	mov	r31, r0
    1c3c:	f0 92 2d 02 	sts	0x022D, r15
    1c40:	e0 92 2c 02 	sts	0x022C, r14
	newGame.child[2] = &normalGame;
    1c44:	6c ec       	ldi	r22, 0xCC	; 204
    1c46:	71 e0       	ldi	r23, 0x01	; 1
    1c48:	70 93 2f 02 	sts	0x022F, r23
    1c4c:	60 93 2e 02 	sts	0x022E, r22
	newGame.child[3] = &hardGame;
    1c50:	4a eb       	ldi	r20, 0xBA	; 186
    1c52:	51 e0       	ldi	r21, 0x01	; 1
    1c54:	50 93 31 02 	sts	0x0231, r21
    1c58:	40 93 30 02 	sts	0x0230, r20
	newGame.nmbrChilds = 3;
    1c5c:	0f 2e       	mov	r0, r31
    1c5e:	f3 e0       	ldi	r31, 0x03	; 3
    1c60:	bf 2e       	mov	r11, r31
    1c62:	f0 2d       	mov	r31, r0
    1c64:	b0 92 36 02 	sts	0x0236, r11
	newGame.menuIndex = 1;
    1c68:	11 e0       	ldi	r17, 0x01	; 1
    1c6a:	10 93 37 02 	sts	0x0237, r17
	
	
 	easyGame.name = "Easy";
    1c6e:	0f 2e       	mov	r0, r31
    1c70:	f2 e2       	ldi	r31, 0x22	; 34
    1c72:	cf 2e       	mov	r12, r31
    1c74:	f1 e0       	ldi	r31, 0x01	; 1
    1c76:	df 2e       	mov	r13, r31
    1c78:	f0 2d       	mov	r31, r0
    1c7a:	e7 01       	movw	r28, r14
    1c7c:	d9 82       	std	Y+1, r13	; 0x01
    1c7e:	c8 82       	st	Y, r12
 	easyGame.parent = &newGame;
    1c80:	b0 93 e1 01 	sts	0x01E1, r27
    1c84:	a0 93 e0 01 	sts	0x01E0, r26
 	easyGame.nmbrChilds = 0;
    1c88:	10 92 ee 01 	sts	0x01EE, r1
 	easyGame.menuIndex = 11;
    1c8c:	0f 2e       	mov	r0, r31
    1c8e:	fb e0       	ldi	r31, 0x0B	; 11
    1c90:	ff 2e       	mov	r15, r31
    1c92:	f0 2d       	mov	r31, r0
    1c94:	f0 92 ef 01 	sts	0x01EF, r15
 	
 	normalGame.name = "Normal";
    1c98:	0f 2e       	mov	r0, r31
    1c9a:	f7 e2       	ldi	r31, 0x27	; 39
    1c9c:	ef 2e       	mov	r14, r31
    1c9e:	f1 e0       	ldi	r31, 0x01	; 1
    1ca0:	ff 2e       	mov	r15, r31
    1ca2:	f0 2d       	mov	r31, r0
    1ca4:	eb 01       	movw	r28, r22
    1ca6:	f9 82       	std	Y+1, r15	; 0x01
    1ca8:	e8 82       	st	Y, r14
 	normalGame.parent = &newGame;
    1caa:	b0 93 cf 01 	sts	0x01CF, r27
    1cae:	a0 93 ce 01 	sts	0x01CE, r26
 	normalGame.nmbrChilds = 0;
    1cb2:	10 92 dc 01 	sts	0x01DC, r1
 	normalGame.menuIndex = 12;
    1cb6:	6c e0       	ldi	r22, 0x0C	; 12
    1cb8:	60 93 dd 01 	sts	0x01DD, r22
 	
 	hardGame.name = "Hard";
    1cbc:	6e e2       	ldi	r22, 0x2E	; 46
    1cbe:	71 e0       	ldi	r23, 0x01	; 1
    1cc0:	ea 01       	movw	r28, r20
    1cc2:	79 83       	std	Y+1, r23	; 0x01
    1cc4:	68 83       	st	Y, r22
 	hardGame.parent = &newGame;
    1cc6:	b0 93 bd 01 	sts	0x01BD, r27
    1cca:	a0 93 bc 01 	sts	0x01BC, r26
 	hardGame.nmbrChilds = 0;
    1cce:	10 92 ca 01 	sts	0x01CA, r1
 	hardGame.menuIndex = 13;
    1cd2:	4d e0       	ldi	r20, 0x0D	; 13
    1cd4:	40 93 cb 01 	sts	0x01CB, r20
	
	
	HighScores.name = "High Scores";
    1cd8:	43 e3       	ldi	r20, 0x33	; 51
    1cda:	51 e0       	ldi	r21, 0x01	; 1
    1cdc:	d9 01       	movw	r26, r18
    1cde:	4d 93       	st	X+, r20
    1ce0:	5c 93       	st	X, r21
	HighScores.parent = &main;
    1ce2:	f0 93 17 02 	sts	0x0217, r31
    1ce6:	e0 93 16 02 	sts	0x0216, r30
	HighScores.nmbrChilds = 0;
    1cea:	10 92 24 02 	sts	0x0224, r1
	HighScores.menuIndex = 2;
    1cee:	42 e0       	ldi	r20, 0x02	; 2
    1cf0:	40 93 25 02 	sts	0x0225, r20
	
	Options.name = "Options";
    1cf4:	2f e3       	ldi	r18, 0x3F	; 63
    1cf6:	31 e0       	ldi	r19, 0x01	; 1
    1cf8:	e4 01       	movw	r28, r8
    1cfa:	39 83       	std	Y+1, r19	; 0x01
    1cfc:	28 83       	st	Y, r18
	Options.parent = &main;
    1cfe:	f0 93 05 02 	sts	0x0205, r31
    1d02:	e0 93 04 02 	sts	0x0204, r30
	Options.child[1] = &Brightness;
    1d06:	26 e9       	ldi	r18, 0x96	; 150
    1d08:	31 e0       	ldi	r19, 0x01	; 1
    1d0a:	30 93 09 02 	sts	0x0209, r19
    1d0e:	20 93 08 02 	sts	0x0208, r18
	Options.child[2] = &Sound;
    1d12:	a4 e8       	ldi	r26, 0x84	; 132
    1d14:	b1 e0       	ldi	r27, 0x01	; 1
    1d16:	b0 93 0b 02 	sts	0x020B, r27
    1d1a:	a0 93 0a 02 	sts	0x020A, r26
	Options.nmbrChilds = 2;
    1d1e:	40 93 12 02 	sts	0x0212, r20
	Options.menuIndex = 3;
    1d22:	b0 92 13 02 	sts	0x0213, r11
	
	Brightness.name = "Brightness";
    1d26:	47 e4       	ldi	r20, 0x47	; 71
    1d28:	51 e0       	ldi	r21, 0x01	; 1
    1d2a:	e9 01       	movw	r28, r18
    1d2c:	59 83       	std	Y+1, r21	; 0x01
    1d2e:	48 83       	st	Y, r20
	Brightness.parent = &Options;
    1d30:	90 92 99 01 	sts	0x0199, r9
    1d34:	80 92 98 01 	sts	0x0198, r8
	Brightness.nmbrChilds = 0;
    1d38:	10 92 a6 01 	sts	0x01A6, r1
	Brightness.menuIndex = 31;
    1d3c:	2f e1       	ldi	r18, 0x1F	; 31
    1d3e:	20 93 a7 01 	sts	0x01A7, r18
	
	Sound.name = "Sound";
    1d42:	22 e5       	ldi	r18, 0x52	; 82
    1d44:	31 e0       	ldi	r19, 0x01	; 1
    1d46:	2d 93       	st	X+, r18
    1d48:	3c 93       	st	X, r19
	Sound.parent = &Options;
    1d4a:	90 92 87 01 	sts	0x0187, r9
    1d4e:	80 92 86 01 	sts	0x0186, r8
	Sound.nmbrChilds = 0;
    1d52:	10 92 94 01 	sts	0x0194, r1
	Sound.menuIndex = 32;
    1d56:	20 e2       	ldi	r18, 0x20	; 32
    1d58:	20 93 95 01 	sts	0x0195, r18
	
	Credits.name = "Credits";
    1d5c:	28 e5       	ldi	r18, 0x58	; 88
    1d5e:	31 e0       	ldi	r19, 0x01	; 1
    1d60:	dc 01       	movw	r26, r24
    1d62:	2d 93       	st	X+, r18
    1d64:	3c 93       	st	X, r19
	Credits.parent = &main;
    1d66:	f0 93 ab 01 	sts	0x01AB, r31
    1d6a:	e0 93 aa 01 	sts	0x01AA, r30
	Credits.nmbrChilds = 0;
    1d6e:	10 92 b8 01 	sts	0x01B8, r1
	Credits.menuIndex = 4;
    1d72:	00 93 b9 01 	sts	0x01B9, r16
		
	
	currentMenu = main;
    1d76:	82 e1       	ldi	r24, 0x12	; 18
    1d78:	a0 ef       	ldi	r26, 0xF0	; 240
    1d7a:	b1 e0       	ldi	r27, 0x01	; 1
    1d7c:	01 90       	ld	r0, Z+
    1d7e:	0d 92       	st	X+, r0
    1d80:	8a 95       	dec	r24
    1d82:	e1 f7       	brne	.-8      	; 0x1d7c <MENU_init_menu+0x1ca>
	OLED_go_to_pos(1, 0);
    1d84:	60 e0       	ldi	r22, 0x00	; 0
    1d86:	81 e0       	ldi	r24, 0x01	; 1
    1d88:	0e 94 14 10 	call	0x2028	; 0x2028 <OLED_go_to_pos>
	markerPage = 1;	
    1d8c:	10 93 57 02 	sts	0x0257, r17
	OLED_print_char((uint8_t)(36));
    1d90:	84 e2       	ldi	r24, 0x24	; 36
    1d92:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <OLED_print_char>

	
	
}
    1d96:	df 91       	pop	r29
    1d98:	cf 91       	pop	r28
    1d9a:	1f 91       	pop	r17
    1d9c:	0f 91       	pop	r16
    1d9e:	ff 90       	pop	r15
    1da0:	ef 90       	pop	r14
    1da2:	df 90       	pop	r13
    1da4:	cf 90       	pop	r12
    1da6:	bf 90       	pop	r11
    1da8:	9f 90       	pop	r9
    1daa:	8f 90       	pop	r8
    1dac:	08 95       	ret

00001dae <MENU_print_menu>:



void MENU_print_menu(){
    1dae:	ef 92       	push	r14
    1db0:	ff 92       	push	r15
    1db2:	0f 93       	push	r16
    1db4:	1f 93       	push	r17
    1db6:	cf 93       	push	r28
    1db8:	df 93       	push	r29
	OLED_go_to_pos(0, 10);
    1dba:	6a e0       	ldi	r22, 0x0A	; 10
    1dbc:	80 e0       	ldi	r24, 0x00	; 0
    1dbe:	0e 94 14 10 	call	0x2028	; 0x2028 <OLED_go_to_pos>
	OLED_print_sentence("*");
    1dc2:	80 e6       	ldi	r24, 0x60	; 96
    1dc4:	91 e0       	ldi	r25, 0x01	; 1
    1dc6:	0e 94 27 10 	call	0x204e	; 0x204e <OLED_print_sentence>
	OLED_print_sentence(currentMenu.name);
    1dca:	80 91 f0 01 	lds	r24, 0x01F0
    1dce:	90 91 f1 01 	lds	r25, 0x01F1
    1dd2:	0e 94 27 10 	call	0x204e	; 0x204e <OLED_print_sentence>
	OLED_print_sentence("*");
    1dd6:	80 e6       	ldi	r24, 0x60	; 96
    1dd8:	91 e0       	ldi	r25, 0x01	; 1
    1dda:	0e 94 27 10 	call	0x204e	; 0x204e <OLED_print_sentence>
	for (int i = 1; i < currentMenu.nmbrChilds+1; i++){
    1dde:	80 91 00 02 	lds	r24, 0x0200
    1de2:	90 e0       	ldi	r25, 0x00	; 0
    1de4:	01 96       	adiw	r24, 0x01	; 1
    1de6:	02 97       	sbiw	r24, 0x02	; 2
    1de8:	f4 f0       	brlt	.+60     	; 0x1e26 <MENU_print_menu+0x78>
    1dea:	06 ef       	ldi	r16, 0xF6	; 246
    1dec:	11 e0       	ldi	r17, 0x01	; 1
    1dee:	c1 e0       	ldi	r28, 0x01	; 1
    1df0:	d0 e0       	ldi	r29, 0x00	; 0
    1df2:	0f 2e       	mov	r0, r31
    1df4:	f0 e0       	ldi	r31, 0x00	; 0
    1df6:	ef 2e       	mov	r14, r31
    1df8:	f2 e0       	ldi	r31, 0x02	; 2
    1dfa:	ff 2e       	mov	r15, r31
    1dfc:	f0 2d       	mov	r31, r0
		
		OLED_go_to_pos(i, 10);
    1dfe:	6a e0       	ldi	r22, 0x0A	; 10
    1e00:	8c 2f       	mov	r24, r28
    1e02:	0e 94 14 10 	call	0x2028	; 0x2028 <OLED_go_to_pos>
		OLED_print_sentence(currentMenu.child[i]->name);
    1e06:	d8 01       	movw	r26, r16
    1e08:	ed 91       	ld	r30, X+
    1e0a:	fd 91       	ld	r31, X+
    1e0c:	8d 01       	movw	r16, r26
    1e0e:	80 81       	ld	r24, Z
    1e10:	91 81       	ldd	r25, Z+1	; 0x01
    1e12:	0e 94 27 10 	call	0x204e	; 0x204e <OLED_print_sentence>
void MENU_print_menu(){
	OLED_go_to_pos(0, 10);
	OLED_print_sentence("*");
	OLED_print_sentence(currentMenu.name);
	OLED_print_sentence("*");
	for (int i = 1; i < currentMenu.nmbrChilds+1; i++){
    1e16:	21 96       	adiw	r28, 0x01	; 1
    1e18:	f7 01       	movw	r30, r14
    1e1a:	80 81       	ld	r24, Z
    1e1c:	90 e0       	ldi	r25, 0x00	; 0
    1e1e:	01 96       	adiw	r24, 0x01	; 1
    1e20:	c8 17       	cp	r28, r24
    1e22:	d9 07       	cpc	r29, r25
    1e24:	64 f3       	brlt	.-40     	; 0x1dfe <MENU_print_menu+0x50>
		OLED_go_to_pos(i, 10);
		OLED_print_sentence(currentMenu.child[i]->name);

	}

}
    1e26:	df 91       	pop	r29
    1e28:	cf 91       	pop	r28
    1e2a:	1f 91       	pop	r17
    1e2c:	0f 91       	pop	r16
    1e2e:	ff 90       	pop	r15
    1e30:	ef 90       	pop	r14
    1e32:	08 95       	ret

00001e34 <MENU_selectLine>:

void MENU_selectLine(uint8_t line){
	OLED_go_to_pos(line, 0);
    1e34:	60 e0       	ldi	r22, 0x00	; 0
    1e36:	0e 94 14 10 	call	0x2028	; 0x2028 <OLED_go_to_pos>
	OLED_print_char((uint8_t)(36));
    1e3a:	84 e2       	ldi	r24, 0x24	; 36
    1e3c:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <OLED_print_char>
    1e40:	08 95       	ret

00001e42 <MENU_clearLine>:
}

void MENU_clearLine(uint8_t line){
	OLED_go_to_pos(line, 0);
    1e42:	60 e0       	ldi	r22, 0x00	; 0
    1e44:	0e 94 14 10 	call	0x2028	; 0x2028 <OLED_go_to_pos>
	OLED_clear_char();
    1e48:	0e 94 c3 0f 	call	0x1f86	; 0x1f86 <OLED_clear_char>
    1e4c:	08 95       	ret

00001e4e <MENU_navigate>:
}

void MENU_navigate(DIR direction){
	
	if (direction == UP){
    1e4e:	81 11       	cpse	r24, r1
    1e50:	0f c0       	rjmp	.+30     	; 0x1e70 <MENU_navigate+0x22>
		if (markerPage > 1){
    1e52:	80 91 57 02 	lds	r24, 0x0257
    1e56:	82 30       	cpi	r24, 0x02	; 2
    1e58:	08 f4       	brcc	.+2      	; 0x1e5c <MENU_navigate+0xe>
    1e5a:	58 c0       	rjmp	.+176    	; 0x1f0c <MENU_navigate+0xbe>
			MENU_clearLine(markerPage);
    1e5c:	0e 94 21 0f 	call	0x1e42	; 0x1e42 <MENU_clearLine>
			markerPage--;
    1e60:	80 91 57 02 	lds	r24, 0x0257
    1e64:	81 50       	subi	r24, 0x01	; 1
    1e66:	80 93 57 02 	sts	0x0257, r24
			MENU_selectLine(markerPage);	
    1e6a:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <MENU_selectLine>
    1e6e:	08 95       	ret
		}
	}
	
	else if (direction == DOWN){
    1e70:	81 30       	cpi	r24, 0x01	; 1
    1e72:	89 f4       	brne	.+34     	; 0x1e96 <MENU_navigate+0x48>
		if (markerPage < currentMenu.nmbrChilds){
    1e74:	80 91 57 02 	lds	r24, 0x0257
    1e78:	90 91 00 02 	lds	r25, 0x0200
    1e7c:	89 17       	cp	r24, r25
    1e7e:	08 f0       	brcs	.+2      	; 0x1e82 <MENU_navigate+0x34>
    1e80:	45 c0       	rjmp	.+138    	; 0x1f0c <MENU_navigate+0xbe>
			MENU_clearLine(markerPage);
    1e82:	0e 94 21 0f 	call	0x1e42	; 0x1e42 <MENU_clearLine>
			markerPage++;
    1e86:	80 91 57 02 	lds	r24, 0x0257
    1e8a:	8f 5f       	subi	r24, 0xFF	; 255
    1e8c:	80 93 57 02 	sts	0x0257, r24
			MENU_selectLine(markerPage);
    1e90:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <MENU_selectLine>
    1e94:	08 95       	ret
	}	
}
		else if(direction == RIGHT){
    1e96:	82 30       	cpi	r24, 0x02	; 2
    1e98:	09 f5       	brne	.+66     	; 0x1edc <MENU_navigate+0x8e>
			if ((markerPage <= currentMenu.nmbrChilds) && (markerPage != 0)){
    1e9a:	e0 91 57 02 	lds	r30, 0x0257
    1e9e:	80 91 00 02 	lds	r24, 0x0200
    1ea2:	8e 17       	cp	r24, r30
    1ea4:	98 f1       	brcs	.+102    	; 0x1f0c <MENU_navigate+0xbe>
    1ea6:	ee 23       	and	r30, r30
    1ea8:	89 f1       	breq	.+98     	; 0x1f0c <MENU_navigate+0xbe>
				currentMenu = *currentMenu.child[markerPage];
    1eaa:	f0 e0       	ldi	r31, 0x00	; 0
    1eac:	ee 0f       	add	r30, r30
    1eae:	ff 1f       	adc	r31, r31
    1eb0:	ec 50       	subi	r30, 0x0C	; 12
    1eb2:	fe 4f       	sbci	r31, 0xFE	; 254
    1eb4:	01 90       	ld	r0, Z+
    1eb6:	f0 81       	ld	r31, Z
    1eb8:	e0 2d       	mov	r30, r0
    1eba:	82 e1       	ldi	r24, 0x12	; 18
    1ebc:	a0 ef       	ldi	r26, 0xF0	; 240
    1ebe:	b1 e0       	ldi	r27, 0x01	; 1
    1ec0:	01 90       	ld	r0, Z+
    1ec2:	0d 92       	st	X+, r0
    1ec4:	8a 95       	dec	r24
    1ec6:	e1 f7       	brne	.-8      	; 0x1ec0 <MENU_navigate+0x72>
				OLED_reset();
    1ec8:	0e 94 5c 10 	call	0x20b8	; 0x20b8 <OLED_reset>
				MENU_print_menu();
    1ecc:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <MENU_print_menu>
				markerPage = 1;
    1ed0:	81 e0       	ldi	r24, 0x01	; 1
    1ed2:	80 93 57 02 	sts	0x0257, r24
				MENU_selectLine(markerPage);
    1ed6:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <MENU_selectLine>
    1eda:	08 95       	ret
				
			}
		}
		else if(direction == LEFT){
    1edc:	83 30       	cpi	r24, 0x03	; 3
    1ede:	b1 f4       	brne	.+44     	; 0x1f0c <MENU_navigate+0xbe>
			if (currentMenu.parent != NULL){
    1ee0:	e0 91 f2 01 	lds	r30, 0x01F2
    1ee4:	f0 91 f3 01 	lds	r31, 0x01F3
    1ee8:	30 97       	sbiw	r30, 0x00	; 0
    1eea:	81 f0       	breq	.+32     	; 0x1f0c <MENU_navigate+0xbe>
				currentMenu = *currentMenu.parent;
    1eec:	82 e1       	ldi	r24, 0x12	; 18
    1eee:	a0 ef       	ldi	r26, 0xF0	; 240
    1ef0:	b1 e0       	ldi	r27, 0x01	; 1
    1ef2:	01 90       	ld	r0, Z+
    1ef4:	0d 92       	st	X+, r0
    1ef6:	8a 95       	dec	r24
    1ef8:	e1 f7       	brne	.-8      	; 0x1ef2 <MENU_navigate+0xa4>
				OLED_reset();
    1efa:	0e 94 5c 10 	call	0x20b8	; 0x20b8 <OLED_reset>
				MENU_print_menu();
    1efe:	0e 94 d7 0e 	call	0x1dae	; 0x1dae <MENU_print_menu>
				markerPage = 1;
    1f02:	81 e0       	ldi	r24, 0x01	; 1
    1f04:	80 93 57 02 	sts	0x0257, r24
				MENU_selectLine(markerPage);
    1f08:	0e 94 1a 0f 	call	0x1e34	; 0x1e34 <MENU_selectLine>
    1f0c:	08 95       	ret

00001f0e <MENU_selectAction>:
		}
	}
}
	
void MENU_selectAction(){
	if (currentMenu.nmbrChilds == 0){
    1f0e:	80 91 00 02 	lds	r24, 0x0200
    1f12:	81 11       	cpse	r24, r1
    1f14:	37 c0       	rjmp	.+110    	; 0x1f84 <MENU_selectAction+0x76>
		if (currentMenu.name == "High Scores"){
    1f16:	80 91 f0 01 	lds	r24, 0x01F0
    1f1a:	90 91 f1 01 	lds	r25, 0x01F1
    1f1e:	83 53       	subi	r24, 0x33	; 51
    1f20:	91 40       	sbci	r25, 0x01	; 1
    1f22:	21 f4       	brne	.+8      	; 0x1f2c <MENU_selectAction+0x1e>
			OLED_print_sentence("high scores");
    1f24:	82 e6       	ldi	r24, 0x62	; 98
    1f26:	91 e0       	ldi	r25, 0x01	; 1
    1f28:	0e 94 27 10 	call	0x204e	; 0x204e <OLED_print_sentence>
			//print highscores
		}
		if (currentMenu.name == "Easy"){
    1f2c:	80 91 f0 01 	lds	r24, 0x01F0
    1f30:	90 91 f1 01 	lds	r25, 0x01F1
    1f34:	82 52       	subi	r24, 0x22	; 34
    1f36:	91 40       	sbci	r25, 0x01	; 1
    1f38:	21 f4       	brne	.+8      	; 0x1f42 <MENU_selectAction+0x34>
			OLED_print_sentence("high scores");
    1f3a:	82 e6       	ldi	r24, 0x62	; 98
    1f3c:	91 e0       	ldi	r25, 0x01	; 1
    1f3e:	0e 94 27 10 	call	0x204e	; 0x204e <OLED_print_sentence>
			//start game
		}
		if (currentMenu.name == "Normal"){
    1f42:	80 91 f0 01 	lds	r24, 0x01F0
    1f46:	90 91 f1 01 	lds	r25, 0x01F1
    1f4a:	87 52       	subi	r24, 0x27	; 39
    1f4c:	91 40       	sbci	r25, 0x01	; 1
    1f4e:	21 f4       	brne	.+8      	; 0x1f58 <MENU_selectAction+0x4a>
			OLED_print_sentence("Normal");
    1f50:	87 e2       	ldi	r24, 0x27	; 39
    1f52:	91 e0       	ldi	r25, 0x01	; 1
    1f54:	0e 94 27 10 	call	0x204e	; 0x204e <OLED_print_sentence>
			//start game
		}
		if (currentMenu.name == "Hard"){
    1f58:	80 91 f0 01 	lds	r24, 0x01F0
    1f5c:	90 91 f1 01 	lds	r25, 0x01F1
    1f60:	8e 52       	subi	r24, 0x2E	; 46
    1f62:	91 40       	sbci	r25, 0x01	; 1
    1f64:	21 f4       	brne	.+8      	; 0x1f6e <MENU_selectAction+0x60>
			OLED_print_sentence("Hard");
    1f66:	8e e2       	ldi	r24, 0x2E	; 46
    1f68:	91 e0       	ldi	r25, 0x01	; 1
    1f6a:	0e 94 27 10 	call	0x204e	; 0x204e <OLED_print_sentence>
			//start game
		}
		if (currentMenu.name == "Credits"){
    1f6e:	80 91 f0 01 	lds	r24, 0x01F0
    1f72:	90 91 f1 01 	lds	r25, 0x01F1
    1f76:	88 55       	subi	r24, 0x58	; 88
    1f78:	91 40       	sbci	r25, 0x01	; 1
    1f7a:	21 f4       	brne	.+8      	; 0x1f84 <MENU_selectAction+0x76>
			OLED_reset();
    1f7c:	0e 94 5c 10 	call	0x20b8	; 0x20b8 <OLED_reset>
			OLED_credits();
    1f80:	0e 94 0e 12 	call	0x241c	; 0x241c <OLED_credits>
    1f84:	08 95       	ret

00001f86 <OLED_clear_char>:
	
}



void OLED_clear_char(){
    1f86:	88 e0       	ldi	r24, 0x08	; 8
    1f88:	90 e0       	ldi	r25, 0x00	; 0
	*oled_cmd = address;
}

void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    1f8a:	e0 91 08 01 	lds	r30, 0x0108
    1f8e:	f0 91 09 01 	lds	r31, 0x0109
    1f92:	10 82       	st	Z, r1
    1f94:	01 97       	sbiw	r24, 0x01	; 1
}



void OLED_clear_char(){
	for (int i = 0; i < FONTSIZE; i++){
    1f96:	00 97       	sbiw	r24, 0x00	; 0
    1f98:	c1 f7       	brne	.-16     	; 0x1f8a <OLED_clear_char+0x4>
		OLED_write_data(0x00);
	}
}
    1f9a:	08 95       	ret

00001f9c <OLED_print_char>:

int OLED_print_char(char input){
    1f9c:	28 e0       	ldi	r18, 0x08	; 8
    1f9e:	82 9f       	mul	r24, r18
    1fa0:	c0 01       	movw	r24, r0
    1fa2:	11 24       	eor	r1, r1
    1fa4:	fc 01       	movw	r30, r24
    1fa6:	e0 59       	subi	r30, 0x90	; 144
    1fa8:	fc 4e       	sbci	r31, 0xEC	; 236
	for (int i = 0; i < FONTSIZE; i++){
    1faa:	20 e0       	ldi	r18, 0x00	; 0
    1fac:	30 e0       	ldi	r19, 0x00	; 0
		OLED_write_data(pgm_read_byte(&font[(int)input-32][i]));
    1fae:	84 91       	lpm	r24, Z
	*oled_cmd = address;
}

void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    1fb0:	a0 91 08 01 	lds	r26, 0x0108
    1fb4:	b0 91 09 01 	lds	r27, 0x0109
    1fb8:	8c 93       	st	X, r24
}

int OLED_print_char(char input){
	for (int i = 0; i < FONTSIZE; i++){
		OLED_write_data(pgm_read_byte(&font[(int)input-32][i]));
		col ++;
    1fba:	80 91 58 02 	lds	r24, 0x0258
    1fbe:	8f 5f       	subi	r24, 0xFF	; 255
    1fc0:	80 93 58 02 	sts	0x0258, r24
		OLED_write_data(0x00);
	}
}

int OLED_print_char(char input){
	for (int i = 0; i < FONTSIZE; i++){
    1fc4:	2f 5f       	subi	r18, 0xFF	; 255
    1fc6:	3f 4f       	sbci	r19, 0xFF	; 255
    1fc8:	31 96       	adiw	r30, 0x01	; 1
    1fca:	28 30       	cpi	r18, 0x08	; 8
    1fcc:	31 05       	cpc	r19, r1
    1fce:	79 f7       	brne	.-34     	; 0x1fae <OLED_print_char+0x12>
		OLED_write_data(pgm_read_byte(&font[(int)input-32][i]));
		col ++;
	}
	return 0;
}
    1fd0:	80 e0       	ldi	r24, 0x00	; 0
    1fd2:	90 e0       	ldi	r25, 0x00	; 0
    1fd4:	08 95       	ret

00001fd6 <OLED_goto_page>:
		
	} 
}

void OLED_goto_page(uint8_t newpage){
	page = newpage;
    1fd6:	80 93 59 02 	sts	0x0259, r24
	OLED_write_command(0xB0+page);
    1fda:	80 55       	subi	r24, 0x50	; 80
#define set_bit(reg, bit ) (reg |= (1 << bit))

uint8_t col, page;

void OLED_write_command(uint8_t address){
	*oled_cmd = address;
    1fdc:	e0 91 0a 01 	lds	r30, 0x010A
    1fe0:	f0 91 0b 01 	lds	r31, 0x010B
    1fe4:	80 83       	st	Z, r24
    1fe6:	08 95       	ret

00001fe8 <OLED_goto_column>:
	page = newpage;
	OLED_write_command(0xB0+page);
}

void OLED_goto_column(uint8_t column){
 	col = column;
    1fe8:	80 93 58 02 	sts	0x0258, r24
 	if (column < 16){
    1fec:	80 31       	cpi	r24, 0x10	; 16
    1fee:	60 f4       	brcc	.+24     	; 0x2008 <OLED_goto_column+0x20>
#define set_bit(reg, bit ) (reg |= (1 << bit))

uint8_t col, page;

void OLED_write_command(uint8_t address){
	*oled_cmd = address;
    1ff0:	e0 91 0a 01 	lds	r30, 0x010A
    1ff4:	f0 91 0b 01 	lds	r31, 0x010B
    1ff8:	80 83       	st	Z, r24
    1ffa:	e0 91 0a 01 	lds	r30, 0x010A
    1ffe:	f0 91 0b 01 	lds	r31, 0x010B
    2002:	80 e1       	ldi	r24, 0x10	; 16
    2004:	80 83       	st	Z, r24
    2006:	08 95       	ret
 		OLED_write_command(0x00+column);
		OLED_write_command(0x10);
 		
 	}
	else{
		OLED_write_command((column & 0b00001111));
    2008:	98 2f       	mov	r25, r24
    200a:	9f 70       	andi	r25, 0x0F	; 15
#define set_bit(reg, bit ) (reg |= (1 << bit))

uint8_t col, page;

void OLED_write_command(uint8_t address){
	*oled_cmd = address;
    200c:	e0 91 0a 01 	lds	r30, 0x010A
    2010:	f0 91 0b 01 	lds	r31, 0x010B
    2014:	90 83       	st	Z, r25
		OLED_write_command(0x10);
 		
 	}
	else{
		OLED_write_command((column & 0b00001111));
		OLED_write_command(0x10+((column)>>4));
    2016:	82 95       	swap	r24
    2018:	8f 70       	andi	r24, 0x0F	; 15
    201a:	80 5f       	subi	r24, 0xF0	; 240
#define set_bit(reg, bit ) (reg |= (1 << bit))

uint8_t col, page;

void OLED_write_command(uint8_t address){
	*oled_cmd = address;
    201c:	e0 91 0a 01 	lds	r30, 0x010A
    2020:	f0 91 0b 01 	lds	r31, 0x010B
    2024:	80 83       	st	Z, r24
    2026:	08 95       	ret

00002028 <OLED_go_to_pos>:
		OLED_write_command(0x10+((column)>>4));
	}
 
 }
 
void OLED_go_to_pos(uint8_t page, uint8_t column){
    2028:	cf 93       	push	r28
    202a:	c8 2f       	mov	r28, r24
    202c:	86 2f       	mov	r24, r22
	 OLED_goto_column(column);
    202e:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <OLED_goto_column>
	 OLED_goto_page(page);
    2032:	8c 2f       	mov	r24, r28
    2034:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <OLED_goto_page>
 }
    2038:	cf 91       	pop	r28
    203a:	08 95       	ret

0000203c <OLED_home>:
}



void OLED_home(){
	col = 0;
    203c:	10 92 58 02 	sts	0x0258, r1
	page = 0;
    2040:	10 92 59 02 	sts	0x0259, r1
	
	//set start page = 0
	OLED_write_command(0xB0);

	*/
	OLED_go_to_pos(0,0);
    2044:	60 e0       	ldi	r22, 0x00	; 0
    2046:	80 e0       	ldi	r24, 0x00	; 0
    2048:	0e 94 14 10 	call	0x2028	; 0x2028 <OLED_go_to_pos>
    204c:	08 95       	ret

0000204e <OLED_print_sentence>:
			col ++;
		}
		return 0;
}

void OLED_print_sentence(char sentence[]){
    204e:	ef 92       	push	r14
    2050:	ff 92       	push	r15
    2052:	0f 93       	push	r16
    2054:	1f 93       	push	r17
    2056:	cf 93       	push	r28
    2058:	df 93       	push	r29
    205a:	8c 01       	movw	r16, r24
    205c:	7c 01       	movw	r14, r24
	for (int i = 0; i < strlen(sentence); i++){
    205e:	c0 e0       	ldi	r28, 0x00	; 0
    2060:	d0 e0       	ldi	r29, 0x00	; 0
    2062:	19 c0       	rjmp	.+50     	; 0x2096 <OLED_print_sentence+0x48>
		if (col > 128 - FONTSIZE+1){
    2064:	80 91 58 02 	lds	r24, 0x0258
    2068:	8a 37       	cpi	r24, 0x7A	; 122
    206a:	78 f0       	brcs	.+30     	; 0x208a <OLED_print_sentence+0x3c>
			OLED_goto_page(page+1);
    206c:	80 91 59 02 	lds	r24, 0x0259
    2070:	8f 5f       	subi	r24, 0xFF	; 255
    2072:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <OLED_goto_page>
			
			OLED_goto_column(0);
    2076:	80 e0       	ldi	r24, 0x00	; 0
    2078:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <OLED_goto_column>
			
			if (page == 8){
    207c:	80 91 59 02 	lds	r24, 0x0259
    2080:	88 30       	cpi	r24, 0x08	; 8
    2082:	19 f4       	brne	.+6      	; 0x208a <OLED_print_sentence+0x3c>
				OLED_home();
    2084:	0e 94 1e 10 	call	0x203c	; 0x203c <OLED_home>
				break;
    2088:	10 c0       	rjmp	.+32     	; 0x20aa <OLED_print_sentence+0x5c>
			}
		}
		
		OLED_print_char(sentence[i]);
    208a:	f7 01       	movw	r30, r14
    208c:	81 91       	ld	r24, Z+
    208e:	7f 01       	movw	r14, r30
    2090:	0e 94 ce 0f 	call	0x1f9c	; 0x1f9c <OLED_print_char>
		}
		return 0;
}

void OLED_print_sentence(char sentence[]){
	for (int i = 0; i < strlen(sentence); i++){
    2094:	21 96       	adiw	r28, 0x01	; 1
    2096:	f8 01       	movw	r30, r16
    2098:	01 90       	ld	r0, Z+
    209a:	00 20       	and	r0, r0
    209c:	e9 f7       	brne	.-6      	; 0x2098 <OLED_print_sentence+0x4a>
    209e:	31 97       	sbiw	r30, 0x01	; 1
    20a0:	e0 1b       	sub	r30, r16
    20a2:	f1 0b       	sbc	r31, r17
    20a4:	ce 17       	cp	r28, r30
    20a6:	df 07       	cpc	r29, r31
    20a8:	e8 f2       	brcs	.-70     	; 0x2064 <OLED_print_sentence+0x16>
		}
		
		OLED_print_char(sentence[i]);
		
	} 
}
    20aa:	df 91       	pop	r29
    20ac:	cf 91       	pop	r28
    20ae:	1f 91       	pop	r17
    20b0:	0f 91       	pop	r16
    20b2:	ff 90       	pop	r15
    20b4:	ef 90       	pop	r14
    20b6:	08 95       	ret

000020b8 <OLED_reset>:
	*/
	OLED_go_to_pos(0,0);
	
}

void OLED_reset(){
    20b8:	1f 93       	push	r17
    20ba:	cf 93       	push	r28
    20bc:	df 93       	push	r29
	OLED_go_to_pos(0,0);
    20be:	60 e0       	ldi	r22, 0x00	; 0
    20c0:	80 e0       	ldi	r24, 0x00	; 0
    20c2:	0e 94 14 10 	call	0x2028	; 0x2028 <OLED_go_to_pos>
    20c6:	c0 e0       	ldi	r28, 0x00	; 0
	
	for (int i = 0; i < 8; i++){
		OLED_goto_page(i);
    20c8:	10 e8       	ldi	r17, 0x80	; 128
    20ca:	d0 e0       	ldi	r29, 0x00	; 0
    20cc:	8c 2f       	mov	r24, r28
    20ce:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <OLED_goto_page>
    20d2:	21 2f       	mov	r18, r17
    20d4:	3d 2f       	mov	r19, r29
	*oled_cmd = address;
}

void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    20d6:	e0 91 08 01 	lds	r30, 0x0108
    20da:	f0 91 09 01 	lds	r31, 0x0109
    20de:	10 82       	st	Z, r1
    20e0:	21 50       	subi	r18, 0x01	; 1
    20e2:	31 09       	sbc	r19, r1
	OLED_go_to_pos(0,0);
	
	for (int i = 0; i < 8; i++){
		OLED_goto_page(i);
		
		for (int j = 0; j < 128; j++){
    20e4:	21 15       	cp	r18, r1
    20e6:	31 05       	cpc	r19, r1
    20e8:	b1 f7       	brne	.-20     	; 0x20d6 <OLED_reset+0x1e>
    20ea:	cf 5f       	subi	r28, 0xFF	; 255
}

void OLED_reset(){
	OLED_go_to_pos(0,0);
	
	for (int i = 0; i < 8; i++){
    20ec:	c8 30       	cpi	r28, 0x08	; 8
    20ee:	71 f7       	brne	.-36     	; 0x20cc <OLED_reset+0x14>
		for (int j = 0; j < 128; j++){
			OLED_write_data(0x00);
			
		}
	}
	OLED_go_to_pos(0,0);
    20f0:	60 e0       	ldi	r22, 0x00	; 0
    20f2:	80 e0       	ldi	r24, 0x00	; 0
    20f4:	0e 94 14 10 	call	0x2028	; 0x2028 <OLED_go_to_pos>
	
	
	
}
    20f8:	df 91       	pop	r29
    20fa:	cf 91       	pop	r28
    20fc:	1f 91       	pop	r17
    20fe:	08 95       	ret

00002100 <OLED_init>:
#define set_bit(reg, bit ) (reg |= (1 << bit))

uint8_t col, page;

void OLED_write_command(uint8_t address){
	*oled_cmd = address;
    2100:	e0 91 0a 01 	lds	r30, 0x010A
    2104:	f0 91 0b 01 	lds	r31, 0x010B
    2108:	8e ea       	ldi	r24, 0xAE	; 174
    210a:	80 83       	st	Z, r24
    210c:	e0 91 0a 01 	lds	r30, 0x010A
    2110:	f0 91 0b 01 	lds	r31, 0x010B
    2114:	81 ea       	ldi	r24, 0xA1	; 161
    2116:	80 83       	st	Z, r24
    2118:	e0 91 0a 01 	lds	r30, 0x010A
    211c:	f0 91 0b 01 	lds	r31, 0x010B
    2120:	8a ed       	ldi	r24, 0xDA	; 218
    2122:	80 83       	st	Z, r24
    2124:	e0 91 0a 01 	lds	r30, 0x010A
    2128:	f0 91 0b 01 	lds	r31, 0x010B
    212c:	82 e1       	ldi	r24, 0x12	; 18
    212e:	80 83       	st	Z, r24
    2130:	e0 91 0a 01 	lds	r30, 0x010A
    2134:	f0 91 0b 01 	lds	r31, 0x010B
    2138:	88 ec       	ldi	r24, 0xC8	; 200
    213a:	80 83       	st	Z, r24
    213c:	e0 91 0a 01 	lds	r30, 0x010A
    2140:	f0 91 0b 01 	lds	r31, 0x010B
    2144:	88 ea       	ldi	r24, 0xA8	; 168
    2146:	80 83       	st	Z, r24
    2148:	e0 91 0a 01 	lds	r30, 0x010A
    214c:	f0 91 0b 01 	lds	r31, 0x010B
    2150:	8f e3       	ldi	r24, 0x3F	; 63
    2152:	80 83       	st	Z, r24
    2154:	e0 91 0a 01 	lds	r30, 0x010A
    2158:	f0 91 0b 01 	lds	r31, 0x010B
    215c:	85 ed       	ldi	r24, 0xD5	; 213
    215e:	80 83       	st	Z, r24
    2160:	e0 91 0a 01 	lds	r30, 0x010A
    2164:	f0 91 0b 01 	lds	r31, 0x010B
    2168:	80 e8       	ldi	r24, 0x80	; 128
    216a:	80 83       	st	Z, r24
    216c:	e0 91 0a 01 	lds	r30, 0x010A
    2170:	f0 91 0b 01 	lds	r31, 0x010B
    2174:	81 e8       	ldi	r24, 0x81	; 129
    2176:	80 83       	st	Z, r24
    2178:	e0 91 0a 01 	lds	r30, 0x010A
    217c:	f0 91 0b 01 	lds	r31, 0x010B
    2180:	80 e5       	ldi	r24, 0x50	; 80
    2182:	80 83       	st	Z, r24
    2184:	e0 91 0a 01 	lds	r30, 0x010A
    2188:	f0 91 0b 01 	lds	r31, 0x010B
    218c:	89 ed       	ldi	r24, 0xD9	; 217
    218e:	80 83       	st	Z, r24
    2190:	e0 91 0a 01 	lds	r30, 0x010A
    2194:	f0 91 0b 01 	lds	r31, 0x010B
    2198:	81 e2       	ldi	r24, 0x21	; 33
    219a:	80 83       	st	Z, r24
    219c:	e0 91 0a 01 	lds	r30, 0x010A
    21a0:	f0 91 0b 01 	lds	r31, 0x010B
    21a4:	80 e2       	ldi	r24, 0x20	; 32
    21a6:	80 83       	st	Z, r24
    21a8:	e0 91 0a 01 	lds	r30, 0x010A
    21ac:	f0 91 0b 01 	lds	r31, 0x010B
    21b0:	82 e0       	ldi	r24, 0x02	; 2
    21b2:	80 83       	st	Z, r24
    21b4:	e0 91 0a 01 	lds	r30, 0x010A
    21b8:	f0 91 0b 01 	lds	r31, 0x010B
    21bc:	8b ed       	ldi	r24, 0xDB	; 219
    21be:	80 83       	st	Z, r24
    21c0:	e0 91 0a 01 	lds	r30, 0x010A
    21c4:	f0 91 0b 01 	lds	r31, 0x010B
    21c8:	80 e3       	ldi	r24, 0x30	; 48
    21ca:	80 83       	st	Z, r24
    21cc:	e0 91 0a 01 	lds	r30, 0x010A
    21d0:	f0 91 0b 01 	lds	r31, 0x010B
    21d4:	8d ea       	ldi	r24, 0xAD	; 173
    21d6:	80 83       	st	Z, r24
    21d8:	e0 91 0a 01 	lds	r30, 0x010A
    21dc:	f0 91 0b 01 	lds	r31, 0x010B
    21e0:	10 82       	st	Z, r1
    21e2:	e0 91 0a 01 	lds	r30, 0x010A
    21e6:	f0 91 0b 01 	lds	r31, 0x010B
    21ea:	84 ea       	ldi	r24, 0xA4	; 164
    21ec:	80 83       	st	Z, r24
    21ee:	e0 91 0a 01 	lds	r30, 0x010A
    21f2:	f0 91 0b 01 	lds	r31, 0x010B
    21f6:	86 ea       	ldi	r24, 0xA6	; 166
    21f8:	80 83       	st	Z, r24
    21fa:	e0 91 0a 01 	lds	r30, 0x010A
    21fe:	f0 91 0b 01 	lds	r31, 0x010B
    2202:	8f ea       	ldi	r24, 0xAF	; 175
    2204:	80 83       	st	Z, r24
	OLED_write_command(0x00);
	OLED_write_command(0xa4); //out follows RAM content
	OLED_write_command(0xa6); //set normal display
	OLED_write_command(0xaf); // display on
	
	OLED_reset();
    2206:	0e 94 5c 10 	call	0x20b8	; 0x20b8 <OLED_reset>
    220a:	08 95       	ret

0000220c <OLED_print_brage>:
	
}



void OLED_print_brage(){
    220c:	0f 93       	push	r16
    220e:	1f 93       	push	r17
    2210:	cf 93       	push	r28
    2212:	df 93       	push	r29
	OLED_reset();
    2214:	0e 94 5c 10 	call	0x20b8	; 0x20b8 <OLED_reset>
	
	OLED_goto_column(0);
    2218:	80 e0       	ldi	r24, 0x00	; 0
    221a:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <OLED_goto_column>
    221e:	c0 e8       	ldi	r28, 0x80	; 128
    2220:	d0 e0       	ldi	r29, 0x00	; 0
	
}



void OLED_print_brage(){
    2222:	00 e0       	ldi	r16, 0x00	; 0
    2224:	10 e0       	ldi	r17, 0x00	; 0
    2226:	26 c0       	rjmp	.+76     	; 0x2274 <OLED_print_brage+0x68>
    2228:	f9 01       	movw	r30, r18
    222a:	e8 0f       	add	r30, r24
    222c:	f9 1f       	adc	r31, r25
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&brage[j+k][i]));
    222e:	e4 91       	lpm	r30, Z
	*oled_cmd = address;
}

void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    2230:	a0 91 08 01 	lds	r26, 0x0108
    2234:	b0 91 09 01 	lds	r27, 0x0109
    2238:	ec 93       	st	X, r30
    223a:	01 96       	adiw	r24, 0x01	; 1
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
    223c:	88 30       	cpi	r24, 0x08	; 8
    223e:	91 05       	cpc	r25, r1
    2240:	99 f7       	brne	.-26     	; 0x2228 <OLED_print_brage+0x1c>
    2242:	48 5f       	subi	r20, 0xF8	; 248
    2244:	5f 4f       	sbci	r21, 0xFF	; 255
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
    2246:	4c 17       	cp	r20, r28
    2248:	5d 07       	cpc	r21, r29
    224a:	31 f0       	breq	.+12     	; 0x2258 <OLED_print_brage+0x4c>
	
}



void OLED_print_brage(){
    224c:	80 2f       	mov	r24, r16
    224e:	91 2f       	mov	r25, r17
    2250:	9a 01       	movw	r18, r20
    2252:	20 59       	subi	r18, 0x90	; 144
    2254:	37 4f       	sbci	r19, 0xF7	; 247
    2256:	e8 cf       	rjmp	.-48     	; 0x2228 <OLED_print_brage+0x1c>
		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&brage[j+k][i]));
			}
		}
		OLED_goto_page(page+1);
    2258:	80 91 59 02 	lds	r24, 0x0259
    225c:	8f 5f       	subi	r24, 0xFF	; 255
    225e:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <OLED_goto_page>
		OLED_goto_column(0);
    2262:	80 e0       	ldi	r24, 0x00	; 0
    2264:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <OLED_goto_column>
    2268:	c0 58       	subi	r28, 0x80	; 128
    226a:	df 4f       	sbci	r29, 0xFF	; 255

void OLED_print_brage(){
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){
    226c:	c0 38       	cpi	r28, 0x80	; 128
    226e:	84 e0       	ldi	r24, 0x04	; 4
    2270:	d8 07       	cpc	r29, r24
    2272:	21 f0       	breq	.+8      	; 0x227c <OLED_print_brage+0x70>
    2274:	ae 01       	movw	r20, r28
    2276:	40 58       	subi	r20, 0x80	; 128
    2278:	51 09       	sbc	r21, r1
    227a:	e8 cf       	rjmp	.-48     	; 0x224c <OLED_print_brage+0x40>
			}
		}
		OLED_goto_page(page+1);
		OLED_goto_column(0);
	}
	OLED_home();	
    227c:	0e 94 1e 10 	call	0x203c	; 0x203c <OLED_home>
	OLED_print_sentence("Brage");
    2280:	8e e6       	ldi	r24, 0x6E	; 110
    2282:	91 e0       	ldi	r25, 0x01	; 1
    2284:	0e 94 27 10 	call	0x204e	; 0x204e <OLED_print_sentence>
}
    2288:	df 91       	pop	r29
    228a:	cf 91       	pop	r28
    228c:	1f 91       	pop	r17
    228e:	0f 91       	pop	r16
    2290:	08 95       	ret

00002292 <OLED_print_tobias>:

void OLED_print_tobias(){
    2292:	0f 93       	push	r16
    2294:	1f 93       	push	r17
    2296:	cf 93       	push	r28
    2298:	df 93       	push	r29
	OLED_reset();
    229a:	0e 94 5c 10 	call	0x20b8	; 0x20b8 <OLED_reset>
	
	OLED_goto_column(0);
    229e:	80 e0       	ldi	r24, 0x00	; 0
    22a0:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <OLED_goto_column>
    22a4:	c0 e8       	ldi	r28, 0x80	; 128
    22a6:	d0 e0       	ldi	r29, 0x00	; 0
	}
	OLED_home();	
	OLED_print_sentence("Brage");
}

void OLED_print_tobias(){
    22a8:	00 e0       	ldi	r16, 0x00	; 0
    22aa:	10 e0       	ldi	r17, 0x00	; 0
    22ac:	26 c0       	rjmp	.+76     	; 0x22fa <OLED_print_tobias+0x68>
    22ae:	f9 01       	movw	r30, r18
    22b0:	e8 0f       	add	r30, r24
    22b2:	f9 1f       	adc	r31, r25
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&tobias[j+k][i]));
    22b4:	e4 91       	lpm	r30, Z
	*oled_cmd = address;
}

void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    22b6:	a0 91 08 01 	lds	r26, 0x0108
    22ba:	b0 91 09 01 	lds	r27, 0x0109
    22be:	ec 93       	st	X, r30
    22c0:	01 96       	adiw	r24, 0x01	; 1
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
    22c2:	88 30       	cpi	r24, 0x08	; 8
    22c4:	91 05       	cpc	r25, r1
    22c6:	99 f7       	brne	.-26     	; 0x22ae <OLED_print_tobias+0x1c>
    22c8:	48 5f       	subi	r20, 0xF8	; 248
    22ca:	5f 4f       	sbci	r21, 0xFF	; 255
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
    22cc:	4c 17       	cp	r20, r28
    22ce:	5d 07       	cpc	r21, r29
    22d0:	31 f0       	breq	.+12     	; 0x22de <OLED_print_tobias+0x4c>
	}
	OLED_home();	
	OLED_print_sentence("Brage");
}

void OLED_print_tobias(){
    22d2:	80 2f       	mov	r24, r16
    22d4:	91 2f       	mov	r25, r17
    22d6:	9a 01       	movw	r18, r20
    22d8:	20 59       	subi	r18, 0x90	; 144
    22da:	33 4f       	sbci	r19, 0xF3	; 243
    22dc:	e8 cf       	rjmp	.-48     	; 0x22ae <OLED_print_tobias+0x1c>
		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&tobias[j+k][i]));
			}
		}
		OLED_goto_page(page+1);
    22de:	80 91 59 02 	lds	r24, 0x0259
    22e2:	8f 5f       	subi	r24, 0xFF	; 255
    22e4:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <OLED_goto_page>
		OLED_goto_column(0);
    22e8:	80 e0       	ldi	r24, 0x00	; 0
    22ea:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <OLED_goto_column>
    22ee:	c0 58       	subi	r28, 0x80	; 128
    22f0:	df 4f       	sbci	r29, 0xFF	; 255

void OLED_print_tobias(){
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){
    22f2:	c0 38       	cpi	r28, 0x80	; 128
    22f4:	84 e0       	ldi	r24, 0x04	; 4
    22f6:	d8 07       	cpc	r29, r24
    22f8:	21 f0       	breq	.+8      	; 0x2302 <OLED_print_tobias+0x70>
    22fa:	ae 01       	movw	r20, r28
    22fc:	40 58       	subi	r20, 0x80	; 128
    22fe:	51 09       	sbc	r21, r1
    2300:	e8 cf       	rjmp	.-48     	; 0x22d2 <OLED_print_tobias+0x40>
			}
		}
		OLED_goto_page(page+1);
		OLED_goto_column(0);
	}
	OLED_home();
    2302:	0e 94 1e 10 	call	0x203c	; 0x203c <OLED_home>
	OLED_print_sentence("Tobias");
    2306:	84 e7       	ldi	r24, 0x74	; 116
    2308:	91 e0       	ldi	r25, 0x01	; 1
    230a:	0e 94 27 10 	call	0x204e	; 0x204e <OLED_print_sentence>
}
    230e:	df 91       	pop	r29
    2310:	cf 91       	pop	r28
    2312:	1f 91       	pop	r17
    2314:	0f 91       	pop	r16
    2316:	08 95       	ret

00002318 <OLED_print_henning>:

void OLED_print_henning(){
    2318:	0f 93       	push	r16
    231a:	1f 93       	push	r17
    231c:	cf 93       	push	r28
    231e:	df 93       	push	r29
	OLED_reset();
    2320:	0e 94 5c 10 	call	0x20b8	; 0x20b8 <OLED_reset>
	
	OLED_goto_column(0);
    2324:	80 e0       	ldi	r24, 0x00	; 0
    2326:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <OLED_goto_column>
    232a:	c0 e8       	ldi	r28, 0x80	; 128
    232c:	d0 e0       	ldi	r29, 0x00	; 0
	}
	OLED_home();
	OLED_print_sentence("Tobias");
}

void OLED_print_henning(){
    232e:	00 e0       	ldi	r16, 0x00	; 0
    2330:	10 e0       	ldi	r17, 0x00	; 0
    2332:	26 c0       	rjmp	.+76     	; 0x2380 <OLED_print_henning+0x68>
    2334:	f9 01       	movw	r30, r18
    2336:	e8 0f       	add	r30, r24
    2338:	f9 1f       	adc	r31, r25
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&henning[j+k][i]));
    233a:	e4 91       	lpm	r30, Z
	*oled_cmd = address;
}

void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    233c:	a0 91 08 01 	lds	r26, 0x0108
    2340:	b0 91 09 01 	lds	r27, 0x0109
    2344:	ec 93       	st	X, r30
    2346:	01 96       	adiw	r24, 0x01	; 1
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
    2348:	88 30       	cpi	r24, 0x08	; 8
    234a:	91 05       	cpc	r25, r1
    234c:	99 f7       	brne	.-26     	; 0x2334 <OLED_print_henning+0x1c>
    234e:	48 5f       	subi	r20, 0xF8	; 248
    2350:	5f 4f       	sbci	r21, 0xFF	; 255
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
    2352:	4c 17       	cp	r20, r28
    2354:	5d 07       	cpc	r21, r29
    2356:	31 f0       	breq	.+12     	; 0x2364 <OLED_print_henning+0x4c>
	}
	OLED_home();
	OLED_print_sentence("Tobias");
}

void OLED_print_henning(){
    2358:	80 2f       	mov	r24, r16
    235a:	91 2f       	mov	r25, r17
    235c:	9a 01       	movw	r18, r20
    235e:	20 59       	subi	r18, 0x90	; 144
    2360:	3f 4f       	sbci	r19, 0xFF	; 255
    2362:	e8 cf       	rjmp	.-48     	; 0x2334 <OLED_print_henning+0x1c>
		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&henning[j+k][i]));
			}
		}
		OLED_goto_page(page+1);
    2364:	80 91 59 02 	lds	r24, 0x0259
    2368:	8f 5f       	subi	r24, 0xFF	; 255
    236a:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <OLED_goto_page>
		OLED_goto_column(0);
    236e:	80 e0       	ldi	r24, 0x00	; 0
    2370:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <OLED_goto_column>
    2374:	c0 58       	subi	r28, 0x80	; 128
    2376:	df 4f       	sbci	r29, 0xFF	; 255

void OLED_print_henning(){
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){
    2378:	c0 38       	cpi	r28, 0x80	; 128
    237a:	84 e0       	ldi	r24, 0x04	; 4
    237c:	d8 07       	cpc	r29, r24
    237e:	21 f0       	breq	.+8      	; 0x2388 <OLED_print_henning+0x70>
    2380:	ae 01       	movw	r20, r28
    2382:	40 58       	subi	r20, 0x80	; 128
    2384:	51 09       	sbc	r21, r1
    2386:	e8 cf       	rjmp	.-48     	; 0x2358 <OLED_print_henning+0x40>
			}
		}
		OLED_goto_page(page+1);
		OLED_goto_column(0);
	}
	OLED_home();
    2388:	0e 94 1e 10 	call	0x203c	; 0x203c <OLED_home>
	OLED_print_sentence("Henning");
    238c:	8b e7       	ldi	r24, 0x7B	; 123
    238e:	91 e0       	ldi	r25, 0x01	; 1
    2390:	0e 94 27 10 	call	0x204e	; 0x204e <OLED_print_sentence>
}
    2394:	df 91       	pop	r29
    2396:	cf 91       	pop	r28
    2398:	1f 91       	pop	r17
    239a:	0f 91       	pop	r16
    239c:	08 95       	ret

0000239e <OLED_print_credits>:

void OLED_print_credits(){
    239e:	0f 93       	push	r16
    23a0:	1f 93       	push	r17
    23a2:	cf 93       	push	r28
    23a4:	df 93       	push	r29
	OLED_reset();
    23a6:	0e 94 5c 10 	call	0x20b8	; 0x20b8 <OLED_reset>
	OLED_goto_column(0);
    23aa:	80 e0       	ldi	r24, 0x00	; 0
    23ac:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <OLED_goto_column>
    23b0:	c0 e8       	ldi	r28, 0x80	; 128
    23b2:	d0 e0       	ldi	r29, 0x00	; 0
	}
	OLED_home();
	OLED_print_sentence("Henning");
}

void OLED_print_credits(){
    23b4:	00 e0       	ldi	r16, 0x00	; 0
    23b6:	10 e0       	ldi	r17, 0x00	; 0
    23b8:	26 c0       	rjmp	.+76     	; 0x2406 <OLED_print_credits+0x68>
    23ba:	f9 01       	movw	r30, r18
    23bc:	e8 0f       	add	r30, r24
    23be:	f9 1f       	adc	r31, r25
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&credits[j+k][i]));
    23c0:	e4 91       	lpm	r30, Z
	*oled_cmd = address;
}

void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    23c2:	a0 91 08 01 	lds	r26, 0x0108
    23c6:	b0 91 09 01 	lds	r27, 0x0109
    23ca:	ec 93       	st	X, r30
    23cc:	01 96       	adiw	r24, 0x01	; 1
	OLED_reset();
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
    23ce:	88 30       	cpi	r24, 0x08	; 8
    23d0:	91 05       	cpc	r25, r1
    23d2:	99 f7       	brne	.-26     	; 0x23ba <OLED_print_credits+0x1c>
    23d4:	48 5f       	subi	r20, 0xF8	; 248
    23d6:	5f 4f       	sbci	r21, 0xFF	; 255
void OLED_print_credits(){
	OLED_reset();
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
    23d8:	4c 17       	cp	r20, r28
    23da:	5d 07       	cpc	r21, r29
    23dc:	31 f0       	breq	.+12     	; 0x23ea <OLED_print_credits+0x4c>
	}
	OLED_home();
	OLED_print_sentence("Henning");
}

void OLED_print_credits(){
    23de:	80 2f       	mov	r24, r16
    23e0:	91 2f       	mov	r25, r17
    23e2:	9a 01       	movw	r18, r20
    23e4:	20 59       	subi	r18, 0x90	; 144
    23e6:	3b 4f       	sbci	r19, 0xFB	; 251
    23e8:	e8 cf       	rjmp	.-48     	; 0x23ba <OLED_print_credits+0x1c>
		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&credits[j+k][i]));
			}
		}
		OLED_goto_page(page+1);
    23ea:	80 91 59 02 	lds	r24, 0x0259
    23ee:	8f 5f       	subi	r24, 0xFF	; 255
    23f0:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <OLED_goto_page>
		OLED_goto_column(0);
    23f4:	80 e0       	ldi	r24, 0x00	; 0
    23f6:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <OLED_goto_column>
    23fa:	c0 58       	subi	r28, 0x80	; 128
    23fc:	df 4f       	sbci	r29, 0xFF	; 255
}

void OLED_print_credits(){
	OLED_reset();
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){
    23fe:	c0 38       	cpi	r28, 0x80	; 128
    2400:	84 e0       	ldi	r24, 0x04	; 4
    2402:	d8 07       	cpc	r29, r24
    2404:	21 f0       	breq	.+8      	; 0x240e <OLED_print_credits+0x70>
    2406:	ae 01       	movw	r20, r28
    2408:	40 58       	subi	r20, 0x80	; 128
    240a:	51 09       	sbc	r21, r1
    240c:	e8 cf       	rjmp	.-48     	; 0x23de <OLED_print_credits+0x40>
			}
		}
		OLED_goto_page(page+1);
		OLED_goto_column(0);
	}
	OLED_home();
    240e:	0e 94 1e 10 	call	0x203c	; 0x203c <OLED_home>
}
    2412:	df 91       	pop	r29
    2414:	cf 91       	pop	r28
    2416:	1f 91       	pop	r17
    2418:	0f 91       	pop	r16
    241a:	08 95       	ret

0000241c <OLED_credits>:

	
}
*/
void OLED_credits(){
	OLED_print_credits();
    241c:	0e 94 cf 11 	call	0x239e	; 0x239e <OLED_print_credits>
    2420:	2f e7       	ldi	r18, 0x7F	; 127
    2422:	84 e8       	ldi	r24, 0x84	; 132
    2424:	9e e1       	ldi	r25, 0x1E	; 30
    2426:	21 50       	subi	r18, 0x01	; 1
    2428:	80 40       	sbci	r24, 0x00	; 0
    242a:	90 40       	sbci	r25, 0x00	; 0
    242c:	e1 f7       	brne	.-8      	; 0x2426 <OLED_credits+0xa>
    242e:	00 c0       	rjmp	.+0      	; 0x2430 <OLED_credits+0x14>
    2430:	00 00       	nop
	_delay_ms(10000);
	OLED_print_henning();
    2432:	0e 94 8c 11 	call	0x2318	; 0x2318 <OLED_print_henning>
    2436:	2f e7       	ldi	r18, 0x7F	; 127
    2438:	84 e8       	ldi	r24, 0x84	; 132
    243a:	9e e1       	ldi	r25, 0x1E	; 30
    243c:	21 50       	subi	r18, 0x01	; 1
    243e:	80 40       	sbci	r24, 0x00	; 0
    2440:	90 40       	sbci	r25, 0x00	; 0
    2442:	e1 f7       	brne	.-8      	; 0x243c <OLED_credits+0x20>
    2444:	00 c0       	rjmp	.+0      	; 0x2446 <OLED_credits+0x2a>
    2446:	00 00       	nop
	_delay_ms(10000);
	OLED_print_brage();
    2448:	0e 94 06 11 	call	0x220c	; 0x220c <OLED_print_brage>
    244c:	2f e7       	ldi	r18, 0x7F	; 127
    244e:	84 e8       	ldi	r24, 0x84	; 132
    2450:	9e e1       	ldi	r25, 0x1E	; 30
    2452:	21 50       	subi	r18, 0x01	; 1
    2454:	80 40       	sbci	r24, 0x00	; 0
    2456:	90 40       	sbci	r25, 0x00	; 0
    2458:	e1 f7       	brne	.-8      	; 0x2452 <OLED_credits+0x36>
    245a:	00 c0       	rjmp	.+0      	; 0x245c <OLED_credits+0x40>
    245c:	00 00       	nop
	_delay_ms(10000);
	OLED_print_tobias();
    245e:	0e 94 49 11 	call	0x2292	; 0x2292 <OLED_print_tobias>
    2462:	2f e7       	ldi	r18, 0x7F	; 127
    2464:	84 e8       	ldi	r24, 0x84	; 132
    2466:	9e e1       	ldi	r25, 0x1E	; 30
    2468:	21 50       	subi	r18, 0x01	; 1
    246a:	80 40       	sbci	r24, 0x00	; 0
    246c:	90 40       	sbci	r25, 0x00	; 0
    246e:	e1 f7       	brne	.-8      	; 0x2468 <OLED_credits+0x4c>
    2470:	00 c0       	rjmp	.+0      	; 0x2472 <OLED_credits+0x56>
    2472:	00 00       	nop
    2474:	08 95       	ret

00002476 <OLED_print_pig>:
		OLED_goto_column(0);
	}
	OLED_home();
}

void OLED_print_pig(){
    2476:	0f 93       	push	r16
    2478:	1f 93       	push	r17
    247a:	cf 93       	push	r28
    247c:	df 93       	push	r29
	OLED_reset();
    247e:	0e 94 5c 10 	call	0x20b8	; 0x20b8 <OLED_reset>
	
	OLED_goto_column(0);
    2482:	80 e0       	ldi	r24, 0x00	; 0
    2484:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <OLED_goto_column>
    2488:	c0 e8       	ldi	r28, 0x80	; 128
    248a:	d0 e0       	ldi	r29, 0x00	; 0
		OLED_goto_column(0);
	}
	OLED_home();
}

void OLED_print_pig(){
    248c:	00 e0       	ldi	r16, 0x00	; 0
    248e:	10 e0       	ldi	r17, 0x00	; 0
    2490:	26 c0       	rjmp	.+76     	; 0x24de <OLED_print_pig+0x68>
    2492:	f9 01       	movw	r30, r18
    2494:	e8 0f       	add	r30, r24
    2496:	f9 1f       	adc	r31, r25
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&pig[j+k][i]));
    2498:	e4 91       	lpm	r30, Z
	*oled_cmd = address;
}

void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    249a:	a0 91 08 01 	lds	r26, 0x0108
    249e:	b0 91 09 01 	lds	r27, 0x0109
    24a2:	ec 93       	st	X, r30
    24a4:	01 96       	adiw	r24, 0x01	; 1
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
    24a6:	88 30       	cpi	r24, 0x08	; 8
    24a8:	91 05       	cpc	r25, r1
    24aa:	99 f7       	brne	.-26     	; 0x2492 <OLED_print_pig+0x1c>
    24ac:	48 5f       	subi	r20, 0xF8	; 248
    24ae:	5f 4f       	sbci	r21, 0xFF	; 255
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
    24b0:	4c 17       	cp	r20, r28
    24b2:	5d 07       	cpc	r21, r29
    24b4:	31 f0       	breq	.+12     	; 0x24c2 <OLED_print_pig+0x4c>
		OLED_goto_column(0);
	}
	OLED_home();
}

void OLED_print_pig(){
    24b6:	80 2f       	mov	r24, r16
    24b8:	91 2f       	mov	r25, r17
    24ba:	9a 01       	movw	r18, r20
    24bc:	20 59       	subi	r18, 0x90	; 144
    24be:	3f 4e       	sbci	r19, 0xEF	; 239
    24c0:	e8 cf       	rjmp	.-48     	; 0x2492 <OLED_print_pig+0x1c>
		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&pig[j+k][i]));
			}
		}
		OLED_goto_page(page+1);
    24c2:	80 91 59 02 	lds	r24, 0x0259
    24c6:	8f 5f       	subi	r24, 0xFF	; 255
    24c8:	0e 94 eb 0f 	call	0x1fd6	; 0x1fd6 <OLED_goto_page>
		OLED_goto_column(0);
    24cc:	80 e0       	ldi	r24, 0x00	; 0
    24ce:	0e 94 f4 0f 	call	0x1fe8	; 0x1fe8 <OLED_goto_column>
    24d2:	c0 58       	subi	r28, 0x80	; 128
    24d4:	df 4f       	sbci	r29, 0xFF	; 255

void OLED_print_pig(){
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){
    24d6:	c0 38       	cpi	r28, 0x80	; 128
    24d8:	84 e0       	ldi	r24, 0x04	; 4
    24da:	d8 07       	cpc	r29, r24
    24dc:	21 f0       	breq	.+8      	; 0x24e6 <OLED_print_pig+0x70>
    24de:	ae 01       	movw	r20, r28
    24e0:	40 58       	subi	r20, 0x80	; 128
    24e2:	51 09       	sbc	r21, r1
    24e4:	e8 cf       	rjmp	.-48     	; 0x24b6 <OLED_print_pig+0x40>
			}
		}
		OLED_goto_page(page+1);
		OLED_goto_column(0);
	}
	OLED_home();
    24e6:	0e 94 1e 10 	call	0x203c	; 0x203c <OLED_home>
	OLED_print_sentence("Brage");
    24ea:	8e e6       	ldi	r24, 0x6E	; 110
    24ec:	91 e0       	ldi	r25, 0x01	; 1
    24ee:	0e 94 27 10 	call	0x204e	; 0x204e <OLED_print_sentence>
    24f2:	df 91       	pop	r29
    24f4:	cf 91       	pop	r28
    24f6:	1f 91       	pop	r17
    24f8:	0f 91       	pop	r16
    24fa:	08 95       	ret

000024fc <SPI_write>:


void SPI_write(uint8_t data)
{
	/* Start transmission */
	SPDR = data;
    24fc:	8f b9       	out	0x0f, r24	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
    24fe:	77 9b       	sbis	0x0e, 7	; 14
    2500:	fe cf       	rjmp	.-4      	; 0x24fe <SPI_write+0x2>

}
    2502:	08 95       	ret

00002504 <SPI_read>:


uint8_t SPI_read()
{
	/* Start transmission */
	SPDR = 0x00;
    2504:	1f b8       	out	0x0f, r1	; 15
	/* Wait for transmission complete */
	while(!(SPSR & (1<<SPIF)));
    2506:	77 9b       	sbis	0x0e, 7	; 14
    2508:	fe cf       	rjmp	.-4      	; 0x2506 <SPI_read+0x2>
	return SPDR;
    250a:	8f b1       	in	r24, 0x0f	; 15
}
    250c:	08 95       	ret

0000250e <SPI_init>:

void SPI_init(){
	
	/* Set MOSI and SCK output, all others input */
	
	set_bit(DDRB, DDB5);
    250e:	bd 9a       	sbi	0x17, 5	; 23
	set_bit(DDRB, DDB7);
    2510:	bf 9a       	sbi	0x17, 7	; 23
	set_bit(DDRB, DDB4); //set chip-select
    2512:	bc 9a       	sbi	0x17, 4	; 23
	//set_bit(PORTB, PB6); //internal pull-up
	clear_bit(DDRB,PB6);
    2514:	be 98       	cbi	0x17, 6	; 23
	*/
	
	
	/* Enable SPI, Master, set clock rate fck/16 */
	
	SPCR |= (1<<SPE)|(1<<MSTR)|(1<<SPR0);
    2516:	8d b1       	in	r24, 0x0d	; 13
    2518:	81 65       	ori	r24, 0x51	; 81
    251a:	8d b9       	out	0x0d, r24	; 13
    251c:	08 95       	ret

0000251e <SPI_chipSelect>:
}

void SPI_chipSelect(uint8_t select){
	
	if(select == 0){
    251e:	81 11       	cpse	r24, r1
    2520:	02 c0       	rjmp	.+4      	; 0x2526 <SPI_chipSelect+0x8>
		clear_bit(PORTB, PB4);
    2522:	c4 98       	cbi	0x18, 4	; 24
    2524:	08 95       	ret
	}
	
	else{
		set_bit(PORTB, PB4);
    2526:	c4 9a       	sbi	0x18, 4	; 24
    2528:	08 95       	ret

0000252a <USART_receive>:
    252a:	5f 9b       	sbis	0x0b, 7	; 11
    252c:	fe cf       	rjmp	.-4      	; 0x252a <USART_receive>
    252e:	8c b1       	in	r24, 0x0c	; 12
    2530:	08 95       	ret

00002532 <USART_transmit>:
    2532:	5d 9b       	sbis	0x0b, 5	; 11
    2534:	fe cf       	rjmp	.-4      	; 0x2532 <USART_transmit>
    2536:	8c b9       	out	0x0c, r24	; 12
    2538:	08 95       	ret

0000253a <USART_init>:
    253a:	8f e1       	ldi	r24, 0x1F	; 31
    253c:	89 b9       	out	0x09, r24	; 9
    253e:	10 bc       	out	0x20, r1	; 32
    2540:	88 e1       	ldi	r24, 0x18	; 24
    2542:	8a b9       	out	0x0a, r24	; 10
    2544:	86 e8       	ldi	r24, 0x86	; 134
    2546:	80 bd       	out	0x20, r24	; 32
    2548:	65 e9       	ldi	r22, 0x95	; 149
    254a:	72 e1       	ldi	r23, 0x12	; 18
    254c:	89 e9       	ldi	r24, 0x99	; 153
    254e:	92 e1       	ldi	r25, 0x12	; 18
    2550:	0e 94 d3 12 	call	0x25a6	; 0x25a6 <fdevopen>
    2554:	08 95       	ret

00002556 <__divmodhi4>:
    2556:	97 fb       	bst	r25, 7
    2558:	07 2e       	mov	r0, r23
    255a:	16 f4       	brtc	.+4      	; 0x2560 <__divmodhi4+0xa>
    255c:	00 94       	com	r0
    255e:	07 d0       	rcall	.+14     	; 0x256e <__divmodhi4_neg1>
    2560:	77 fd       	sbrc	r23, 7
    2562:	09 d0       	rcall	.+18     	; 0x2576 <__divmodhi4_neg2>
    2564:	0e 94 bf 12 	call	0x257e	; 0x257e <__udivmodhi4>
    2568:	07 fc       	sbrc	r0, 7
    256a:	05 d0       	rcall	.+10     	; 0x2576 <__divmodhi4_neg2>
    256c:	3e f4       	brtc	.+14     	; 0x257c <__divmodhi4_exit>

0000256e <__divmodhi4_neg1>:
    256e:	90 95       	com	r25
    2570:	81 95       	neg	r24
    2572:	9f 4f       	sbci	r25, 0xFF	; 255
    2574:	08 95       	ret

00002576 <__divmodhi4_neg2>:
    2576:	70 95       	com	r23
    2578:	61 95       	neg	r22
    257a:	7f 4f       	sbci	r23, 0xFF	; 255

0000257c <__divmodhi4_exit>:
    257c:	08 95       	ret

0000257e <__udivmodhi4>:
    257e:	aa 1b       	sub	r26, r26
    2580:	bb 1b       	sub	r27, r27
    2582:	51 e1       	ldi	r21, 0x11	; 17
    2584:	07 c0       	rjmp	.+14     	; 0x2594 <__udivmodhi4_ep>

00002586 <__udivmodhi4_loop>:
    2586:	aa 1f       	adc	r26, r26
    2588:	bb 1f       	adc	r27, r27
    258a:	a6 17       	cp	r26, r22
    258c:	b7 07       	cpc	r27, r23
    258e:	10 f0       	brcs	.+4      	; 0x2594 <__udivmodhi4_ep>
    2590:	a6 1b       	sub	r26, r22
    2592:	b7 0b       	sbc	r27, r23

00002594 <__udivmodhi4_ep>:
    2594:	88 1f       	adc	r24, r24
    2596:	99 1f       	adc	r25, r25
    2598:	5a 95       	dec	r21
    259a:	a9 f7       	brne	.-22     	; 0x2586 <__udivmodhi4_loop>
    259c:	80 95       	com	r24
    259e:	90 95       	com	r25
    25a0:	bc 01       	movw	r22, r24
    25a2:	cd 01       	movw	r24, r26
    25a4:	08 95       	ret

000025a6 <fdevopen>:
    25a6:	0f 93       	push	r16
    25a8:	1f 93       	push	r17
    25aa:	cf 93       	push	r28
    25ac:	df 93       	push	r29
    25ae:	ec 01       	movw	r28, r24
    25b0:	8b 01       	movw	r16, r22
    25b2:	00 97       	sbiw	r24, 0x00	; 0
    25b4:	31 f4       	brne	.+12     	; 0x25c2 <fdevopen+0x1c>
    25b6:	61 15       	cp	r22, r1
    25b8:	71 05       	cpc	r23, r1
    25ba:	19 f4       	brne	.+6      	; 0x25c2 <fdevopen+0x1c>
    25bc:	80 e0       	ldi	r24, 0x00	; 0
    25be:	90 e0       	ldi	r25, 0x00	; 0
    25c0:	38 c0       	rjmp	.+112    	; 0x2632 <fdevopen+0x8c>
    25c2:	6e e0       	ldi	r22, 0x0E	; 14
    25c4:	70 e0       	ldi	r23, 0x00	; 0
    25c6:	81 e0       	ldi	r24, 0x01	; 1
    25c8:	90 e0       	ldi	r25, 0x00	; 0
    25ca:	0e 94 04 15 	call	0x2a08	; 0x2a08 <calloc>
    25ce:	fc 01       	movw	r30, r24
    25d0:	00 97       	sbiw	r24, 0x00	; 0
    25d2:	a1 f3       	breq	.-24     	; 0x25bc <fdevopen+0x16>
    25d4:	80 e8       	ldi	r24, 0x80	; 128
    25d6:	83 83       	std	Z+3, r24	; 0x03
    25d8:	01 15       	cp	r16, r1
    25da:	11 05       	cpc	r17, r1
    25dc:	71 f0       	breq	.+28     	; 0x25fa <fdevopen+0x54>
    25de:	13 87       	std	Z+11, r17	; 0x0b
    25e0:	02 87       	std	Z+10, r16	; 0x0a
    25e2:	81 e8       	ldi	r24, 0x81	; 129
    25e4:	83 83       	std	Z+3, r24	; 0x03
    25e6:	80 91 5a 02 	lds	r24, 0x025A
    25ea:	90 91 5b 02 	lds	r25, 0x025B
    25ee:	89 2b       	or	r24, r25
    25f0:	21 f4       	brne	.+8      	; 0x25fa <fdevopen+0x54>
    25f2:	f0 93 5b 02 	sts	0x025B, r31
    25f6:	e0 93 5a 02 	sts	0x025A, r30
    25fa:	20 97       	sbiw	r28, 0x00	; 0
    25fc:	c9 f0       	breq	.+50     	; 0x2630 <fdevopen+0x8a>
    25fe:	d1 87       	std	Z+9, r29	; 0x09
    2600:	c0 87       	std	Z+8, r28	; 0x08
    2602:	83 81       	ldd	r24, Z+3	; 0x03
    2604:	82 60       	ori	r24, 0x02	; 2
    2606:	83 83       	std	Z+3, r24	; 0x03
    2608:	80 91 5c 02 	lds	r24, 0x025C
    260c:	90 91 5d 02 	lds	r25, 0x025D
    2610:	89 2b       	or	r24, r25
    2612:	71 f4       	brne	.+28     	; 0x2630 <fdevopen+0x8a>
    2614:	f0 93 5d 02 	sts	0x025D, r31
    2618:	e0 93 5c 02 	sts	0x025C, r30
    261c:	80 91 5e 02 	lds	r24, 0x025E
    2620:	90 91 5f 02 	lds	r25, 0x025F
    2624:	89 2b       	or	r24, r25
    2626:	21 f4       	brne	.+8      	; 0x2630 <fdevopen+0x8a>
    2628:	f0 93 5f 02 	sts	0x025F, r31
    262c:	e0 93 5e 02 	sts	0x025E, r30
    2630:	cf 01       	movw	r24, r30
    2632:	df 91       	pop	r29
    2634:	cf 91       	pop	r28
    2636:	1f 91       	pop	r17
    2638:	0f 91       	pop	r16
    263a:	08 95       	ret

0000263c <printf>:
    263c:	a0 e0       	ldi	r26, 0x00	; 0
    263e:	b0 e0       	ldi	r27, 0x00	; 0
    2640:	e4 e2       	ldi	r30, 0x24	; 36
    2642:	f3 e1       	ldi	r31, 0x13	; 19
    2644:	0c 94 04 17 	jmp	0x2e08	; 0x2e08 <__prologue_saves__+0x20>
    2648:	fe 01       	movw	r30, r28
    264a:	35 96       	adiw	r30, 0x05	; 5
    264c:	61 91       	ld	r22, Z+
    264e:	71 91       	ld	r23, Z+
    2650:	af 01       	movw	r20, r30
    2652:	80 91 5c 02 	lds	r24, 0x025C
    2656:	90 91 5d 02 	lds	r25, 0x025D
    265a:	0e 94 32 13 	call	0x2664	; 0x2664 <vfprintf>
    265e:	e2 e0       	ldi	r30, 0x02	; 2
    2660:	0c 94 20 17 	jmp	0x2e40	; 0x2e40 <__epilogue_restores__+0x20>

00002664 <vfprintf>:
    2664:	ac e0       	ldi	r26, 0x0C	; 12
    2666:	b0 e0       	ldi	r27, 0x00	; 0
    2668:	e8 e3       	ldi	r30, 0x38	; 56
    266a:	f3 e1       	ldi	r31, 0x13	; 19
    266c:	0c 94 f4 16 	jmp	0x2de8	; 0x2de8 <__prologue_saves__>
    2670:	7c 01       	movw	r14, r24
    2672:	6b 01       	movw	r12, r22
    2674:	8a 01       	movw	r16, r20
    2676:	fc 01       	movw	r30, r24
    2678:	17 82       	std	Z+7, r1	; 0x07
    267a:	16 82       	std	Z+6, r1	; 0x06
    267c:	83 81       	ldd	r24, Z+3	; 0x03
    267e:	81 ff       	sbrs	r24, 1
    2680:	bd c1       	rjmp	.+890    	; 0x29fc <vfprintf+0x398>
    2682:	ce 01       	movw	r24, r28
    2684:	01 96       	adiw	r24, 0x01	; 1
    2686:	4c 01       	movw	r8, r24
    2688:	f7 01       	movw	r30, r14
    268a:	93 81       	ldd	r25, Z+3	; 0x03
    268c:	f6 01       	movw	r30, r12
    268e:	93 fd       	sbrc	r25, 3
    2690:	85 91       	lpm	r24, Z+
    2692:	93 ff       	sbrs	r25, 3
    2694:	81 91       	ld	r24, Z+
    2696:	6f 01       	movw	r12, r30
    2698:	88 23       	and	r24, r24
    269a:	09 f4       	brne	.+2      	; 0x269e <vfprintf+0x3a>
    269c:	ab c1       	rjmp	.+854    	; 0x29f4 <vfprintf+0x390>
    269e:	85 32       	cpi	r24, 0x25	; 37
    26a0:	39 f4       	brne	.+14     	; 0x26b0 <vfprintf+0x4c>
    26a2:	93 fd       	sbrc	r25, 3
    26a4:	85 91       	lpm	r24, Z+
    26a6:	93 ff       	sbrs	r25, 3
    26a8:	81 91       	ld	r24, Z+
    26aa:	6f 01       	movw	r12, r30
    26ac:	85 32       	cpi	r24, 0x25	; 37
    26ae:	29 f4       	brne	.+10     	; 0x26ba <vfprintf+0x56>
    26b0:	b7 01       	movw	r22, r14
    26b2:	90 e0       	ldi	r25, 0x00	; 0
    26b4:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <fputc>
    26b8:	e7 cf       	rjmp	.-50     	; 0x2688 <vfprintf+0x24>
    26ba:	51 2c       	mov	r5, r1
    26bc:	31 2c       	mov	r3, r1
    26be:	20 e0       	ldi	r18, 0x00	; 0
    26c0:	20 32       	cpi	r18, 0x20	; 32
    26c2:	a0 f4       	brcc	.+40     	; 0x26ec <vfprintf+0x88>
    26c4:	8b 32       	cpi	r24, 0x2B	; 43
    26c6:	69 f0       	breq	.+26     	; 0x26e2 <vfprintf+0x7e>
    26c8:	30 f4       	brcc	.+12     	; 0x26d6 <vfprintf+0x72>
    26ca:	80 32       	cpi	r24, 0x20	; 32
    26cc:	59 f0       	breq	.+22     	; 0x26e4 <vfprintf+0x80>
    26ce:	83 32       	cpi	r24, 0x23	; 35
    26d0:	69 f4       	brne	.+26     	; 0x26ec <vfprintf+0x88>
    26d2:	20 61       	ori	r18, 0x10	; 16
    26d4:	2c c0       	rjmp	.+88     	; 0x272e <vfprintf+0xca>
    26d6:	8d 32       	cpi	r24, 0x2D	; 45
    26d8:	39 f0       	breq	.+14     	; 0x26e8 <vfprintf+0x84>
    26da:	80 33       	cpi	r24, 0x30	; 48
    26dc:	39 f4       	brne	.+14     	; 0x26ec <vfprintf+0x88>
    26de:	21 60       	ori	r18, 0x01	; 1
    26e0:	26 c0       	rjmp	.+76     	; 0x272e <vfprintf+0xca>
    26e2:	22 60       	ori	r18, 0x02	; 2
    26e4:	24 60       	ori	r18, 0x04	; 4
    26e6:	23 c0       	rjmp	.+70     	; 0x272e <vfprintf+0xca>
    26e8:	28 60       	ori	r18, 0x08	; 8
    26ea:	21 c0       	rjmp	.+66     	; 0x272e <vfprintf+0xca>
    26ec:	27 fd       	sbrc	r18, 7
    26ee:	27 c0       	rjmp	.+78     	; 0x273e <vfprintf+0xda>
    26f0:	30 ed       	ldi	r19, 0xD0	; 208
    26f2:	38 0f       	add	r19, r24
    26f4:	3a 30       	cpi	r19, 0x0A	; 10
    26f6:	78 f4       	brcc	.+30     	; 0x2716 <vfprintf+0xb2>
    26f8:	26 ff       	sbrs	r18, 6
    26fa:	06 c0       	rjmp	.+12     	; 0x2708 <vfprintf+0xa4>
    26fc:	fa e0       	ldi	r31, 0x0A	; 10
    26fe:	5f 9e       	mul	r5, r31
    2700:	30 0d       	add	r19, r0
    2702:	11 24       	eor	r1, r1
    2704:	53 2e       	mov	r5, r19
    2706:	13 c0       	rjmp	.+38     	; 0x272e <vfprintf+0xca>
    2708:	8a e0       	ldi	r24, 0x0A	; 10
    270a:	38 9e       	mul	r3, r24
    270c:	30 0d       	add	r19, r0
    270e:	11 24       	eor	r1, r1
    2710:	33 2e       	mov	r3, r19
    2712:	20 62       	ori	r18, 0x20	; 32
    2714:	0c c0       	rjmp	.+24     	; 0x272e <vfprintf+0xca>
    2716:	8e 32       	cpi	r24, 0x2E	; 46
    2718:	21 f4       	brne	.+8      	; 0x2722 <vfprintf+0xbe>
    271a:	26 fd       	sbrc	r18, 6
    271c:	6b c1       	rjmp	.+726    	; 0x29f4 <vfprintf+0x390>
    271e:	20 64       	ori	r18, 0x40	; 64
    2720:	06 c0       	rjmp	.+12     	; 0x272e <vfprintf+0xca>
    2722:	8c 36       	cpi	r24, 0x6C	; 108
    2724:	11 f4       	brne	.+4      	; 0x272a <vfprintf+0xc6>
    2726:	20 68       	ori	r18, 0x80	; 128
    2728:	02 c0       	rjmp	.+4      	; 0x272e <vfprintf+0xca>
    272a:	88 36       	cpi	r24, 0x68	; 104
    272c:	41 f4       	brne	.+16     	; 0x273e <vfprintf+0xda>
    272e:	f6 01       	movw	r30, r12
    2730:	93 fd       	sbrc	r25, 3
    2732:	85 91       	lpm	r24, Z+
    2734:	93 ff       	sbrs	r25, 3
    2736:	81 91       	ld	r24, Z+
    2738:	6f 01       	movw	r12, r30
    273a:	81 11       	cpse	r24, r1
    273c:	c1 cf       	rjmp	.-126    	; 0x26c0 <vfprintf+0x5c>
    273e:	98 2f       	mov	r25, r24
    2740:	9f 7d       	andi	r25, 0xDF	; 223
    2742:	95 54       	subi	r25, 0x45	; 69
    2744:	93 30       	cpi	r25, 0x03	; 3
    2746:	28 f4       	brcc	.+10     	; 0x2752 <vfprintf+0xee>
    2748:	0c 5f       	subi	r16, 0xFC	; 252
    274a:	1f 4f       	sbci	r17, 0xFF	; 255
    274c:	ff e3       	ldi	r31, 0x3F	; 63
    274e:	f9 83       	std	Y+1, r31	; 0x01
    2750:	0d c0       	rjmp	.+26     	; 0x276c <vfprintf+0x108>
    2752:	83 36       	cpi	r24, 0x63	; 99
    2754:	31 f0       	breq	.+12     	; 0x2762 <vfprintf+0xfe>
    2756:	83 37       	cpi	r24, 0x73	; 115
    2758:	71 f0       	breq	.+28     	; 0x2776 <vfprintf+0x112>
    275a:	83 35       	cpi	r24, 0x53	; 83
    275c:	09 f0       	breq	.+2      	; 0x2760 <vfprintf+0xfc>
    275e:	5b c0       	rjmp	.+182    	; 0x2816 <vfprintf+0x1b2>
    2760:	22 c0       	rjmp	.+68     	; 0x27a6 <vfprintf+0x142>
    2762:	f8 01       	movw	r30, r16
    2764:	80 81       	ld	r24, Z
    2766:	89 83       	std	Y+1, r24	; 0x01
    2768:	0e 5f       	subi	r16, 0xFE	; 254
    276a:	1f 4f       	sbci	r17, 0xFF	; 255
    276c:	44 24       	eor	r4, r4
    276e:	43 94       	inc	r4
    2770:	51 2c       	mov	r5, r1
    2772:	54 01       	movw	r10, r8
    2774:	15 c0       	rjmp	.+42     	; 0x27a0 <vfprintf+0x13c>
    2776:	38 01       	movw	r6, r16
    2778:	f2 e0       	ldi	r31, 0x02	; 2
    277a:	6f 0e       	add	r6, r31
    277c:	71 1c       	adc	r7, r1
    277e:	f8 01       	movw	r30, r16
    2780:	a0 80       	ld	r10, Z
    2782:	b1 80       	ldd	r11, Z+1	; 0x01
    2784:	26 ff       	sbrs	r18, 6
    2786:	03 c0       	rjmp	.+6      	; 0x278e <vfprintf+0x12a>
    2788:	65 2d       	mov	r22, r5
    278a:	70 e0       	ldi	r23, 0x00	; 0
    278c:	02 c0       	rjmp	.+4      	; 0x2792 <vfprintf+0x12e>
    278e:	6f ef       	ldi	r22, 0xFF	; 255
    2790:	7f ef       	ldi	r23, 0xFF	; 255
    2792:	c5 01       	movw	r24, r10
    2794:	2c 87       	std	Y+12, r18	; 0x0c
    2796:	0e 94 59 16 	call	0x2cb2	; 0x2cb2 <strnlen>
    279a:	2c 01       	movw	r4, r24
    279c:	83 01       	movw	r16, r6
    279e:	2c 85       	ldd	r18, Y+12	; 0x0c
    27a0:	2f 77       	andi	r18, 0x7F	; 127
    27a2:	22 2e       	mov	r2, r18
    27a4:	17 c0       	rjmp	.+46     	; 0x27d4 <vfprintf+0x170>
    27a6:	38 01       	movw	r6, r16
    27a8:	f2 e0       	ldi	r31, 0x02	; 2
    27aa:	6f 0e       	add	r6, r31
    27ac:	71 1c       	adc	r7, r1
    27ae:	f8 01       	movw	r30, r16
    27b0:	a0 80       	ld	r10, Z
    27b2:	b1 80       	ldd	r11, Z+1	; 0x01
    27b4:	26 ff       	sbrs	r18, 6
    27b6:	03 c0       	rjmp	.+6      	; 0x27be <vfprintf+0x15a>
    27b8:	65 2d       	mov	r22, r5
    27ba:	70 e0       	ldi	r23, 0x00	; 0
    27bc:	02 c0       	rjmp	.+4      	; 0x27c2 <vfprintf+0x15e>
    27be:	6f ef       	ldi	r22, 0xFF	; 255
    27c0:	7f ef       	ldi	r23, 0xFF	; 255
    27c2:	c5 01       	movw	r24, r10
    27c4:	2c 87       	std	Y+12, r18	; 0x0c
    27c6:	0e 94 47 16 	call	0x2c8e	; 0x2c8e <strnlen_P>
    27ca:	2c 01       	movw	r4, r24
    27cc:	2c 85       	ldd	r18, Y+12	; 0x0c
    27ce:	20 68       	ori	r18, 0x80	; 128
    27d0:	22 2e       	mov	r2, r18
    27d2:	83 01       	movw	r16, r6
    27d4:	23 fc       	sbrc	r2, 3
    27d6:	1b c0       	rjmp	.+54     	; 0x280e <vfprintf+0x1aa>
    27d8:	83 2d       	mov	r24, r3
    27da:	90 e0       	ldi	r25, 0x00	; 0
    27dc:	48 16       	cp	r4, r24
    27de:	59 06       	cpc	r5, r25
    27e0:	b0 f4       	brcc	.+44     	; 0x280e <vfprintf+0x1aa>
    27e2:	b7 01       	movw	r22, r14
    27e4:	80 e2       	ldi	r24, 0x20	; 32
    27e6:	90 e0       	ldi	r25, 0x00	; 0
    27e8:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <fputc>
    27ec:	3a 94       	dec	r3
    27ee:	f4 cf       	rjmp	.-24     	; 0x27d8 <vfprintf+0x174>
    27f0:	f5 01       	movw	r30, r10
    27f2:	27 fc       	sbrc	r2, 7
    27f4:	85 91       	lpm	r24, Z+
    27f6:	27 fe       	sbrs	r2, 7
    27f8:	81 91       	ld	r24, Z+
    27fa:	5f 01       	movw	r10, r30
    27fc:	b7 01       	movw	r22, r14
    27fe:	90 e0       	ldi	r25, 0x00	; 0
    2800:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <fputc>
    2804:	31 10       	cpse	r3, r1
    2806:	3a 94       	dec	r3
    2808:	f1 e0       	ldi	r31, 0x01	; 1
    280a:	4f 1a       	sub	r4, r31
    280c:	51 08       	sbc	r5, r1
    280e:	41 14       	cp	r4, r1
    2810:	51 04       	cpc	r5, r1
    2812:	71 f7       	brne	.-36     	; 0x27f0 <vfprintf+0x18c>
    2814:	e5 c0       	rjmp	.+458    	; 0x29e0 <vfprintf+0x37c>
    2816:	84 36       	cpi	r24, 0x64	; 100
    2818:	11 f0       	breq	.+4      	; 0x281e <vfprintf+0x1ba>
    281a:	89 36       	cpi	r24, 0x69	; 105
    281c:	39 f5       	brne	.+78     	; 0x286c <vfprintf+0x208>
    281e:	f8 01       	movw	r30, r16
    2820:	27 ff       	sbrs	r18, 7
    2822:	07 c0       	rjmp	.+14     	; 0x2832 <vfprintf+0x1ce>
    2824:	60 81       	ld	r22, Z
    2826:	71 81       	ldd	r23, Z+1	; 0x01
    2828:	82 81       	ldd	r24, Z+2	; 0x02
    282a:	93 81       	ldd	r25, Z+3	; 0x03
    282c:	0c 5f       	subi	r16, 0xFC	; 252
    282e:	1f 4f       	sbci	r17, 0xFF	; 255
    2830:	08 c0       	rjmp	.+16     	; 0x2842 <vfprintf+0x1de>
    2832:	60 81       	ld	r22, Z
    2834:	71 81       	ldd	r23, Z+1	; 0x01
    2836:	88 27       	eor	r24, r24
    2838:	77 fd       	sbrc	r23, 7
    283a:	80 95       	com	r24
    283c:	98 2f       	mov	r25, r24
    283e:	0e 5f       	subi	r16, 0xFE	; 254
    2840:	1f 4f       	sbci	r17, 0xFF	; 255
    2842:	2f 76       	andi	r18, 0x6F	; 111
    2844:	b2 2e       	mov	r11, r18
    2846:	97 ff       	sbrs	r25, 7
    2848:	09 c0       	rjmp	.+18     	; 0x285c <vfprintf+0x1f8>
    284a:	90 95       	com	r25
    284c:	80 95       	com	r24
    284e:	70 95       	com	r23
    2850:	61 95       	neg	r22
    2852:	7f 4f       	sbci	r23, 0xFF	; 255
    2854:	8f 4f       	sbci	r24, 0xFF	; 255
    2856:	9f 4f       	sbci	r25, 0xFF	; 255
    2858:	20 68       	ori	r18, 0x80	; 128
    285a:	b2 2e       	mov	r11, r18
    285c:	2a e0       	ldi	r18, 0x0A	; 10
    285e:	30 e0       	ldi	r19, 0x00	; 0
    2860:	a4 01       	movw	r20, r8
    2862:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__ultoa_invert>
    2866:	a8 2e       	mov	r10, r24
    2868:	a8 18       	sub	r10, r8
    286a:	44 c0       	rjmp	.+136    	; 0x28f4 <vfprintf+0x290>
    286c:	85 37       	cpi	r24, 0x75	; 117
    286e:	29 f4       	brne	.+10     	; 0x287a <vfprintf+0x216>
    2870:	2f 7e       	andi	r18, 0xEF	; 239
    2872:	b2 2e       	mov	r11, r18
    2874:	2a e0       	ldi	r18, 0x0A	; 10
    2876:	30 e0       	ldi	r19, 0x00	; 0
    2878:	25 c0       	rjmp	.+74     	; 0x28c4 <vfprintf+0x260>
    287a:	f2 2f       	mov	r31, r18
    287c:	f9 7f       	andi	r31, 0xF9	; 249
    287e:	bf 2e       	mov	r11, r31
    2880:	8f 36       	cpi	r24, 0x6F	; 111
    2882:	c1 f0       	breq	.+48     	; 0x28b4 <vfprintf+0x250>
    2884:	18 f4       	brcc	.+6      	; 0x288c <vfprintf+0x228>
    2886:	88 35       	cpi	r24, 0x58	; 88
    2888:	79 f0       	breq	.+30     	; 0x28a8 <vfprintf+0x244>
    288a:	b4 c0       	rjmp	.+360    	; 0x29f4 <vfprintf+0x390>
    288c:	80 37       	cpi	r24, 0x70	; 112
    288e:	19 f0       	breq	.+6      	; 0x2896 <vfprintf+0x232>
    2890:	88 37       	cpi	r24, 0x78	; 120
    2892:	21 f0       	breq	.+8      	; 0x289c <vfprintf+0x238>
    2894:	af c0       	rjmp	.+350    	; 0x29f4 <vfprintf+0x390>
    2896:	2f 2f       	mov	r18, r31
    2898:	20 61       	ori	r18, 0x10	; 16
    289a:	b2 2e       	mov	r11, r18
    289c:	b4 fe       	sbrs	r11, 4
    289e:	0d c0       	rjmp	.+26     	; 0x28ba <vfprintf+0x256>
    28a0:	8b 2d       	mov	r24, r11
    28a2:	84 60       	ori	r24, 0x04	; 4
    28a4:	b8 2e       	mov	r11, r24
    28a6:	09 c0       	rjmp	.+18     	; 0x28ba <vfprintf+0x256>
    28a8:	24 ff       	sbrs	r18, 4
    28aa:	0a c0       	rjmp	.+20     	; 0x28c0 <vfprintf+0x25c>
    28ac:	9f 2f       	mov	r25, r31
    28ae:	96 60       	ori	r25, 0x06	; 6
    28b0:	b9 2e       	mov	r11, r25
    28b2:	06 c0       	rjmp	.+12     	; 0x28c0 <vfprintf+0x25c>
    28b4:	28 e0       	ldi	r18, 0x08	; 8
    28b6:	30 e0       	ldi	r19, 0x00	; 0
    28b8:	05 c0       	rjmp	.+10     	; 0x28c4 <vfprintf+0x260>
    28ba:	20 e1       	ldi	r18, 0x10	; 16
    28bc:	30 e0       	ldi	r19, 0x00	; 0
    28be:	02 c0       	rjmp	.+4      	; 0x28c4 <vfprintf+0x260>
    28c0:	20 e1       	ldi	r18, 0x10	; 16
    28c2:	32 e0       	ldi	r19, 0x02	; 2
    28c4:	f8 01       	movw	r30, r16
    28c6:	b7 fe       	sbrs	r11, 7
    28c8:	07 c0       	rjmp	.+14     	; 0x28d8 <vfprintf+0x274>
    28ca:	60 81       	ld	r22, Z
    28cc:	71 81       	ldd	r23, Z+1	; 0x01
    28ce:	82 81       	ldd	r24, Z+2	; 0x02
    28d0:	93 81       	ldd	r25, Z+3	; 0x03
    28d2:	0c 5f       	subi	r16, 0xFC	; 252
    28d4:	1f 4f       	sbci	r17, 0xFF	; 255
    28d6:	06 c0       	rjmp	.+12     	; 0x28e4 <vfprintf+0x280>
    28d8:	60 81       	ld	r22, Z
    28da:	71 81       	ldd	r23, Z+1	; 0x01
    28dc:	80 e0       	ldi	r24, 0x00	; 0
    28de:	90 e0       	ldi	r25, 0x00	; 0
    28e0:	0e 5f       	subi	r16, 0xFE	; 254
    28e2:	1f 4f       	sbci	r17, 0xFF	; 255
    28e4:	a4 01       	movw	r20, r8
    28e6:	0e 94 96 16 	call	0x2d2c	; 0x2d2c <__ultoa_invert>
    28ea:	a8 2e       	mov	r10, r24
    28ec:	a8 18       	sub	r10, r8
    28ee:	fb 2d       	mov	r31, r11
    28f0:	ff 77       	andi	r31, 0x7F	; 127
    28f2:	bf 2e       	mov	r11, r31
    28f4:	b6 fe       	sbrs	r11, 6
    28f6:	0b c0       	rjmp	.+22     	; 0x290e <vfprintf+0x2aa>
    28f8:	2b 2d       	mov	r18, r11
    28fa:	2e 7f       	andi	r18, 0xFE	; 254
    28fc:	a5 14       	cp	r10, r5
    28fe:	50 f4       	brcc	.+20     	; 0x2914 <vfprintf+0x2b0>
    2900:	b4 fe       	sbrs	r11, 4
    2902:	0a c0       	rjmp	.+20     	; 0x2918 <vfprintf+0x2b4>
    2904:	b2 fc       	sbrc	r11, 2
    2906:	08 c0       	rjmp	.+16     	; 0x2918 <vfprintf+0x2b4>
    2908:	2b 2d       	mov	r18, r11
    290a:	2e 7e       	andi	r18, 0xEE	; 238
    290c:	05 c0       	rjmp	.+10     	; 0x2918 <vfprintf+0x2b4>
    290e:	7a 2c       	mov	r7, r10
    2910:	2b 2d       	mov	r18, r11
    2912:	03 c0       	rjmp	.+6      	; 0x291a <vfprintf+0x2b6>
    2914:	7a 2c       	mov	r7, r10
    2916:	01 c0       	rjmp	.+2      	; 0x291a <vfprintf+0x2b6>
    2918:	75 2c       	mov	r7, r5
    291a:	24 ff       	sbrs	r18, 4
    291c:	0d c0       	rjmp	.+26     	; 0x2938 <vfprintf+0x2d4>
    291e:	fe 01       	movw	r30, r28
    2920:	ea 0d       	add	r30, r10
    2922:	f1 1d       	adc	r31, r1
    2924:	80 81       	ld	r24, Z
    2926:	80 33       	cpi	r24, 0x30	; 48
    2928:	11 f4       	brne	.+4      	; 0x292e <vfprintf+0x2ca>
    292a:	29 7e       	andi	r18, 0xE9	; 233
    292c:	09 c0       	rjmp	.+18     	; 0x2940 <vfprintf+0x2dc>
    292e:	22 ff       	sbrs	r18, 2
    2930:	06 c0       	rjmp	.+12     	; 0x293e <vfprintf+0x2da>
    2932:	73 94       	inc	r7
    2934:	73 94       	inc	r7
    2936:	04 c0       	rjmp	.+8      	; 0x2940 <vfprintf+0x2dc>
    2938:	82 2f       	mov	r24, r18
    293a:	86 78       	andi	r24, 0x86	; 134
    293c:	09 f0       	breq	.+2      	; 0x2940 <vfprintf+0x2dc>
    293e:	73 94       	inc	r7
    2940:	23 fd       	sbrc	r18, 3
    2942:	13 c0       	rjmp	.+38     	; 0x296a <vfprintf+0x306>
    2944:	20 ff       	sbrs	r18, 0
    2946:	06 c0       	rjmp	.+12     	; 0x2954 <vfprintf+0x2f0>
    2948:	5a 2c       	mov	r5, r10
    294a:	73 14       	cp	r7, r3
    294c:	18 f4       	brcc	.+6      	; 0x2954 <vfprintf+0x2f0>
    294e:	53 0c       	add	r5, r3
    2950:	57 18       	sub	r5, r7
    2952:	73 2c       	mov	r7, r3
    2954:	73 14       	cp	r7, r3
    2956:	68 f4       	brcc	.+26     	; 0x2972 <vfprintf+0x30e>
    2958:	b7 01       	movw	r22, r14
    295a:	80 e2       	ldi	r24, 0x20	; 32
    295c:	90 e0       	ldi	r25, 0x00	; 0
    295e:	2c 87       	std	Y+12, r18	; 0x0c
    2960:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <fputc>
    2964:	73 94       	inc	r7
    2966:	2c 85       	ldd	r18, Y+12	; 0x0c
    2968:	f5 cf       	rjmp	.-22     	; 0x2954 <vfprintf+0x2f0>
    296a:	73 14       	cp	r7, r3
    296c:	10 f4       	brcc	.+4      	; 0x2972 <vfprintf+0x30e>
    296e:	37 18       	sub	r3, r7
    2970:	01 c0       	rjmp	.+2      	; 0x2974 <vfprintf+0x310>
    2972:	31 2c       	mov	r3, r1
    2974:	24 ff       	sbrs	r18, 4
    2976:	12 c0       	rjmp	.+36     	; 0x299c <vfprintf+0x338>
    2978:	b7 01       	movw	r22, r14
    297a:	80 e3       	ldi	r24, 0x30	; 48
    297c:	90 e0       	ldi	r25, 0x00	; 0
    297e:	2c 87       	std	Y+12, r18	; 0x0c
    2980:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <fputc>
    2984:	2c 85       	ldd	r18, Y+12	; 0x0c
    2986:	22 ff       	sbrs	r18, 2
    2988:	17 c0       	rjmp	.+46     	; 0x29b8 <vfprintf+0x354>
    298a:	21 ff       	sbrs	r18, 1
    298c:	03 c0       	rjmp	.+6      	; 0x2994 <vfprintf+0x330>
    298e:	88 e5       	ldi	r24, 0x58	; 88
    2990:	90 e0       	ldi	r25, 0x00	; 0
    2992:	02 c0       	rjmp	.+4      	; 0x2998 <vfprintf+0x334>
    2994:	88 e7       	ldi	r24, 0x78	; 120
    2996:	90 e0       	ldi	r25, 0x00	; 0
    2998:	b7 01       	movw	r22, r14
    299a:	0c c0       	rjmp	.+24     	; 0x29b4 <vfprintf+0x350>
    299c:	82 2f       	mov	r24, r18
    299e:	86 78       	andi	r24, 0x86	; 134
    29a0:	59 f0       	breq	.+22     	; 0x29b8 <vfprintf+0x354>
    29a2:	21 fd       	sbrc	r18, 1
    29a4:	02 c0       	rjmp	.+4      	; 0x29aa <vfprintf+0x346>
    29a6:	80 e2       	ldi	r24, 0x20	; 32
    29a8:	01 c0       	rjmp	.+2      	; 0x29ac <vfprintf+0x348>
    29aa:	8b e2       	ldi	r24, 0x2B	; 43
    29ac:	27 fd       	sbrc	r18, 7
    29ae:	8d e2       	ldi	r24, 0x2D	; 45
    29b0:	b7 01       	movw	r22, r14
    29b2:	90 e0       	ldi	r25, 0x00	; 0
    29b4:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <fputc>
    29b8:	a5 14       	cp	r10, r5
    29ba:	38 f4       	brcc	.+14     	; 0x29ca <vfprintf+0x366>
    29bc:	b7 01       	movw	r22, r14
    29be:	80 e3       	ldi	r24, 0x30	; 48
    29c0:	90 e0       	ldi	r25, 0x00	; 0
    29c2:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <fputc>
    29c6:	5a 94       	dec	r5
    29c8:	f7 cf       	rjmp	.-18     	; 0x29b8 <vfprintf+0x354>
    29ca:	aa 94       	dec	r10
    29cc:	f4 01       	movw	r30, r8
    29ce:	ea 0d       	add	r30, r10
    29d0:	f1 1d       	adc	r31, r1
    29d2:	80 81       	ld	r24, Z
    29d4:	b7 01       	movw	r22, r14
    29d6:	90 e0       	ldi	r25, 0x00	; 0
    29d8:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <fputc>
    29dc:	a1 10       	cpse	r10, r1
    29de:	f5 cf       	rjmp	.-22     	; 0x29ca <vfprintf+0x366>
    29e0:	33 20       	and	r3, r3
    29e2:	09 f4       	brne	.+2      	; 0x29e6 <vfprintf+0x382>
    29e4:	51 ce       	rjmp	.-862    	; 0x2688 <vfprintf+0x24>
    29e6:	b7 01       	movw	r22, r14
    29e8:	80 e2       	ldi	r24, 0x20	; 32
    29ea:	90 e0       	ldi	r25, 0x00	; 0
    29ec:	0e 94 64 16 	call	0x2cc8	; 0x2cc8 <fputc>
    29f0:	3a 94       	dec	r3
    29f2:	f6 cf       	rjmp	.-20     	; 0x29e0 <vfprintf+0x37c>
    29f4:	f7 01       	movw	r30, r14
    29f6:	86 81       	ldd	r24, Z+6	; 0x06
    29f8:	97 81       	ldd	r25, Z+7	; 0x07
    29fa:	02 c0       	rjmp	.+4      	; 0x2a00 <vfprintf+0x39c>
    29fc:	8f ef       	ldi	r24, 0xFF	; 255
    29fe:	9f ef       	ldi	r25, 0xFF	; 255
    2a00:	2c 96       	adiw	r28, 0x0c	; 12
    2a02:	e2 e1       	ldi	r30, 0x12	; 18
    2a04:	0c 94 10 17 	jmp	0x2e20	; 0x2e20 <__epilogue_restores__>

00002a08 <calloc>:
    2a08:	0f 93       	push	r16
    2a0a:	1f 93       	push	r17
    2a0c:	cf 93       	push	r28
    2a0e:	df 93       	push	r29
    2a10:	86 9f       	mul	r24, r22
    2a12:	80 01       	movw	r16, r0
    2a14:	87 9f       	mul	r24, r23
    2a16:	10 0d       	add	r17, r0
    2a18:	96 9f       	mul	r25, r22
    2a1a:	10 0d       	add	r17, r0
    2a1c:	11 24       	eor	r1, r1
    2a1e:	c8 01       	movw	r24, r16
    2a20:	0e 94 20 15 	call	0x2a40	; 0x2a40 <malloc>
    2a24:	ec 01       	movw	r28, r24
    2a26:	00 97       	sbiw	r24, 0x00	; 0
    2a28:	29 f0       	breq	.+10     	; 0x2a34 <calloc+0x2c>
    2a2a:	a8 01       	movw	r20, r16
    2a2c:	60 e0       	ldi	r22, 0x00	; 0
    2a2e:	70 e0       	ldi	r23, 0x00	; 0
    2a30:	0e 94 52 16 	call	0x2ca4	; 0x2ca4 <memset>
    2a34:	ce 01       	movw	r24, r28
    2a36:	df 91       	pop	r29
    2a38:	cf 91       	pop	r28
    2a3a:	1f 91       	pop	r17
    2a3c:	0f 91       	pop	r16
    2a3e:	08 95       	ret

00002a40 <malloc>:
    2a40:	cf 93       	push	r28
    2a42:	df 93       	push	r29
    2a44:	82 30       	cpi	r24, 0x02	; 2
    2a46:	91 05       	cpc	r25, r1
    2a48:	10 f4       	brcc	.+4      	; 0x2a4e <malloc+0xe>
    2a4a:	82 e0       	ldi	r24, 0x02	; 2
    2a4c:	90 e0       	ldi	r25, 0x00	; 0
    2a4e:	e0 91 62 02 	lds	r30, 0x0262
    2a52:	f0 91 63 02 	lds	r31, 0x0263
    2a56:	20 e0       	ldi	r18, 0x00	; 0
    2a58:	30 e0       	ldi	r19, 0x00	; 0
    2a5a:	a0 e0       	ldi	r26, 0x00	; 0
    2a5c:	b0 e0       	ldi	r27, 0x00	; 0
    2a5e:	30 97       	sbiw	r30, 0x00	; 0
    2a60:	39 f1       	breq	.+78     	; 0x2ab0 <malloc+0x70>
    2a62:	40 81       	ld	r20, Z
    2a64:	51 81       	ldd	r21, Z+1	; 0x01
    2a66:	48 17       	cp	r20, r24
    2a68:	59 07       	cpc	r21, r25
    2a6a:	b8 f0       	brcs	.+46     	; 0x2a9a <malloc+0x5a>
    2a6c:	48 17       	cp	r20, r24
    2a6e:	59 07       	cpc	r21, r25
    2a70:	71 f4       	brne	.+28     	; 0x2a8e <malloc+0x4e>
    2a72:	82 81       	ldd	r24, Z+2	; 0x02
    2a74:	93 81       	ldd	r25, Z+3	; 0x03
    2a76:	10 97       	sbiw	r26, 0x00	; 0
    2a78:	29 f0       	breq	.+10     	; 0x2a84 <malloc+0x44>
    2a7a:	13 96       	adiw	r26, 0x03	; 3
    2a7c:	9c 93       	st	X, r25
    2a7e:	8e 93       	st	-X, r24
    2a80:	12 97       	sbiw	r26, 0x02	; 2
    2a82:	2c c0       	rjmp	.+88     	; 0x2adc <malloc+0x9c>
    2a84:	90 93 63 02 	sts	0x0263, r25
    2a88:	80 93 62 02 	sts	0x0262, r24
    2a8c:	27 c0       	rjmp	.+78     	; 0x2adc <malloc+0x9c>
    2a8e:	21 15       	cp	r18, r1
    2a90:	31 05       	cpc	r19, r1
    2a92:	31 f0       	breq	.+12     	; 0x2aa0 <malloc+0x60>
    2a94:	42 17       	cp	r20, r18
    2a96:	53 07       	cpc	r21, r19
    2a98:	18 f0       	brcs	.+6      	; 0x2aa0 <malloc+0x60>
    2a9a:	a9 01       	movw	r20, r18
    2a9c:	db 01       	movw	r26, r22
    2a9e:	01 c0       	rjmp	.+2      	; 0x2aa2 <malloc+0x62>
    2aa0:	ef 01       	movw	r28, r30
    2aa2:	9a 01       	movw	r18, r20
    2aa4:	bd 01       	movw	r22, r26
    2aa6:	df 01       	movw	r26, r30
    2aa8:	02 80       	ldd	r0, Z+2	; 0x02
    2aaa:	f3 81       	ldd	r31, Z+3	; 0x03
    2aac:	e0 2d       	mov	r30, r0
    2aae:	d7 cf       	rjmp	.-82     	; 0x2a5e <malloc+0x1e>
    2ab0:	21 15       	cp	r18, r1
    2ab2:	31 05       	cpc	r19, r1
    2ab4:	f9 f0       	breq	.+62     	; 0x2af4 <malloc+0xb4>
    2ab6:	28 1b       	sub	r18, r24
    2ab8:	39 0b       	sbc	r19, r25
    2aba:	24 30       	cpi	r18, 0x04	; 4
    2abc:	31 05       	cpc	r19, r1
    2abe:	80 f4       	brcc	.+32     	; 0x2ae0 <malloc+0xa0>
    2ac0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ac2:	9b 81       	ldd	r25, Y+3	; 0x03
    2ac4:	61 15       	cp	r22, r1
    2ac6:	71 05       	cpc	r23, r1
    2ac8:	21 f0       	breq	.+8      	; 0x2ad2 <malloc+0x92>
    2aca:	fb 01       	movw	r30, r22
    2acc:	93 83       	std	Z+3, r25	; 0x03
    2ace:	82 83       	std	Z+2, r24	; 0x02
    2ad0:	04 c0       	rjmp	.+8      	; 0x2ada <malloc+0x9a>
    2ad2:	90 93 63 02 	sts	0x0263, r25
    2ad6:	80 93 62 02 	sts	0x0262, r24
    2ada:	fe 01       	movw	r30, r28
    2adc:	32 96       	adiw	r30, 0x02	; 2
    2ade:	44 c0       	rjmp	.+136    	; 0x2b68 <malloc+0x128>
    2ae0:	fe 01       	movw	r30, r28
    2ae2:	e2 0f       	add	r30, r18
    2ae4:	f3 1f       	adc	r31, r19
    2ae6:	81 93       	st	Z+, r24
    2ae8:	91 93       	st	Z+, r25
    2aea:	22 50       	subi	r18, 0x02	; 2
    2aec:	31 09       	sbc	r19, r1
    2aee:	39 83       	std	Y+1, r19	; 0x01
    2af0:	28 83       	st	Y, r18
    2af2:	3a c0       	rjmp	.+116    	; 0x2b68 <malloc+0x128>
    2af4:	20 91 60 02 	lds	r18, 0x0260
    2af8:	30 91 61 02 	lds	r19, 0x0261
    2afc:	23 2b       	or	r18, r19
    2afe:	41 f4       	brne	.+16     	; 0x2b10 <malloc+0xd0>
    2b00:	20 91 02 01 	lds	r18, 0x0102
    2b04:	30 91 03 01 	lds	r19, 0x0103
    2b08:	30 93 61 02 	sts	0x0261, r19
    2b0c:	20 93 60 02 	sts	0x0260, r18
    2b10:	20 91 00 01 	lds	r18, 0x0100
    2b14:	30 91 01 01 	lds	r19, 0x0101
    2b18:	21 15       	cp	r18, r1
    2b1a:	31 05       	cpc	r19, r1
    2b1c:	41 f4       	brne	.+16     	; 0x2b2e <malloc+0xee>
    2b1e:	2d b7       	in	r18, 0x3d	; 61
    2b20:	3e b7       	in	r19, 0x3e	; 62
    2b22:	40 91 04 01 	lds	r20, 0x0104
    2b26:	50 91 05 01 	lds	r21, 0x0105
    2b2a:	24 1b       	sub	r18, r20
    2b2c:	35 0b       	sbc	r19, r21
    2b2e:	e0 91 60 02 	lds	r30, 0x0260
    2b32:	f0 91 61 02 	lds	r31, 0x0261
    2b36:	e2 17       	cp	r30, r18
    2b38:	f3 07       	cpc	r31, r19
    2b3a:	a0 f4       	brcc	.+40     	; 0x2b64 <malloc+0x124>
    2b3c:	2e 1b       	sub	r18, r30
    2b3e:	3f 0b       	sbc	r19, r31
    2b40:	28 17       	cp	r18, r24
    2b42:	39 07       	cpc	r19, r25
    2b44:	78 f0       	brcs	.+30     	; 0x2b64 <malloc+0x124>
    2b46:	ac 01       	movw	r20, r24
    2b48:	4e 5f       	subi	r20, 0xFE	; 254
    2b4a:	5f 4f       	sbci	r21, 0xFF	; 255
    2b4c:	24 17       	cp	r18, r20
    2b4e:	35 07       	cpc	r19, r21
    2b50:	48 f0       	brcs	.+18     	; 0x2b64 <malloc+0x124>
    2b52:	4e 0f       	add	r20, r30
    2b54:	5f 1f       	adc	r21, r31
    2b56:	50 93 61 02 	sts	0x0261, r21
    2b5a:	40 93 60 02 	sts	0x0260, r20
    2b5e:	81 93       	st	Z+, r24
    2b60:	91 93       	st	Z+, r25
    2b62:	02 c0       	rjmp	.+4      	; 0x2b68 <malloc+0x128>
    2b64:	e0 e0       	ldi	r30, 0x00	; 0
    2b66:	f0 e0       	ldi	r31, 0x00	; 0
    2b68:	cf 01       	movw	r24, r30
    2b6a:	df 91       	pop	r29
    2b6c:	cf 91       	pop	r28
    2b6e:	08 95       	ret

00002b70 <free>:
    2b70:	cf 93       	push	r28
    2b72:	df 93       	push	r29
    2b74:	00 97       	sbiw	r24, 0x00	; 0
    2b76:	09 f4       	brne	.+2      	; 0x2b7a <free+0xa>
    2b78:	87 c0       	rjmp	.+270    	; 0x2c88 <free+0x118>
    2b7a:	fc 01       	movw	r30, r24
    2b7c:	32 97       	sbiw	r30, 0x02	; 2
    2b7e:	13 82       	std	Z+3, r1	; 0x03
    2b80:	12 82       	std	Z+2, r1	; 0x02
    2b82:	c0 91 62 02 	lds	r28, 0x0262
    2b86:	d0 91 63 02 	lds	r29, 0x0263
    2b8a:	20 97       	sbiw	r28, 0x00	; 0
    2b8c:	81 f4       	brne	.+32     	; 0x2bae <free+0x3e>
    2b8e:	20 81       	ld	r18, Z
    2b90:	31 81       	ldd	r19, Z+1	; 0x01
    2b92:	28 0f       	add	r18, r24
    2b94:	39 1f       	adc	r19, r25
    2b96:	80 91 60 02 	lds	r24, 0x0260
    2b9a:	90 91 61 02 	lds	r25, 0x0261
    2b9e:	82 17       	cp	r24, r18
    2ba0:	93 07       	cpc	r25, r19
    2ba2:	79 f5       	brne	.+94     	; 0x2c02 <free+0x92>
    2ba4:	f0 93 61 02 	sts	0x0261, r31
    2ba8:	e0 93 60 02 	sts	0x0260, r30
    2bac:	6d c0       	rjmp	.+218    	; 0x2c88 <free+0x118>
    2bae:	de 01       	movw	r26, r28
    2bb0:	20 e0       	ldi	r18, 0x00	; 0
    2bb2:	30 e0       	ldi	r19, 0x00	; 0
    2bb4:	ae 17       	cp	r26, r30
    2bb6:	bf 07       	cpc	r27, r31
    2bb8:	50 f4       	brcc	.+20     	; 0x2bce <free+0x5e>
    2bba:	12 96       	adiw	r26, 0x02	; 2
    2bbc:	4d 91       	ld	r20, X+
    2bbe:	5c 91       	ld	r21, X
    2bc0:	13 97       	sbiw	r26, 0x03	; 3
    2bc2:	9d 01       	movw	r18, r26
    2bc4:	41 15       	cp	r20, r1
    2bc6:	51 05       	cpc	r21, r1
    2bc8:	09 f1       	breq	.+66     	; 0x2c0c <free+0x9c>
    2bca:	da 01       	movw	r26, r20
    2bcc:	f3 cf       	rjmp	.-26     	; 0x2bb4 <free+0x44>
    2bce:	b3 83       	std	Z+3, r27	; 0x03
    2bd0:	a2 83       	std	Z+2, r26	; 0x02
    2bd2:	40 81       	ld	r20, Z
    2bd4:	51 81       	ldd	r21, Z+1	; 0x01
    2bd6:	84 0f       	add	r24, r20
    2bd8:	95 1f       	adc	r25, r21
    2bda:	8a 17       	cp	r24, r26
    2bdc:	9b 07       	cpc	r25, r27
    2bde:	71 f4       	brne	.+28     	; 0x2bfc <free+0x8c>
    2be0:	8d 91       	ld	r24, X+
    2be2:	9c 91       	ld	r25, X
    2be4:	11 97       	sbiw	r26, 0x01	; 1
    2be6:	84 0f       	add	r24, r20
    2be8:	95 1f       	adc	r25, r21
    2bea:	02 96       	adiw	r24, 0x02	; 2
    2bec:	91 83       	std	Z+1, r25	; 0x01
    2bee:	80 83       	st	Z, r24
    2bf0:	12 96       	adiw	r26, 0x02	; 2
    2bf2:	8d 91       	ld	r24, X+
    2bf4:	9c 91       	ld	r25, X
    2bf6:	13 97       	sbiw	r26, 0x03	; 3
    2bf8:	93 83       	std	Z+3, r25	; 0x03
    2bfa:	82 83       	std	Z+2, r24	; 0x02
    2bfc:	21 15       	cp	r18, r1
    2bfe:	31 05       	cpc	r19, r1
    2c00:	29 f4       	brne	.+10     	; 0x2c0c <free+0x9c>
    2c02:	f0 93 63 02 	sts	0x0263, r31
    2c06:	e0 93 62 02 	sts	0x0262, r30
    2c0a:	3e c0       	rjmp	.+124    	; 0x2c88 <free+0x118>
    2c0c:	d9 01       	movw	r26, r18
    2c0e:	13 96       	adiw	r26, 0x03	; 3
    2c10:	fc 93       	st	X, r31
    2c12:	ee 93       	st	-X, r30
    2c14:	12 97       	sbiw	r26, 0x02	; 2
    2c16:	4d 91       	ld	r20, X+
    2c18:	5d 91       	ld	r21, X+
    2c1a:	a4 0f       	add	r26, r20
    2c1c:	b5 1f       	adc	r27, r21
    2c1e:	ea 17       	cp	r30, r26
    2c20:	fb 07       	cpc	r31, r27
    2c22:	79 f4       	brne	.+30     	; 0x2c42 <free+0xd2>
    2c24:	80 81       	ld	r24, Z
    2c26:	91 81       	ldd	r25, Z+1	; 0x01
    2c28:	84 0f       	add	r24, r20
    2c2a:	95 1f       	adc	r25, r21
    2c2c:	02 96       	adiw	r24, 0x02	; 2
    2c2e:	d9 01       	movw	r26, r18
    2c30:	11 96       	adiw	r26, 0x01	; 1
    2c32:	9c 93       	st	X, r25
    2c34:	8e 93       	st	-X, r24
    2c36:	82 81       	ldd	r24, Z+2	; 0x02
    2c38:	93 81       	ldd	r25, Z+3	; 0x03
    2c3a:	13 96       	adiw	r26, 0x03	; 3
    2c3c:	9c 93       	st	X, r25
    2c3e:	8e 93       	st	-X, r24
    2c40:	12 97       	sbiw	r26, 0x02	; 2
    2c42:	e0 e0       	ldi	r30, 0x00	; 0
    2c44:	f0 e0       	ldi	r31, 0x00	; 0
    2c46:	8a 81       	ldd	r24, Y+2	; 0x02
    2c48:	9b 81       	ldd	r25, Y+3	; 0x03
    2c4a:	00 97       	sbiw	r24, 0x00	; 0
    2c4c:	19 f0       	breq	.+6      	; 0x2c54 <free+0xe4>
    2c4e:	fe 01       	movw	r30, r28
    2c50:	ec 01       	movw	r28, r24
    2c52:	f9 cf       	rjmp	.-14     	; 0x2c46 <free+0xd6>
    2c54:	ce 01       	movw	r24, r28
    2c56:	02 96       	adiw	r24, 0x02	; 2
    2c58:	28 81       	ld	r18, Y
    2c5a:	39 81       	ldd	r19, Y+1	; 0x01
    2c5c:	82 0f       	add	r24, r18
    2c5e:	93 1f       	adc	r25, r19
    2c60:	20 91 60 02 	lds	r18, 0x0260
    2c64:	30 91 61 02 	lds	r19, 0x0261
    2c68:	28 17       	cp	r18, r24
    2c6a:	39 07       	cpc	r19, r25
    2c6c:	69 f4       	brne	.+26     	; 0x2c88 <free+0x118>
    2c6e:	30 97       	sbiw	r30, 0x00	; 0
    2c70:	29 f4       	brne	.+10     	; 0x2c7c <free+0x10c>
    2c72:	10 92 63 02 	sts	0x0263, r1
    2c76:	10 92 62 02 	sts	0x0262, r1
    2c7a:	02 c0       	rjmp	.+4      	; 0x2c80 <free+0x110>
    2c7c:	13 82       	std	Z+3, r1	; 0x03
    2c7e:	12 82       	std	Z+2, r1	; 0x02
    2c80:	d0 93 61 02 	sts	0x0261, r29
    2c84:	c0 93 60 02 	sts	0x0260, r28
    2c88:	df 91       	pop	r29
    2c8a:	cf 91       	pop	r28
    2c8c:	08 95       	ret

00002c8e <strnlen_P>:
    2c8e:	fc 01       	movw	r30, r24
    2c90:	05 90       	lpm	r0, Z+
    2c92:	61 50       	subi	r22, 0x01	; 1
    2c94:	70 40       	sbci	r23, 0x00	; 0
    2c96:	01 10       	cpse	r0, r1
    2c98:	d8 f7       	brcc	.-10     	; 0x2c90 <strnlen_P+0x2>
    2c9a:	80 95       	com	r24
    2c9c:	90 95       	com	r25
    2c9e:	8e 0f       	add	r24, r30
    2ca0:	9f 1f       	adc	r25, r31
    2ca2:	08 95       	ret

00002ca4 <memset>:
    2ca4:	dc 01       	movw	r26, r24
    2ca6:	01 c0       	rjmp	.+2      	; 0x2caa <memset+0x6>
    2ca8:	6d 93       	st	X+, r22
    2caa:	41 50       	subi	r20, 0x01	; 1
    2cac:	50 40       	sbci	r21, 0x00	; 0
    2cae:	e0 f7       	brcc	.-8      	; 0x2ca8 <memset+0x4>
    2cb0:	08 95       	ret

00002cb2 <strnlen>:
    2cb2:	fc 01       	movw	r30, r24
    2cb4:	61 50       	subi	r22, 0x01	; 1
    2cb6:	70 40       	sbci	r23, 0x00	; 0
    2cb8:	01 90       	ld	r0, Z+
    2cba:	01 10       	cpse	r0, r1
    2cbc:	d8 f7       	brcc	.-10     	; 0x2cb4 <strnlen+0x2>
    2cbe:	80 95       	com	r24
    2cc0:	90 95       	com	r25
    2cc2:	8e 0f       	add	r24, r30
    2cc4:	9f 1f       	adc	r25, r31
    2cc6:	08 95       	ret

00002cc8 <fputc>:
    2cc8:	0f 93       	push	r16
    2cca:	1f 93       	push	r17
    2ccc:	cf 93       	push	r28
    2cce:	df 93       	push	r29
    2cd0:	18 2f       	mov	r17, r24
    2cd2:	09 2f       	mov	r16, r25
    2cd4:	eb 01       	movw	r28, r22
    2cd6:	8b 81       	ldd	r24, Y+3	; 0x03
    2cd8:	81 fd       	sbrc	r24, 1
    2cda:	03 c0       	rjmp	.+6      	; 0x2ce2 <fputc+0x1a>
    2cdc:	8f ef       	ldi	r24, 0xFF	; 255
    2cde:	9f ef       	ldi	r25, 0xFF	; 255
    2ce0:	20 c0       	rjmp	.+64     	; 0x2d22 <fputc+0x5a>
    2ce2:	82 ff       	sbrs	r24, 2
    2ce4:	10 c0       	rjmp	.+32     	; 0x2d06 <fputc+0x3e>
    2ce6:	4e 81       	ldd	r20, Y+6	; 0x06
    2ce8:	5f 81       	ldd	r21, Y+7	; 0x07
    2cea:	2c 81       	ldd	r18, Y+4	; 0x04
    2cec:	3d 81       	ldd	r19, Y+5	; 0x05
    2cee:	42 17       	cp	r20, r18
    2cf0:	53 07       	cpc	r21, r19
    2cf2:	7c f4       	brge	.+30     	; 0x2d12 <fputc+0x4a>
    2cf4:	e8 81       	ld	r30, Y
    2cf6:	f9 81       	ldd	r31, Y+1	; 0x01
    2cf8:	9f 01       	movw	r18, r30
    2cfa:	2f 5f       	subi	r18, 0xFF	; 255
    2cfc:	3f 4f       	sbci	r19, 0xFF	; 255
    2cfe:	39 83       	std	Y+1, r19	; 0x01
    2d00:	28 83       	st	Y, r18
    2d02:	10 83       	st	Z, r17
    2d04:	06 c0       	rjmp	.+12     	; 0x2d12 <fputc+0x4a>
    2d06:	e8 85       	ldd	r30, Y+8	; 0x08
    2d08:	f9 85       	ldd	r31, Y+9	; 0x09
    2d0a:	81 2f       	mov	r24, r17
    2d0c:	09 95       	icall
    2d0e:	89 2b       	or	r24, r25
    2d10:	29 f7       	brne	.-54     	; 0x2cdc <fputc+0x14>
    2d12:	2e 81       	ldd	r18, Y+6	; 0x06
    2d14:	3f 81       	ldd	r19, Y+7	; 0x07
    2d16:	2f 5f       	subi	r18, 0xFF	; 255
    2d18:	3f 4f       	sbci	r19, 0xFF	; 255
    2d1a:	3f 83       	std	Y+7, r19	; 0x07
    2d1c:	2e 83       	std	Y+6, r18	; 0x06
    2d1e:	81 2f       	mov	r24, r17
    2d20:	90 2f       	mov	r25, r16
    2d22:	df 91       	pop	r29
    2d24:	cf 91       	pop	r28
    2d26:	1f 91       	pop	r17
    2d28:	0f 91       	pop	r16
    2d2a:	08 95       	ret

00002d2c <__ultoa_invert>:
    2d2c:	fa 01       	movw	r30, r20
    2d2e:	aa 27       	eor	r26, r26
    2d30:	28 30       	cpi	r18, 0x08	; 8
    2d32:	51 f1       	breq	.+84     	; 0x2d88 <__ultoa_invert+0x5c>
    2d34:	20 31       	cpi	r18, 0x10	; 16
    2d36:	81 f1       	breq	.+96     	; 0x2d98 <__ultoa_invert+0x6c>
    2d38:	e8 94       	clt
    2d3a:	6f 93       	push	r22
    2d3c:	6e 7f       	andi	r22, 0xFE	; 254
    2d3e:	6e 5f       	subi	r22, 0xFE	; 254
    2d40:	7f 4f       	sbci	r23, 0xFF	; 255
    2d42:	8f 4f       	sbci	r24, 0xFF	; 255
    2d44:	9f 4f       	sbci	r25, 0xFF	; 255
    2d46:	af 4f       	sbci	r26, 0xFF	; 255
    2d48:	b1 e0       	ldi	r27, 0x01	; 1
    2d4a:	3e d0       	rcall	.+124    	; 0x2dc8 <__ultoa_invert+0x9c>
    2d4c:	b4 e0       	ldi	r27, 0x04	; 4
    2d4e:	3c d0       	rcall	.+120    	; 0x2dc8 <__ultoa_invert+0x9c>
    2d50:	67 0f       	add	r22, r23
    2d52:	78 1f       	adc	r23, r24
    2d54:	89 1f       	adc	r24, r25
    2d56:	9a 1f       	adc	r25, r26
    2d58:	a1 1d       	adc	r26, r1
    2d5a:	68 0f       	add	r22, r24
    2d5c:	79 1f       	adc	r23, r25
    2d5e:	8a 1f       	adc	r24, r26
    2d60:	91 1d       	adc	r25, r1
    2d62:	a1 1d       	adc	r26, r1
    2d64:	6a 0f       	add	r22, r26
    2d66:	71 1d       	adc	r23, r1
    2d68:	81 1d       	adc	r24, r1
    2d6a:	91 1d       	adc	r25, r1
    2d6c:	a1 1d       	adc	r26, r1
    2d6e:	20 d0       	rcall	.+64     	; 0x2db0 <__ultoa_invert+0x84>
    2d70:	09 f4       	brne	.+2      	; 0x2d74 <__ultoa_invert+0x48>
    2d72:	68 94       	set
    2d74:	3f 91       	pop	r19
    2d76:	2a e0       	ldi	r18, 0x0A	; 10
    2d78:	26 9f       	mul	r18, r22
    2d7a:	11 24       	eor	r1, r1
    2d7c:	30 19       	sub	r19, r0
    2d7e:	30 5d       	subi	r19, 0xD0	; 208
    2d80:	31 93       	st	Z+, r19
    2d82:	de f6       	brtc	.-74     	; 0x2d3a <__ultoa_invert+0xe>
    2d84:	cf 01       	movw	r24, r30
    2d86:	08 95       	ret
    2d88:	46 2f       	mov	r20, r22
    2d8a:	47 70       	andi	r20, 0x07	; 7
    2d8c:	40 5d       	subi	r20, 0xD0	; 208
    2d8e:	41 93       	st	Z+, r20
    2d90:	b3 e0       	ldi	r27, 0x03	; 3
    2d92:	0f d0       	rcall	.+30     	; 0x2db2 <__ultoa_invert+0x86>
    2d94:	c9 f7       	brne	.-14     	; 0x2d88 <__ultoa_invert+0x5c>
    2d96:	f6 cf       	rjmp	.-20     	; 0x2d84 <__ultoa_invert+0x58>
    2d98:	46 2f       	mov	r20, r22
    2d9a:	4f 70       	andi	r20, 0x0F	; 15
    2d9c:	40 5d       	subi	r20, 0xD0	; 208
    2d9e:	4a 33       	cpi	r20, 0x3A	; 58
    2da0:	18 f0       	brcs	.+6      	; 0x2da8 <__ultoa_invert+0x7c>
    2da2:	49 5d       	subi	r20, 0xD9	; 217
    2da4:	31 fd       	sbrc	r19, 1
    2da6:	40 52       	subi	r20, 0x20	; 32
    2da8:	41 93       	st	Z+, r20
    2daa:	02 d0       	rcall	.+4      	; 0x2db0 <__ultoa_invert+0x84>
    2dac:	a9 f7       	brne	.-22     	; 0x2d98 <__ultoa_invert+0x6c>
    2dae:	ea cf       	rjmp	.-44     	; 0x2d84 <__ultoa_invert+0x58>
    2db0:	b4 e0       	ldi	r27, 0x04	; 4
    2db2:	a6 95       	lsr	r26
    2db4:	97 95       	ror	r25
    2db6:	87 95       	ror	r24
    2db8:	77 95       	ror	r23
    2dba:	67 95       	ror	r22
    2dbc:	ba 95       	dec	r27
    2dbe:	c9 f7       	brne	.-14     	; 0x2db2 <__ultoa_invert+0x86>
    2dc0:	00 97       	sbiw	r24, 0x00	; 0
    2dc2:	61 05       	cpc	r22, r1
    2dc4:	71 05       	cpc	r23, r1
    2dc6:	08 95       	ret
    2dc8:	9b 01       	movw	r18, r22
    2dca:	ac 01       	movw	r20, r24
    2dcc:	0a 2e       	mov	r0, r26
    2dce:	06 94       	lsr	r0
    2dd0:	57 95       	ror	r21
    2dd2:	47 95       	ror	r20
    2dd4:	37 95       	ror	r19
    2dd6:	27 95       	ror	r18
    2dd8:	ba 95       	dec	r27
    2dda:	c9 f7       	brne	.-14     	; 0x2dce <__ultoa_invert+0xa2>
    2ddc:	62 0f       	add	r22, r18
    2dde:	73 1f       	adc	r23, r19
    2de0:	84 1f       	adc	r24, r20
    2de2:	95 1f       	adc	r25, r21
    2de4:	a0 1d       	adc	r26, r0
    2de6:	08 95       	ret

00002de8 <__prologue_saves__>:
    2de8:	2f 92       	push	r2
    2dea:	3f 92       	push	r3
    2dec:	4f 92       	push	r4
    2dee:	5f 92       	push	r5
    2df0:	6f 92       	push	r6
    2df2:	7f 92       	push	r7
    2df4:	8f 92       	push	r8
    2df6:	9f 92       	push	r9
    2df8:	af 92       	push	r10
    2dfa:	bf 92       	push	r11
    2dfc:	cf 92       	push	r12
    2dfe:	df 92       	push	r13
    2e00:	ef 92       	push	r14
    2e02:	ff 92       	push	r15
    2e04:	0f 93       	push	r16
    2e06:	1f 93       	push	r17
    2e08:	cf 93       	push	r28
    2e0a:	df 93       	push	r29
    2e0c:	cd b7       	in	r28, 0x3d	; 61
    2e0e:	de b7       	in	r29, 0x3e	; 62
    2e10:	ca 1b       	sub	r28, r26
    2e12:	db 0b       	sbc	r29, r27
    2e14:	0f b6       	in	r0, 0x3f	; 63
    2e16:	f8 94       	cli
    2e18:	de bf       	out	0x3e, r29	; 62
    2e1a:	0f be       	out	0x3f, r0	; 63
    2e1c:	cd bf       	out	0x3d, r28	; 61
    2e1e:	09 94       	ijmp

00002e20 <__epilogue_restores__>:
    2e20:	2a 88       	ldd	r2, Y+18	; 0x12
    2e22:	39 88       	ldd	r3, Y+17	; 0x11
    2e24:	48 88       	ldd	r4, Y+16	; 0x10
    2e26:	5f 84       	ldd	r5, Y+15	; 0x0f
    2e28:	6e 84       	ldd	r6, Y+14	; 0x0e
    2e2a:	7d 84       	ldd	r7, Y+13	; 0x0d
    2e2c:	8c 84       	ldd	r8, Y+12	; 0x0c
    2e2e:	9b 84       	ldd	r9, Y+11	; 0x0b
    2e30:	aa 84       	ldd	r10, Y+10	; 0x0a
    2e32:	b9 84       	ldd	r11, Y+9	; 0x09
    2e34:	c8 84       	ldd	r12, Y+8	; 0x08
    2e36:	df 80       	ldd	r13, Y+7	; 0x07
    2e38:	ee 80       	ldd	r14, Y+6	; 0x06
    2e3a:	fd 80       	ldd	r15, Y+5	; 0x05
    2e3c:	0c 81       	ldd	r16, Y+4	; 0x04
    2e3e:	1b 81       	ldd	r17, Y+3	; 0x03
    2e40:	aa 81       	ldd	r26, Y+2	; 0x02
    2e42:	b9 81       	ldd	r27, Y+1	; 0x01
    2e44:	ce 0f       	add	r28, r30
    2e46:	d1 1d       	adc	r29, r1
    2e48:	0f b6       	in	r0, 0x3f	; 63
    2e4a:	f8 94       	cli
    2e4c:	de bf       	out	0x3e, r29	; 62
    2e4e:	0f be       	out	0x3f, r0	; 63
    2e50:	cd bf       	out	0x3d, r28	; 61
    2e52:	ed 01       	movw	r28, r26
    2e54:	08 95       	ret

00002e56 <_exit>:
    2e56:	f8 94       	cli

00002e58 <__stop_program>:
    2e58:	ff cf       	rjmp	.-2      	; 0x2e58 <__stop_program>
