
Node_1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000fc  00800100  0000338e  00003422  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000338e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000165  008001fc  008001fc  0000351e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000351e  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000002e0  00000000  00000000  0000357a  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00003428  00000000  00000000  0000385a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000121a  00000000  00000000  00006c82  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000110b  00000000  00000000  00007e9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000728  00000000  00000000  00008fa8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000993  00000000  00000000  000096d0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000018ed  00000000  00000000  0000a063  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000318  00000000  00000000  0000b950  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 0b 	jmp	0x1768	; 0x1768 <__ctors_end>
       4:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
       8:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
       c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      10:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      14:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      18:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      1c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      20:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      24:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      28:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      2c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      30:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      34:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      38:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      3c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      40:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      44:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      48:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      4c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      50:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      54:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      58:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      5c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      60:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      64:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      68:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>
      6c:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__bad_interrupt>

00000070 <__trampolines_end>:
      70:	00 00       	nop
      72:	08 00       	.word	0x0008	; ????
      74:	01 01       	movw	r0, r2
      76:	00 00       	nop
      78:	00 00       	nop
      7a:	00 04       	cpc	r0, r0
      7c:	06 00       	.word	0x0006	; ????
      7e:	50 c0       	rjmp	.+160    	; 0x120 <__trampolines_end+0xb0>
      80:	c6 c6       	rjmp	.+3468   	; 0xe0e <tobias+0x19e>
      82:	52 52       	subi	r21, 0x22	; 34
      84:	02 02       	muls	r16, r18
      86:	01 01       	movw	r0, r2
      88:	30 30       	cpi	r19, 0x00	; 0
      8a:	30 00       	.word	0x0030	; ????
	...
      94:	00 e0       	ldi	r16, 0x00	; 0
      96:	f0 f0       	brcs	.+60     	; 0xd4 <__trampolines_end+0x64>
      98:	e0 e0       	ldi	r30, 0x00	; 0
      9a:	e0 c0       	rjmp	.+448    	; 0x25c <__trampolines_end+0x1ec>
      9c:	c0 80       	ld	r12, Z
      9e:	80 80       	ld	r8, Z
	...
      e8:	e0 f0       	brcs	.+56     	; 0x122 <__trampolines_end+0xb2>
      ea:	f0 f0       	brcs	.+60     	; 0x128 <__trampolines_end+0xb8>
      ec:	e4 e4       	ldi	r30, 0x44	; 68
      ee:	e4 f4       	brge	.+56     	; 0x128 <__trampolines_end+0xb8>
      f0:	10 00       	.word	0x0010	; ????
      f2:	00 00       	nop
      f4:	00 00       	nop
      f6:	00 04       	cpc	r0, r0
      f8:	04 00       	.word	0x0004	; ????
      fa:	00 03       	mulsu	r16, r16
      fc:	63 e3       	ldi	r22, 0x33	; 51
      fe:	e3 63       	ori	r30, 0x33	; 51
     100:	02 0b       	sbc	r16, r18
     102:	6b 63       	ori	r22, 0x3B	; 59
     104:	e0 fc       	sbrc	r14, 0
     106:	fe ff       	.word	0xfffe	; ????
     108:	e7 e3       	ldi	r30, 0x37	; 55
     10a:	f3 f2       	brvs	.-68     	; 0xc8 <__trampolines_end+0x58>
     10c:	fc f0       	brlt	.+62     	; 0x14c <__trampolines_end+0xdc>
     10e:	e0 80       	ld	r14, Z
     110:	00 00       	nop
     112:	00 00       	nop
     114:	c0 ff       	sbrs	r28, 0
     116:	ff ff       	.word	0xffff	; ????
     118:	ff ff       	.word	0xffff	; ????
     11a:	ff ff       	.word	0xffff	; ????
     11c:	ff ff       	.word	0xffff	; ????
     11e:	ff ff       	.word	0xffff	; ????
     120:	ff fe       	.word	0xfeff	; ????
     122:	ee c3       	rjmp	.+2012   	; 0x900 <brage+0x90>
     124:	c1 c0       	rjmp	.+386    	; 0x2a8 <__trampolines_end+0x238>
     126:	e0 e0       	ldi	r30, 0x00	; 0
     128:	e0 e0       	ldi	r30, 0x00	; 0
     12a:	60 40       	sbci	r22, 0x00	; 0
     12c:	40 00       	.word	0x0040	; ????
	...
     136:	80 c0       	rjmp	.+256    	; 0x238 <__trampolines_end+0x1c8>
     138:	80 c0       	rjmp	.+256    	; 0x23a <__trampolines_end+0x1ca>
     13a:	e0 f8       	bld	r14, 0
     13c:	f8 f0       	brcs	.+62     	; 0x17c <__trampolines_end+0x10c>
	...
     162:	c0 c0       	rjmp	.+384    	; 0x2e4 <__trampolines_end+0x274>
     164:	e0 f0       	brcs	.+56     	; 0x19e <__trampolines_end+0x12e>
     166:	f8 fc       	.word	0xfcf8	; ????
     168:	ff ff       	.word	0xffff	; ????
     16a:	ff ff       	.word	0xffff	; ????
     16c:	ff ff       	.word	0xffff	; ????
     16e:	ff ff       	.word	0xffff	; ????
     170:	00 0c       	add	r0, r0
     172:	1c 78       	andi	r17, 0x8C	; 140
     174:	1c 1c       	adc	r1, r12
     176:	2c 0c       	add	r2, r12
     178:	0c 04       	cpc	r0, r12
     17a:	00 00       	nop
     17c:	00 01       	movw	r0, r0
     17e:	43 41       	sbci	r20, 0x13	; 19
     180:	1c 1c       	adc	r1, r12
     182:	0c 08       	sbc	r0, r12
     184:	7f ff       	.word	0xff7f	; ????
     186:	ff ff       	.word	0xffff	; ????
     188:	ff ff       	.word	0xffff	; ????
     18a:	ff ff       	.word	0xffff	; ????
     18c:	c3 e3       	ldi	r28, 0x33	; 51
     18e:	f1 f3       	breq	.-4      	; 0x18c <__trampolines_end+0x11c>
     190:	ff fe       	.word	0xfeff	; ????
     192:	fc fc       	.word	0xfcfc	; ????
     194:	ff ff       	.word	0xffff	; ????
     196:	ff ff       	.word	0xffff	; ????
     198:	ff ff       	.word	0xffff	; ????
     19a:	ff ff       	.word	0xffff	; ????
     19c:	ff ff       	.word	0xffff	; ????
     19e:	ff ff       	.word	0xffff	; ????
     1a0:	ff ff       	.word	0xffff	; ????
     1a2:	ff ff       	.word	0xffff	; ????
     1a4:	ff ff       	.word	0xffff	; ????
     1a6:	ff ff       	.word	0xffff	; ????
     1a8:	ff fe       	.word	0xfeff	; ????
     1aa:	fc fc       	.word	0xfcfc	; ????
     1ac:	fc fc       	.word	0xfcfc	; ????
     1ae:	fc fc       	.word	0xfcfc	; ????
     1b0:	fc fc       	.word	0xfcfc	; ????
     1b2:	fc fe       	.word	0xfefc	; ????
     1b4:	fe fe       	.word	0xfefe	; ????
     1b6:	ff ff       	.word	0xffff	; ????
     1b8:	ff ff       	.word	0xffff	; ????
     1ba:	ff ff       	.word	0xffff	; ????
     1bc:	7f 07       	cpc	r23, r31
	...
     1c6:	c0 c0       	rjmp	.+384    	; 0x348 <__trampolines_end+0x2d8>
     1c8:	c0 80       	ld	r12, Z
     1ca:	80 80       	ld	r8, Z
	...
     1e0:	00 08       	sbc	r0, r0
     1e2:	7f ff       	.word	0xff7f	; ????
     1e4:	ff ff       	.word	0xffff	; ????
     1e6:	ff ff       	.word	0xffff	; ????
     1e8:	ff ff       	.word	0xffff	; ????
     1ea:	ff ff       	.word	0xffff	; ????
     1ec:	ff ff       	.word	0xffff	; ????
     1ee:	ff 7f       	andi	r31, 0xFF	; 255
     1f0:	00 00       	nop
     1f2:	30 31       	cpi	r19, 0x10	; 16
     1f4:	00 00       	nop
     1f6:	00 00       	nop
     1f8:	32 02       	muls	r19, r18
     1fa:	00 00       	nop
     1fc:	00 08       	sbc	r0, r0
     1fe:	00 00       	nop
     200:	00 00       	nop
     202:	00 80       	ld	r0, Z
     204:	80 c7       	rjmp	.+3840   	; 0x1106 <pig+0x96>
     206:	df ff       	.word	0xffdf	; ????
     208:	ff ff       	.word	0xffff	; ????
     20a:	ff ff       	.word	0xffff	; ????
     20c:	ff ff       	.word	0xffff	; ????
     20e:	ff ff       	.word	0xffff	; ????
     210:	ff ff       	.word	0xffff	; ????
     212:	ff ff       	.word	0xffff	; ????
     214:	ff ff       	.word	0xffff	; ????
     216:	ff ff       	.word	0xffff	; ????
     218:	ff ff       	.word	0xffff	; ????
     21a:	ff ff       	.word	0xffff	; ????
     21c:	ff ff       	.word	0xffff	; ????
     21e:	ff ff       	.word	0xffff	; ????
     220:	ff ff       	.word	0xffff	; ????
     222:	ff ff       	.word	0xffff	; ????
     224:	ff 7f       	andi	r31, 0xFF	; 255
     226:	3f 3f       	cpi	r19, 0xFF	; 255
     228:	1f 0f       	add	r17, r31
     22a:	0f 87       	std	Y+15, r16	; 0x0f
     22c:	87 c7       	rjmp	.+3854   	; 0x113c <pig+0xcc>
     22e:	e3 f3       	brvs	.-8      	; 0x228 <__trampolines_end+0x1b8>
     230:	7f 3f       	cpi	r23, 0xFF	; 255
     232:	3f 3f       	cpi	r19, 0xFF	; 255
     234:	3f 3f       	cpi	r19, 0xFF	; 255
     236:	3f 3f       	cpi	r19, 0xFF	; 255
     238:	3f 3f       	cpi	r19, 0xFF	; 255
     23a:	3f 3f       	cpi	r19, 0xFF	; 255
     23c:	3f 1c       	adc	r3, r15
     23e:	00 00       	nop
     240:	00 00       	nop
     242:	00 00       	nop
     244:	00 7e       	andi	r16, 0xE0	; 224
     246:	ff ff       	.word	0xffff	; ????
     248:	ff ff       	.word	0xffff	; ????
     24a:	ff ff       	.word	0xffff	; ????
     24c:	ff ff       	.word	0xffff	; ????
     24e:	ff ff       	.word	0xffff	; ????
     250:	fe fc       	.word	0xfcfe	; ????
     252:	fc 20       	and	r15, r12
	...
     260:	00 00       	nop
     262:	18 1f       	adc	r17, r24
     264:	1f 1f       	adc	r17, r31
     266:	0f 0f       	add	r16, r31
     268:	07 03       	mulsu	r16, r23
     26a:	03 03       	mulsu	r16, r19
     26c:	01 00       	.word	0x0001	; ????
     26e:	00 00       	nop
     270:	00 08       	sbc	r0, r0
     272:	1e 72       	andi	r17, 0x2E	; 46
     274:	32 00       	.word	0x0032	; ????
     276:	0c 5f       	subi	r16, 0xFC	; 252
     278:	ff da       	rcall	.-2562   	; 0xfffff878 <__eeprom_end+0xff7ef878>
     27a:	c0 00       	.word	0x00c0	; ????
     27c:	00 00       	nop
     27e:	00 00       	nop
     280:	b9 ff       	.word	0xffb9	; ????
     282:	bb b9       	out	0x0b, r27	; 11
     284:	bb ff       	.word	0xffbb	; ????
     286:	b9 99       	sbic	0x17, 1	; 23
     288:	bf bf       	out	0x3f, r27	; 63
     28a:	bf bf       	out	0x3f, r27	; 63
     28c:	bf bf       	out	0x3f, r27	; 63
     28e:	9f 9f       	mul	r25, r31
     290:	ff ff       	.word	0xffff	; ????
     292:	f7 ff       	sbrs	r31, 7
     294:	ff ff       	.word	0xffff	; ????
     296:	ff ff       	.word	0xffff	; ????
     298:	ff ff       	.word	0xffff	; ????
     29a:	ff ff       	.word	0xffff	; ????
     29c:	ff fb       	.word	0xfbff	; ????
     29e:	f1 ff       	sbrs	r31, 1
     2a0:	ff ff       	.word	0xffff	; ????
     2a2:	e7 e1       	ldi	r30, 0x17	; 23
     2a4:	f0 f8       	bld	r15, 0
     2a6:	7c 3e       	cpi	r23, 0xEC	; 236
     2a8:	3e 3f       	cpi	r19, 0xFE	; 254
     2aa:	7f 7f       	andi	r23, 0xFF	; 255
     2ac:	7f 7f       	andi	r23, 0xFF	; 255
     2ae:	3f 3f       	cpi	r19, 0xFF	; 255
     2b0:	7f 7e       	andi	r23, 0xEF	; 239
     2b2:	7c 7c       	andi	r23, 0xCC	; 204
     2b4:	7c 78       	andi	r23, 0x8C	; 140
     2b6:	70 e0       	ldi	r23, 0x00	; 0
     2b8:	c0 c0       	rjmp	.+384    	; 0x43a <__trampolines_end+0x3ca>
     2ba:	c0 c0       	rjmp	.+384    	; 0x43c <__trampolines_end+0x3cc>
     2bc:	c0 00       	.word	0x00c0	; ????
	...
     2c6:	30 61       	ori	r19, 0x10	; 16
     2c8:	c3 87       	std	Z+11, r28	; 0x0b
     2ca:	0f 0f       	add	r16, r31
     2cc:	0f 1f       	adc	r16, r31
     2ce:	1f 0f       	add	r17, r31
     2d0:	0f 07       	cpc	r16, r31
	...
     2f2:	00 66       	ori	r16, 0x60	; 96
     2f4:	26 06       	cpc	r2, r22
     2f6:	84 86       	std	Z+12, r8	; 0x0c
     2f8:	c7 c7       	rjmp	.+3982   	; 0x1288 <pig+0x218>
     2fa:	c3 01       	movw	r24, r6
     2fc:	00 00       	nop
     2fe:	00 00       	nop
     300:	33 7f       	andi	r19, 0xF3	; 243
     302:	ff fb       	.word	0xfbff	; ????
     304:	3b ff       	.word	0xff3b	; ????
     306:	ff fb       	.word	0xfbff	; ????
     308:	fb ff       	.word	0xfffb	; ????
     30a:	fb bb       	out	0x1b, r31	; 27
     30c:	ff ff       	.word	0xffff	; ????
     30e:	bb 3b       	cpi	r27, 0xBB	; 187
     310:	ff ff       	.word	0xffff	; ????
     312:	ff ff       	.word	0xffff	; ????
     314:	ff ff       	.word	0xffff	; ????
     316:	ff ff       	.word	0xffff	; ????
     318:	ff ff       	.word	0xffff	; ????
     31a:	9f 1f       	adc	r25, r31
     31c:	3f 7f       	andi	r19, 0xFF	; 255
     31e:	ff ff       	.word	0xffff	; ????
     320:	ff ff       	.word	0xffff	; ????
     322:	ff ff       	.word	0xffff	; ????
     324:	ff ff       	.word	0xffff	; ????
     326:	fe fe       	.word	0xfefe	; ????
     328:	fe fe       	.word	0xfefe	; ????
     32a:	fe fe       	.word	0xfefe	; ????
     32c:	fc fc       	.word	0xfcfc	; ????
     32e:	fc fc       	.word	0xfcfc	; ????
     330:	fc fc       	.word	0xfcfc	; ????
     332:	fc fc       	.word	0xfcfc	; ????
     334:	fc fc       	.word	0xfcfc	; ????
     336:	f8 e8       	ldi	r31, 0x88	; 136
     338:	e0 c0       	rjmp	.+448    	; 0x4fa <credits+0x8a>
     33a:	c0 c0       	rjmp	.+384    	; 0x4bc <credits+0x4c>
     33c:	80 00       	.word	0x0080	; ????
	...
     346:	00 00       	nop
     348:	00 c1       	rjmp	.+512    	; 0x54a <__stack+0x4b>
     34a:	c3 00       	.word	0x00c3	; ????
	...
     370:	00 00       	nop
     372:	20 01       	movw	r4, r0
     374:	01 71       	andi	r16, 0x11	; 17
     376:	f1 f0       	breq	.+60     	; 0x3b4 <__trampolines_end+0x344>
     378:	f0 f0       	brcs	.+60     	; 0x3b6 <__trampolines_end+0x346>
     37a:	f0 70       	andi	r31, 0x00	; 0
     37c:	70 00       	.word	0x0070	; ????
     37e:	e0 e0       	ldi	r30, 0x00	; 0
     380:	a3 87       	std	Z+11, r26	; 0x0b
     382:	87 07       	cpc	r24, r23
     384:	07 07       	cpc	r16, r23
     386:	07 07       	cpc	r16, r23
     388:	07 07       	cpc	r16, r23
     38a:	07 07       	cpc	r16, r23
     38c:	03 07       	cpc	r16, r19
     38e:	c7 f3       	brie	.-16     	; 0x380 <__trampolines_end+0x310>
     390:	ff ff       	.word	0xffff	; ????
     392:	ff ff       	.word	0xffff	; ????
     394:	ff ff       	.word	0xffff	; ????
     396:	ff ff       	.word	0xffff	; ????
     398:	ff fd       	.word	0xfdff	; ????
     39a:	c1 04       	cpc	r12, r1
     39c:	08 00       	.word	0x0008	; ????
     39e:	01 0f       	add	r16, r17
     3a0:	3f 7f       	andi	r19, 0xFF	; 255
     3a2:	ff ff       	.word	0xffff	; ????
     3a4:	ff ff       	.word	0xffff	; ????
     3a6:	ff ff       	.word	0xffff	; ????
     3a8:	ff ff       	.word	0xffff	; ????
     3aa:	ff ff       	.word	0xffff	; ????
     3ac:	ff ff       	.word	0xffff	; ????
     3ae:	ff ff       	.word	0xffff	; ????
     3b0:	ff ff       	.word	0xffff	; ????
     3b2:	ff ff       	.word	0xffff	; ????
     3b4:	ff ff       	.word	0xffff	; ????
     3b6:	ff fd       	.word	0xfdff	; ????
     3b8:	f9 f9       	.word	0xf9f9	; ????
     3ba:	f8 f8       	.word	0xf8f8	; ????
     3bc:	f8 f8       	.word	0xf8f8	; ????
     3be:	f0 e0       	ldi	r31, 0x00	; 0
     3c0:	c0 c0       	rjmp	.+384    	; 0x542 <__stack+0x43>
     3c2:	c0 00       	.word	0x00c0	; ????
	...
     3d0:	00 00       	nop
     3d2:	00 80       	ld	r0, Z
     3d4:	80 00       	.word	0x0080	; ????
     3d6:	80 00       	.word	0x0080	; ????
	...
     3f0:	00 00       	nop
     3f2:	04 07       	cpc	r16, r20
     3f4:	07 83       	std	Z+7, r16	; 0x07
     3f6:	81 81       	ldd	r24, Z+1	; 0x01
     3f8:	83 cb       	rjmp	.-2298   	; 0xfffffb00 <__eeprom_end+0xff7efb00>
     3fa:	cb 03       	fmulsu	r20, r19
     3fc:	0b 08       	sbc	r0, r11
     3fe:	0c 0f       	add	r16, r28
     400:	03 01       	movw	r0, r6
     402:	01 00       	.word	0x0001	; ????
	...
     40c:	78 fe       	.word	0xfe78	; ????
     40e:	ff ff       	.word	0xffff	; ????
     410:	ff ff       	.word	0xffff	; ????
     412:	ff ff       	.word	0xffff	; ????
     414:	ff ff       	.word	0xffff	; ????
     416:	ff ff       	.word	0xffff	; ????
     418:	ff ff       	.word	0xffff	; ????
     41a:	ff ff       	.word	0xffff	; ????
     41c:	fe fc       	.word	0xfcfe	; ????
     41e:	f8 f0       	brcs	.+62     	; 0x45e <__trampolines_end+0x3ee>
     420:	e0 c0       	rjmp	.+448    	; 0x5e2 <__stack+0xe3>
     422:	00 00       	nop
     424:	01 01       	movw	r0, r2
     426:	03 03       	mulsu	r16, r19
     428:	03 03       	mulsu	r16, r19
     42a:	03 07       	cpc	r16, r19
     42c:	07 0f       	add	r16, r23
     42e:	0f 0f       	add	r16, r31
     430:	0f 1f       	adc	r16, r31
     432:	1f 1f       	adc	r17, r31
     434:	1f 1f       	adc	r17, r31
     436:	1f 1f       	adc	r17, r31
     438:	1f 1f       	adc	r17, r31
     43a:	0f 0f       	add	r16, r31
     43c:	07 03       	mulsu	r16, r23
     43e:	03 01       	movw	r0, r6
     440:	01 01       	movw	r0, r2
	...
     44e:	00 00       	nop
     450:	04 00       	.word	0x0004	; ????
     452:	02 07       	cpc	r16, r18
     454:	03 00       	.word	0x0003	; ????
	...
     46a:	00 80       	ld	r0, Z
     46c:	c0 c0       	rjmp	.+384    	; 0x5ee <__stack+0xef>
	...

00000470 <credits>:
     470:	ff ff ff ff ff ff ff ff ff 3f 3f 3f 3f 1f 1f 1f     .........????...
     480:	0f 0f 0f 0f 07 07 07 07 07 07 07 07 07 0f 0f 1f     ................
     490:	1f 3f 3f 7f 7f ff ff ff ff ff ff ff ff ff ff ff     .??.............
     4a0:	ff 7f 7f 3f 3f 1f 1f 1f 1f 1f 1f 3f 3f 7f 7f ff     ...??......??...
     4b0:	ff ff ff ff ff 7f 7f 7f 3f 3f 1f 1f 1f 0f 0f 0f     ........??......
     4c0:	0f 0f 0f 0f 0f 0f 0f 0f 0f 1f 1f 1f 1f 1f 1f 3f     ...............?
     4d0:	3f 3f 3f 3f 3f 1f 1f 1f 0f 0f 07 07 07 07 07 07     ?????...........
     4e0:	0f 0f 1f 3f 7f ff ff ff ff ff ff ff ff ff ff ff     ...?............
     4f0:	ff ff ff ff ff ff ff ff ff ff fe fc f8 f8 f0 f0     ................
     500:	f0 f8 f8 f8 fc fc fc fc fe fe fe fe fe fe fe fe     ................
     510:	fe fc fc f8 f8 f0 f0 e1 e1 c1 c1 81 81 81 81 80     ................
     520:	80 80 80 c0 c0 c0 e0 f0 f0 f0 f8 f8 f8 f8 f8 f0     ................
     530:	f0 e0 c0 c0 c0 c0 c0 c0 c0 e0 e0 60 70 f0 f8 f8     ...........`p...
     540:	f8 f8 fc fc fc fc fc fc fc fc fc fc fc f8 f8 f8     ................
     550:	f8 f8 f8 f0 f0 f0 f0 f0 f0 f8 f8 f8 fc fc fc fe     ................
     560:	fe fe fe fc fc fc fd ff ff ff ff ff ff ff ff ff     ................
     570:	ff ff ff ff ff ff ff 7f 3f 1f 0f 07 c3 e3 e1 f1     ........?.......
     580:	f1 f1 f1 c1 80 80 c3 ff ff ff ff ff ff ff ff ff     ................
     590:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     5a0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     5b0:	ff ff ff ff ff ff ff ff ff ff 00 00 00 ff ff ff     ................
     5c0:	ff ff ff e3 e3 e3 f7 ff ff ff ff ff ff ff ff 0f     ................
     5d0:	07 07 1f ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     5e0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     5f0:	ff ff ff ff 1f 07 01 80 f0 fc fe ff ff ff ff ff     ................
     600:	ff ff ff ff ff ff ff ff ff 03 01 01 07 87 c3 e3     ................
     610:	e1 f1 f1 01 01 03 ff ff ff 3f 0f 07 83 e3 e1 f1     .........?......
     620:	f1 71 71 31 21 03 07 cf ff ff ff ff 7f 1f 0f 87     .qq1!...........
     630:	c3 e3 f1 f1 f1 f1 f1 e1 c3 07 00 00 f8 ff ff ff     ................
     640:	ff ff 03 01 01 03 ff ff ff ff f9 f1 f1 f1 f1 00     ................
     650:	00 00 00 f1 f1 f1 f1 f1 ff ff ff 3f 0f 0f 07 c7     ...........?....
     660:	e7 e3 e3 f3 f1 c1 81 81 cf ff ff ff ff ff ff ff     ................
     670:	ff ff ff ff c0 00 00 1f 3f 7f ff ff ff ff 7f 7f     ........?.......
     680:	3f 3f 1f 0f 0f 9f ff ff ff 00 00 00 ff ff ff ff     ??..............
     690:	ff ff ff fe fe fe ff ff f7 80 00 02 23 71 71 f8     ............#qq.
     6a0:	f8 fc fc fe 7e 7f 3f 1f 1f ff ff ff c0 00 00 1f     ....~.?.........
     6b0:	3f 7f ff ff ff ff ff 7f 3f 00 00 00 3f ff ff ff     ?.......?...?...
     6c0:	ff ff 00 00 00 00 ff ff ff ff ff ff ff ff ff f8     ................
     6d0:	00 00 00 ff ff ff ff ff ff ff 3f 3e 7c 78 f8 f8     ..........?>|x..
     6e0:	f8 f8 f0 f1 61 03 03 0f ff ff ff ff ff ff ff ff     ....a...........
     6f0:	ff ff ff ff ff ff fe fc fc f8 f8 f8 78 38 38 1c     ............x88.
     700:	1c 1c 0e 0f 0f 0f 0f 1f 3f 7c f8 f8 ff ff ff ff     ........?|......
     710:	ff ff ff ff ff ff ff ff ff ff fe fe fc fc f8 f8     ................
     720:	f8 f8 f8 f8 f8 fc fc fe ff ff ff ff ff ff fe fc     ................
     730:	fc f8 f8 f8 f8 f8 f8 f8 fc fc f8 f8 fc ff ff ff     ................
     740:	ff ff fc f8 f8 fc ff ff ff ff ff ff ff ff ff fd     ................
     750:	f8 f8 fc ff ff ff ff ff ff ff fe fc fc f8 f8 f8     ................
     760:	f8 f8 f8 f8 fc fc fe ff ff ff ff ff ff ff ff ff     ................
     770:	ff ff ff ff ff ff 3f 0f 07 03 01 00 00 00 00 80     ......?.........
     780:	c0 e0 f0 f0 f8 f8 fc fc fc fc f8 f1 e3 e7 c7 8f     ................
     790:	0f 1f 3f 7f 7f ff ff ff ff ff ff ff ff ff ff 7f     ..?.............
     7a0:	3f 3f 1f 1f 1f 0f 0f 0f 0f 0f 0f 0f 0f 0f 0f 0f     ??..............
     7b0:	1f 1f 3f 3f 3f 3f 3f 3f 1f 1f 0f 0f 0f 07 07 03     ..??????........
     7c0:	03 03 03 03 03 03 07 07 0f 1f 1f 1f 3f 3f 3f 3f     ............????
     7d0:	3f 3f 3f 3f 1f 1f 1f 1f 0f 0f 07 07 03 03 03 03     ????............
     7e0:	03 03 03 07 0f 1f 3f 7f ff ff ff ff ff ff ff ff     ......?.........
     7f0:	ff ff ff ff ff ff fe fc f8 f0 f0 e0 f8 fe ff ff     ................
     800:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     810:	ff fe fe fc f8 f0 e0 e1 c1 c1 81 81 81 80 80 80     ................
     820:	80 c0 c0 e0 e0 f0 f0 f8 f8 fc fc fc fc fc fc fc     ................
     830:	fc fc fc f8 f8 f8 f0 f0 f0 f0 f0 f0 f0 f8 fc fc     ................
     840:	fc fe fe ff ff ff ff ff ff fe fe fe fc f8 f8 f8     ................
     850:	f0 f0 f0 f0 f0 f0 f0 f0 f8 f8 f8 f8 fc fc fe fe     ................
     860:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

00000870 <brage>:
     870:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     880:	ff ff ff ff ff ff ff ff ff ff ff ff 3f 1f 1f 0f     ............?...
     890:	1f 9f 5f 5f 7f 3f 3f bf bf 7f 7f 7f 3f 3f bf bf     ..__.??.....??..
     8a0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     8b0:	fc fc fc f8 f8 f0 f0 f0 fc fc f8 f9 f9 fb f2 f6     ................
     8c0:	f4 f0 e0 c0 c0 c0 c0 c0 80 00 00 00 00 00 01 03     ................
     8d0:	07 1f 7f ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     8e0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     8f0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     900:	ff ff ff ff ff ff ff ff ff ff 81 00 00 00 00 00     ................
     910:	00 00 00 00 00 80 c0 f0 f8 fc fc fe fe ff ff ff     ................
     920:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     930:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     940:	ff ff 7f 7f 3f 7f ff ff ff fc f0 f0 f0 00 18 03     ....?...........
     950:	00 00 06 6f 1f 3f ff ff ff ff ff ff ff ff ff ff     ...o.?..........
     960:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     970:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     980:	ff ff ff ff ff ff ff ff ff ff ff ff fc 00 00 00     ................
     990:	00 00 00 0c ff ff ff ff ff ff ff ff ff ff ff ff     ................
     9a0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     9b0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     9c0:	ff fb e0 00 00 00 65 47 4f 3f ff ef 3e 18 00 00     ......eGO?..>...
     9d0:	00 00 00 00 00 1c 7f ff ff ff ff ff ff ff ff ff     ................
     9e0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     9f0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a00:	ff ff ff ff ff ff ff ff ff ff ff ff ff f0 c0 80     ................
     a10:	3e 04 c0 f0 fb df 9f 9f 9f 9f 9f 9f df cb 8b 83     >...............
     a20:	83 83 c7 e7 cf cf df ff ff ff ff ff ff ff ff ef     ................
     a30:	e7 e3 e1 e1 f0 f9 f3 e3 e3 e3 e3 f3 f3 f3 f3 f3     ................
     a40:	f3 f3 f3 fe fe fe f8 c0 e0 20 07 1f 1c 78 70 30     ......... ...xp0
     a50:	00 00 00 00 00 00 f0 ff ff ff ff ff ff ff ff ff     ................
     a60:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a70:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a80:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     a90:	fe fe ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     aa0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     ab0:	ff ff ff ff 7f 3f ff ff ff ff ff ff ff ff ff ff     .....?..........
     ac0:	ff ff ff ff ff ff ff ff 7f 18 00 00 00 00 20 20     ..............  
     ad0:	20 10 00 00 80 f8 f8 ff ff ff ff ff ff ff ff ff      ...............
     ae0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     af0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     b00:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     b10:	ff ff ff ff ff ff cf 9f 9f ff ff ff ff ff ff ff     ................
     b20:	ff 7f ff ff ff ff f3 f3 f3 e7 e7 e7 e7 e7 e3 f3     ................
     b30:	f3 71 79 79 7c 7e 7f 3f 3f 3f 3f 3f bf ff fb ff     .qyy|~.?????....
     b40:	ff ff ff ff ff e7 fd fd fc 00 00 e0 fc fc fc f8     ................
     b50:	f8 fc fe ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     b60:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     b70:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     b80:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     b90:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     ba0:	ff ff fe fe fc fc fc fc fe fe fe ff ff ff ff ff     ................
     bb0:	ff ff ff ff ff fd ff fe fe fe ff ff ff ff ff ff     ................
     bc0:	ff ff ff ff ff 7f 1f 03 00 80 c3 c1 c0 81 1f 7f     ................
     bd0:	7f 7f 7f ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     be0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     bf0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     c00:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     c10:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     c20:	ff ff ff ff ff ff ff 7f 7f 7f 7f 7f ff ff ff ff     ................
     c30:	ff ff ff ff ff ff 7f 7f 7f 3f 3f 3f 1f 1f 0f 07     .........???....
     c40:	03 83 c1 e0 f0 f8 fc fe ff ff ff ff ff ff fe fc     ................
     c50:	f0 e0 c0 80 f9 ff ff ff ff ff ff ff ff ff ff ff     ................
     c60:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

00000c70 <tobias>:
	...
     cec:	00 00 00 80 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     d6c:	00 00 01 03 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     da8:	00 00 00 80 80 00 00 00 00 00 80 80 00 00 40 40     ..............@@
     db8:	40 80 80 80 00 00 00 00 00 00 00 00 00 00 00 00     @...............
	...
     dd4:	00 80 80 a0 60 40 00 00 00 00 00 00 00 00 00 00     ....`@..........
	...
     e08:	00 00 00 38 7c fc f8 f8 f8 f8 f0 f0 f0 f0 f0 f0     ...8|...........
     e18:	f0 f0 f0 f0 f8 f8 f8 f8 fc fc fc fe fe fe fe 7e     ...............~
     e28:	7f 3f 3f 3f 9f 9f df ef ff ff ff f7 f7 f7 70 f0     .???..........p.
     e38:	70 70 f1 e1 e1 e1 e7 e3 e3 e6 c6 c0 c0 80 00 00     pp..............
	...
     e50:	00 f0 f0 7c 7c ff ff ff ff ff ff fe fc 78 00 00     ...||........x..
	...
     e8c:	00 01 03 03 03 03 03 03 03 03 07 07 07 07 27 2f     ..............'/
     e9c:	0f 0f 0f 1f 7f ff ff ff fd fc fc fc f8 f8 f8 f8     ................
     eac:	f0 f0 f0 e0 f0 f3 f3 ff ff fe fe fe fe fe ff ff     ................
     ebc:	ff ff ff ff ff ff ff ff ff ff 3d 00 00 00 00 00     ..........=.....
     ecc:	00 00 00 00 00 00 07 0f 0f 0f 0f 0f 0f 07 03 01     ................
	...
     f10:	00 00 00 06 1c 1e 3e 3e 3c 7e 7e 7e fe fe fc e0     ......>><~~~....
     f20:	80 9f 9f bf bf bf bf bf 9f 9f 9f ff ff ff ff f3     ................
     f30:	f3 ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
     f40:	ff ff ff ff f7 fc fe ff ff ff ff ff ff fe fe fe     ................
     f50:	f8 f0 f0 f8 f8 f8 f8 fc fc f8 f0 c0 00 00 00 00     ................
     f60:	00 00 18 10 00 00 00 00 80 80 00 00 00 00 00 00     ................
	...
     f9c:	00 00 00 01 01 03 07 07 0f 0f 0b 03 01 01 05 05     ................
     fac:	07 0e 0e 0f 07 07 87 87 87 c3 e3 e3 f3 f1 f8 ff     ................
     fbc:	ff ff ff ff ff ff ff ff ff ff ff 7f 3f 7f 7f 3f     ............?..?
     fcc:	1f 1f 8f cf c7 f7 ff ff ff ff ff ff ff ff ff ff     ................
     fdc:	ff fe fc f0 e0 c0 06 0e ff ff ff ff ff ff ff ff     ................
     fec:	ff ff ff ff 80 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    102c:	00 00 00 01 03 03 07 07 07 07 07 0f 0f 0f 07 07     ................
    103c:	07 07 07 07 07 07 03 03 31 31 78 78 7c 7c 7e fe     ........11xx||~.
    104c:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    105c:	ff ff ff ff ff ff fe ff ff ff ff ff ff ff df ff     ................
    106c:	ff ff ff ff                                         ....

00001070 <pig>:
    1070:	ff ff ff ff ff ff ff 7f 7f ff ff ff ff ff ff ff     ................
    1080:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1090:	ff ff ff ff ff 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f 7f     ................
    10a0:	7f 3f 3f 3f 3f 3f 3f 1f 1f 1f 1f 1f 1f 1f 1f 0f     .??????.........
    10b0:	0f 0f 0f 0f 0f 0f 0f 07 07 07 07 07 03 03 03 03     ................
    10c0:	03 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00     ................
    10d0:	00 00 00 00 00 01 01 01 01 01 01 03 03 03 07 0f     ................
    10e0:	0f 1f 3f 3f 0f 07 67 e7 07 07 1f ff ff ff ff ff     ..??..g.........
    10f0:	ff ff ff ff ff ff ff c0 80 01 07 07 0f 1f c7 1f     ................
    1100:	3f 3f 7f 3f 1f 1f 0f 0f 0f 07 07 03 03 01 01 01     ??.?............
    1110:	01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1168:	1c fc fb fb fb ff ff ff ff ff ff ff ff ff ff ff     ................
    1178:	ff fe fc 3c 00 00 80 02 10 40 00 00 00 00 00 00     ...<.....@......
	...
    11e8:	00 00 ff ff ff ff ff ff ff 1f 1f 1f 1f 1f 0f 0f     ................
    11f8:	07 03 00 00 00 00 03 03 00 00 00 00 00 00 00 00     ................
    1208:	01 00 00 00 00 00 08 00 00 20 40 00 00 00 00 00     ......... @.....
	...
    1264:	00 80 c0 e2 f8 fe ff ff ff ff ff ff ff fc fa f9     ................
    1274:	f0 e0 c0 80 80 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    128c:	00 00 00 40 00 00 00 00 00 01 00 10 20 00 00 00     ...@........ ...
	...
    12d0:	00 00 80 80 00 00 00 00 00 00 00 00 00 00 00 02     ................
    12e0:	00 00 00 fe ff ff ff ff ff ff ff ff ff ff ff ff     ................
    12f0:	ff ff ff ff ff ff ff ff ff ff fe fe fc fc fc fe     ................
    1300:	fc fc fc f8 f8 fc fc fc fc fc fc fc fc f9 f8 fc     ................
    1310:	fc fc fc fe fe fe fe fc fc fc f2 04 20 00 00 00     ............ ...
    1320:	00 00 00 00 00 e0 f8 f8 f8 fc fc fc fc fc fc f8     ................
    1330:	f8 fc fc fc fc fc f8 f8 fc fc fc fc f8 f8 f8 fc     ................
    1340:	fc fc fc fc fc f8 fe fe fe fe fe fe fe ff ff ff     ................
    1350:	ff ff ff ff 80 00 00 00 00 00 00 00 00 00 00 00     ................
    1360:	00 00 00 83 f7 ff ff ff ff ff ff ff ff ff ff ff     ................
    1370:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1380:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1390:	ff ff ff ff ff ff ff ff ff ff ff 00 00 00 98 00     ................
    13a0:	00 00 00 00 fc ff ff ff ff ff ff ff ff ff ff ff     ................
    13b0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    13c0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    13d0:	ff ff ff ff 3f 00 00 00 00 88 c0 e4 f8 00 00 00     ....?...........
    13e0:	00 e0 fc ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    13f0:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1400:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1410:	ff ff ff ff ff ff ff ff ff f7 f3 f0 d0 c0 c4 e8     ................
    1420:	c0 c8 c0 f8 ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1430:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1440:	ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................
    1450:	ff ff 9f 91 90 b0 80 80 f8 ff ff f7 e0 e0 f0 f0     ................
    1460:	fe ff ff ff ff ff ff ff ff ff ff ff ff ff ff ff     ................

00001470 <font>:
	...
    1478:	00 06 5f 5f 06 00 00 00 00 07 07 00 07 07 00 00     ..__............
    1488:	14 7f 7f 14 7f 7f 14 00 24 2e 6b 6b 3a 12 00 00     ........$.kk:...
    1498:	46 66 30 18 0c 66 62 00 30 7a 4f 5d 37 7a 48 00     Ff0..fb.0zO]7zH.
    14a8:	04 07 03 00 00 00 00 00 00 1c 3e 63 41 00 00 00     ..........>cA...
    14b8:	00 41 63 3e 1c 00 00 00 08 2a 3e 1c 1c 3e 2a 08     .Ac>.....*>..>*.
    14c8:	08 08 3e 3e 08 08 00 00 00 a0 e0 60 00 00 00 00     ..>>.......`....
    14d8:	08 08 08 08 08 08 00 00 00 00 60 60 00 00 00 00     ..........``....
    14e8:	60 30 18 0c 06 03 01 00 3e 7f 59 4d 7f 3e 00 00     `0......>.YM.>..
    14f8:	42 42 7f 7f 40 40 00 00 62 73 59 49 6f 66 00 00     BB..@@..bsYIof..
    1508:	22 63 49 49 7f 36 00 00 18 1c 16 13 7f 7f 10 00     "cII.6..........
    1518:	27 67 45 45 7d 39 00 00 3c 7e 4b 49 79 30 00 00     'gEE}9..<~KIy0..
    1528:	03 63 71 19 0f 07 00 00 36 7f 49 49 7f 36 00 00     .cq.....6.II.6..
    1538:	06 4f 49 69 3f 1e 00 00 00 00 6c 6c 00 00 00 00     .OIi?.....ll....
    1548:	00 a0 ec 6c 00 00 00 00 08 1c 36 63 41 00 00 00     ...l......6cA...
    1558:	14 14 14 14 14 14 00 00 00 41 63 36 1c 08 00 00     .........Ac6....
    1568:	02 03 51 59 0f 06 00 00 3e 7f 41 5d 5d 1f 1e 00     ..QY....>.A]]...
    1578:	7c 7e 13 13 7e 7c 00 00 41 7f 7f 49 49 7f 36 00     |~..~|..A..II.6.
    1588:	1c 3e 63 41 41 63 22 00 41 7f 7f 41 63 7f 1c 00     .>cAAc".A..Ac...
    1598:	41 7f 7f 49 5d 41 63 00 41 7f 7f 49 1d 01 03 00     A..I]Ac.A..I....
    15a8:	1c 3e 63 41 51 73 72 00 7f 7f 08 08 7f 7f 00 00     .>cAQsr.........
    15b8:	00 41 7f 7f 41 00 00 00 30 70 40 41 7f 3f 01 00     .A..A...0p@A.?..
    15c8:	41 7f 7f 08 1c 77 63 00 41 7f 7f 41 40 60 70 00     A....wc.A..A@`p.
    15d8:	7f 7f 06 0c 06 7f 7f 00 7f 7f 06 0c 18 7f 7f 00     ................
    15e8:	1c 3e 63 41 63 3e 1c 00 41 7f 7f 49 09 0f 06 00     .>cAc>..A..I....
    15f8:	1e 3f 21 71 7f 5e 00 00 41 7f 7f 19 39 6f 46 00     .?!q.^..A...9oF.
    1608:	26 67 4d 59 7b 32 00 00 03 41 7f 7f 41 03 00 00     &gMY{2...A..A...
    1618:	7f 7f 40 40 7f 7f 00 00 1f 3f 60 60 3f 1f 00 00     ..@@.....?``?...
    1628:	7f 7f 30 18 30 7f 7f 00 63 77 1c 08 1c 77 63 00     ..0.0...cw...wc.
    1638:	07 4f 78 78 4f 07 00 00 67 73 59 4d 47 63 71 00     .OxxO...gsYMGcq.
    1648:	00 7f 7f 41 41 00 00 00 01 03 06 0c 18 30 60 00     ...AA........0`.
    1658:	00 41 41 7f 7f 00 00 00 08 0c 06 03 06 0c 08 00     .AA.............
    1668:	80 80 80 80 80 80 80 80 00 00 03 07 04 00 00 00     ................
    1678:	20 74 54 54 3c 78 40 00 41 3f 7f 44 44 7c 38 00      tTT<x@.A?.DD|8.
    1688:	38 7c 44 44 6c 28 00 00 30 78 48 49 3f 7f 40 00     8|DDl(..0xHI?.@.
    1698:	38 7c 54 54 5c 18 00 00 48 7e 7f 49 03 02 00 00     8|TT\...H~.I....
    16a8:	98 bc a4 a4 f8 7c 04 00 41 7f 7f 08 04 7c 78 00     .....|..A....|x.
    16b8:	00 44 7d 7d 40 00 00 00 40 c4 84 fd 7d 00 00 00     .D}}@...@...}...
    16c8:	41 7f 7f 10 38 6c 44 00 00 41 7f 7f 40 00 00 00     A...8lD..A..@...
    16d8:	7c 7c 0c 18 0c 7c 78 00 7c 7c 04 04 7c 78 00 00     ||...|x.||..|x..
    16e8:	38 7c 44 44 7c 38 00 00 84 fc f8 a4 24 3c 18 00     8|DD|8......$<..
    16f8:	18 3c 24 a4 f8 fc 84 00 44 7c 78 44 1c 18 00 00     .<$.....D|xD....
    1708:	48 5c 54 54 74 24 00 00 00 04 3e 7f 44 24 00 00     H\TTt$....>.D$..
    1718:	3c 7c 40 40 3c 7c 40 00 1c 3c 60 60 3c 1c 00 00     <|@@<|@..<``<...
    1728:	3c 7c 60 30 60 7c 3c 00 44 6c 38 10 38 6c 44 00     <|`0`|<.Dl8.8lD.
    1738:	9c bc a0 a0 fc 7c 00 00 4c 64 74 5c 4c 64 00 00     .....|..Ldt\Ld..
    1748:	08 08 3e 77 41 41 00 00 00 00 00 77 77 00 00 00     ..>wAA.....ww...
    1758:	41 41 77 3e 08 08 00 00 02 03 01 03 02 03 01 00     AAw>............

00001768 <__ctors_end>:
    1768:	11 24       	eor	r1, r1
    176a:	1f be       	out	0x3f, r1	; 63
    176c:	cf ef       	ldi	r28, 0xFF	; 255
    176e:	d4 e0       	ldi	r29, 0x04	; 4
    1770:	de bf       	out	0x3e, r29	; 62
    1772:	cd bf       	out	0x3d, r28	; 61

00001774 <__do_copy_data>:
    1774:	11 e0       	ldi	r17, 0x01	; 1
    1776:	a0 e0       	ldi	r26, 0x00	; 0
    1778:	b1 e0       	ldi	r27, 0x01	; 1
    177a:	ee e8       	ldi	r30, 0x8E	; 142
    177c:	f3 e3       	ldi	r31, 0x33	; 51
    177e:	02 c0       	rjmp	.+4      	; 0x1784 <__do_copy_data+0x10>
    1780:	05 90       	lpm	r0, Z+
    1782:	0d 92       	st	X+, r0
    1784:	ac 3f       	cpi	r26, 0xFC	; 252
    1786:	b1 07       	cpc	r27, r17
    1788:	d9 f7       	brne	.-10     	; 0x1780 <__do_copy_data+0xc>

0000178a <__do_clear_bss>:
    178a:	23 e0       	ldi	r18, 0x03	; 3
    178c:	ac ef       	ldi	r26, 0xFC	; 252
    178e:	b1 e0       	ldi	r27, 0x01	; 1
    1790:	01 c0       	rjmp	.+2      	; 0x1794 <.do_clear_bss_start>

00001792 <.do_clear_bss_loop>:
    1792:	1d 92       	st	X+, r1

00001794 <.do_clear_bss_start>:
    1794:	a1 36       	cpi	r26, 0x61	; 97
    1796:	b2 07       	cpc	r27, r18
    1798:	e1 f7       	brne	.-8      	; 0x1792 <.do_clear_bss_loop>
    179a:	0e 94 f7 0d 	call	0x1bee	; 0x1bee <main>
    179e:	0c 94 c5 19 	jmp	0x338a	; 0x338a <_exit>

000017a2 <__bad_interrupt>:
    17a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000017a6 <ADC_init>:
    17a6:	85 b7       	in	r24, 0x35	; 53
    17a8:	88 60       	ori	r24, 0x08	; 8
    17aa:	85 bf       	out	0x35, r24	; 53
    17ac:	85 b7       	in	r24, 0x35	; 53
    17ae:	84 60       	ori	r24, 0x04	; 4
    17b0:	85 bf       	out	0x35, r24	; 53
    17b2:	86 b7       	in	r24, 0x36	; 54
    17b4:	80 64       	ori	r24, 0x40	; 64
    17b6:	86 bf       	out	0x36, r24	; 54
    17b8:	c3 9a       	sbi	0x18, 3	; 24
    17ba:	bb 98       	cbi	0x17, 3	; 23
    17bc:	08 95       	ret

000017be <ADC_read>:
    17be:	e0 91 06 01 	lds	r30, 0x0106
    17c2:	f0 91 07 01 	lds	r31, 0x0107
    17c6:	8d 5f       	subi	r24, 0xFD	; 253
    17c8:	80 83       	st	Z, r24
    17ca:	b3 99       	sbic	0x16, 3	; 22
    17cc:	fe cf       	rjmp	.-4      	; 0x17ca <ADC_read+0xc>
    17ce:	e0 91 06 01 	lds	r30, 0x0106
    17d2:	f0 91 07 01 	lds	r31, 0x0107
    17d6:	80 81       	ld	r24, Z
    17d8:	08 95       	ret

000017da <CAN_init>:
    17da:	0e 94 0d 0f 	call	0x1e1a	; 0x1e1a <MCP2515_init>
    17de:	40 e0       	ldi	r20, 0x00	; 0
    17e0:	60 ee       	ldi	r22, 0xE0	; 224
    17e2:	8f e0       	ldi	r24, 0x0F	; 15
    17e4:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <MCP2515_bitModify>
    17e8:	08 95       	ret

000017ea <Can_CAN_receive>:
    17ea:	8c e2       	ldi	r24, 0x2C	; 44
    17ec:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <MCP2515_read>
    17f0:	83 70       	andi	r24, 0x03	; 3
    17f2:	29 f4       	brne	.+10     	; 0x17fe <Can_CAN_receive+0x14>
    17f4:	8c e2       	ldi	r24, 0x2C	; 44
    17f6:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <MCP2515_read>
    17fa:	83 70       	andi	r24, 0x03	; 3
    17fc:	d9 f3       	breq	.-10     	; 0x17f4 <Can_CAN_receive+0xa>
    17fe:	08 95       	ret

00001800 <CAN_message_recieve>:
    1800:	ff 92       	push	r15
    1802:	0f 93       	push	r16
    1804:	1f 93       	push	r17
    1806:	cf 93       	push	r28
    1808:	df 93       	push	r29
    180a:	1f 92       	push	r1
    180c:	cd b7       	in	r28, 0x3d	; 61
    180e:	de b7       	in	r29, 0x3e	; 62
    1810:	8c 01       	movw	r16, r24
    1812:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <Can_CAN_receive>
    1816:	8c e2       	ldi	r24, 0x2C	; 44
    1818:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <MCP2515_read>
    181c:	89 83       	std	Y+1, r24	; 0x01
    181e:	81 e6       	ldi	r24, 0x61	; 97
    1820:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <MCP2515_read>
    1824:	90 e0       	ldi	r25, 0x00	; 0
    1826:	f8 01       	movw	r30, r16
    1828:	91 83       	std	Z+1, r25	; 0x01
    182a:	80 83       	st	Z, r24
    182c:	85 e6       	ldi	r24, 0x65	; 101
    182e:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <MCP2515_read>
    1832:	f8 01       	movw	r30, r16
    1834:	82 83       	std	Z+2, r24	; 0x02
    1836:	88 23       	and	r24, r24
    1838:	71 f0       	breq	.+28     	; 0x1856 <CAN_message_recieve+0x56>
    183a:	f1 2c       	mov	r15, r1
    183c:	86 e6       	ldi	r24, 0x66	; 102
    183e:	8f 0d       	add	r24, r15
    1840:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <MCP2515_read>
    1844:	f8 01       	movw	r30, r16
    1846:	ef 0d       	add	r30, r15
    1848:	f1 1d       	adc	r31, r1
    184a:	83 83       	std	Z+3, r24	; 0x03
    184c:	f3 94       	inc	r15
    184e:	f8 01       	movw	r30, r16
    1850:	82 81       	ldd	r24, Z+2	; 0x02
    1852:	f8 16       	cp	r15, r24
    1854:	98 f3       	brcs	.-26     	; 0x183c <CAN_message_recieve+0x3c>
    1856:	40 e0       	ldi	r20, 0x00	; 0
    1858:	61 e0       	ldi	r22, 0x01	; 1
    185a:	8c e2       	ldi	r24, 0x2C	; 44
    185c:	0e 94 e7 0e 	call	0x1dce	; 0x1dce <MCP2515_bitModify>
    1860:	0f 90       	pop	r0
    1862:	df 91       	pop	r29
    1864:	cf 91       	pop	r28
    1866:	1f 91       	pop	r17
    1868:	0f 91       	pop	r16
    186a:	ff 90       	pop	r15
    186c:	08 95       	ret

0000186e <Can_CAN_send>:
    186e:	cf 93       	push	r28
    1870:	df 93       	push	r29
    1872:	1f 92       	push	r1
    1874:	cd b7       	in	r28, 0x3d	; 61
    1876:	de b7       	in	r29, 0x3e	; 62
    1878:	80 e3       	ldi	r24, 0x30	; 48
    187a:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <MCP2515_read>
    187e:	89 83       	std	Y+1, r24	; 0x01
    1880:	89 81       	ldd	r24, Y+1	; 0x01
    1882:	83 ff       	sbrs	r24, 3
    1884:	07 c0       	rjmp	.+14     	; 0x1894 <Can_CAN_send+0x26>
    1886:	80 e3       	ldi	r24, 0x30	; 48
    1888:	0e 94 9b 0e 	call	0x1d36	; 0x1d36 <MCP2515_read>
    188c:	89 83       	std	Y+1, r24	; 0x01
    188e:	89 81       	ldd	r24, Y+1	; 0x01
    1890:	83 fd       	sbrc	r24, 3
    1892:	f9 cf       	rjmp	.-14     	; 0x1886 <Can_CAN_send+0x18>
    1894:	0f 90       	pop	r0
    1896:	df 91       	pop	r29
    1898:	cf 91       	pop	r28
    189a:	08 95       	ret

0000189c <CAN_message_send>:
    189c:	1f 93       	push	r17
    189e:	cf 93       	push	r28
    18a0:	df 93       	push	r29
    18a2:	ec 01       	movw	r28, r24
    18a4:	0e 94 37 0c 	call	0x186e	; 0x186e <Can_CAN_send>
    18a8:	60 e0       	ldi	r22, 0x00	; 0
    18aa:	82 e3       	ldi	r24, 0x32	; 50
    18ac:	0e 94 af 0e 	call	0x1d5e	; 0x1d5e <MCP2515_write>
    18b0:	68 81       	ld	r22, Y
    18b2:	81 e3       	ldi	r24, 0x31	; 49
    18b4:	0e 94 af 0e 	call	0x1d5e	; 0x1d5e <MCP2515_write>
    18b8:	6a 81       	ldd	r22, Y+2	; 0x02
    18ba:	85 e3       	ldi	r24, 0x35	; 53
    18bc:	0e 94 af 0e 	call	0x1d5e	; 0x1d5e <MCP2515_write>
    18c0:	8a 81       	ldd	r24, Y+2	; 0x02
    18c2:	88 23       	and	r24, r24
    18c4:	69 f0       	breq	.+26     	; 0x18e0 <CAN_message_send+0x44>
    18c6:	10 e0       	ldi	r17, 0x00	; 0
    18c8:	fe 01       	movw	r30, r28
    18ca:	e1 0f       	add	r30, r17
    18cc:	f1 1d       	adc	r31, r1
    18ce:	63 81       	ldd	r22, Z+3	; 0x03
    18d0:	86 e3       	ldi	r24, 0x36	; 54
    18d2:	81 0f       	add	r24, r17
    18d4:	0e 94 af 0e 	call	0x1d5e	; 0x1d5e <MCP2515_write>
    18d8:	1f 5f       	subi	r17, 0xFF	; 255
    18da:	8a 81       	ldd	r24, Y+2	; 0x02
    18dc:	18 17       	cp	r17, r24
    18de:	a0 f3       	brcs	.-24     	; 0x18c8 <CAN_message_send+0x2c>
    18e0:	81 e8       	ldi	r24, 0x81	; 129
    18e2:	0e 94 c5 0e 	call	0x1d8a	; 0x1d8a <MCP2515_requestToSend>
    18e6:	df 91       	pop	r29
    18e8:	cf 91       	pop	r28
    18ea:	1f 91       	pop	r17
    18ec:	08 95       	ret

000018ee <CAN_send_game_settings>:
#include "menu.h"
#include "util/delay.h"
#define F_CPU 4915200


void CAN_send_game_settings(game_settings settings){
    18ee:	cf 93       	push	r28
    18f0:	df 93       	push	r29
    18f2:	cd b7       	in	r28, 0x3d	; 61
    18f4:	de b7       	in	r29, 0x3e	; 62
    18f6:	2b 97       	sbiw	r28, 0x0b	; 11
    18f8:	0f b6       	in	r0, 0x3f	; 63
    18fa:	f8 94       	cli
    18fc:	de bf       	out	0x3e, r29	; 62
    18fe:	0f be       	out	0x3f, r0	; 63
    1900:	cd bf       	out	0x3d, r28	; 61
	CAN_message msg;
	ID id = STARTGAME;
	uint8_t length = 4;
	msg.data[0] = settings.regulator;
    1902:	6c 83       	std	Y+4, r22	; 0x04
	msg.data[1] = settings.difficulty;
    1904:	7d 83       	std	Y+5, r23	; 0x05
	msg.data[2] = settings.solenoid;
    1906:	8e 83       	std	Y+6, r24	; 0x06
	msg.data[3] = settings.inverted;
    1908:	9f 83       	std	Y+7, r25	; 0x07
	msg.id = id;
    190a:	82 e0       	ldi	r24, 0x02	; 2
    190c:	90 e0       	ldi	r25, 0x00	; 0
    190e:	9a 83       	std	Y+2, r25	; 0x02
    1910:	89 83       	std	Y+1, r24	; 0x01
	msg.length = length;
    1912:	84 e0       	ldi	r24, 0x04	; 4
    1914:	8b 83       	std	Y+3, r24	; 0x03
	CAN_message_send(&msg);
    1916:	ce 01       	movw	r24, r28
    1918:	01 96       	adiw	r24, 0x01	; 1
    191a:	0e 94 4e 0c 	call	0x189c	; 0x189c <CAN_message_send>
}
    191e:	2b 96       	adiw	r28, 0x0b	; 11
    1920:	0f b6       	in	r0, 0x3f	; 63
    1922:	f8 94       	cli
    1924:	de bf       	out	0x3e, r29	; 62
    1926:	0f be       	out	0x3f, r0	; 63
    1928:	cd bf       	out	0x3d, r28	; 61
    192a:	df 91       	pop	r29
    192c:	cf 91       	pop	r28
    192e:	08 95       	ret

00001930 <GAME_print_score>:


void GAME_print_score(CAN_message msg){
    1930:	ef 92       	push	r14
    1932:	ff 92       	push	r15
    1934:	0f 93       	push	r16
    1936:	1f 93       	push	r17
    1938:	cf 93       	push	r28
    193a:	df 93       	push	r29
    193c:	cd b7       	in	r28, 0x3d	; 61
    193e:	de b7       	in	r29, 0x3e	; 62
    1940:	2b 97       	sbiw	r28, 0x0b	; 11
    1942:	0f b6       	in	r0, 0x3f	; 63
    1944:	f8 94       	cli
    1946:	de bf       	out	0x3e, r29	; 62
    1948:	0f be       	out	0x3f, r0	; 63
    194a:	cd bf       	out	0x3d, r28	; 61
    194c:	e9 82       	std	Y+1, r14	; 0x01
    194e:	fa 82       	std	Y+2, r15	; 0x02
    1950:	0b 83       	std	Y+3, r16	; 0x03
    1952:	1c 83       	std	Y+4, r17	; 0x04
    1954:	e2 2f       	mov	r30, r18
    1956:	2d 83       	std	Y+5, r18	; 0x05
    1958:	3e 83       	std	Y+6, r19	; 0x06
    195a:	4f 83       	std	Y+7, r20	; 0x07
    195c:	58 87       	std	Y+8, r21	; 0x08
    195e:	69 87       	std	Y+9, r22	; 0x09
    1960:	7a 87       	std	Y+10, r23	; 0x0a
    1962:	8b 87       	std	Y+11, r24	; 0x0b
	int score = (msg.data[MSB] << 8);
    1964:	21 2f       	mov	r18, r17
    1966:	30 e0       	ldi	r19, 0x00	; 0
	score |= msg.data[LSB];
    1968:	3e 2b       	or	r19, r30
	
	//OLED_reset();
	//OLED_print_pig();
	OLED_print_score(abs(score));
    196a:	c9 01       	movw	r24, r18
    196c:	99 23       	and	r25, r25
    196e:	24 f4       	brge	.+8      	; 0x1978 <GAME_print_score+0x48>
    1970:	88 27       	eor	r24, r24
    1972:	99 27       	eor	r25, r25
    1974:	82 1b       	sub	r24, r18
    1976:	93 0b       	sbc	r25, r19
    1978:	0e 94 4b 13 	call	0x2696	; 0x2696 <OLED_print_score>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    197c:	83 ed       	ldi	r24, 0xD3	; 211
    197e:	90 e3       	ldi	r25, 0x30	; 48
    1980:	01 97       	sbiw	r24, 0x01	; 1
    1982:	f1 f7       	brne	.-4      	; 0x1980 <GAME_print_score+0x50>
    1984:	00 c0       	rjmp	.+0      	; 0x1986 <GAME_print_score+0x56>
    1986:	00 00       	nop
	_delay_ms(50);
}
    1988:	2b 96       	adiw	r28, 0x0b	; 11
    198a:	0f b6       	in	r0, 0x3f	; 63
    198c:	f8 94       	cli
    198e:	de bf       	out	0x3e, r29	; 62
    1990:	0f be       	out	0x3f, r0	; 63
    1992:	cd bf       	out	0x3d, r28	; 61
    1994:	df 91       	pop	r29
    1996:	cf 91       	pop	r28
    1998:	1f 91       	pop	r17
    199a:	0f 91       	pop	r16
    199c:	ff 90       	pop	r15
    199e:	ef 90       	pop	r14
    19a0:	08 95       	ret

000019a2 <GAME_print_finalscore>:


void GAME_print_finalscore(CAN_message msg){
    19a2:	ef 92       	push	r14
    19a4:	ff 92       	push	r15
    19a6:	0f 93       	push	r16
    19a8:	1f 93       	push	r17
    19aa:	cf 93       	push	r28
    19ac:	df 93       	push	r29
    19ae:	cd b7       	in	r28, 0x3d	; 61
    19b0:	de b7       	in	r29, 0x3e	; 62
    19b2:	65 97       	sbiw	r28, 0x15	; 21
    19b4:	0f b6       	in	r0, 0x3f	; 63
    19b6:	f8 94       	cli
    19b8:	de bf       	out	0x3e, r29	; 62
    19ba:	0f be       	out	0x3f, r0	; 63
    19bc:	cd bf       	out	0x3d, r28	; 61
	int score = (msg.data[MSB] << 8);
    19be:	01 2f       	mov	r16, r17
    19c0:	10 e0       	ldi	r17, 0x00	; 0
	score |= msg.data[LSB];
    19c2:	12 2b       	or	r17, r18
	OLED_reset();
    19c4:	0e 94 a1 12 	call	0x2542	; 0x2542 <OLED_reset>
	OLED_print_sentence("GAME OVER!");
    19c8:	8c e0       	ldi	r24, 0x0C	; 12
    19ca:	91 e0       	ldi	r25, 0x01	; 1
    19cc:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
	OLED_go_to_pos(2, 11);
    19d0:	6b e0       	ldi	r22, 0x0B	; 11
    19d2:	82 e0       	ldi	r24, 0x02	; 2
    19d4:	0e 94 59 12 	call	0x24b2	; 0x24b2 <OLED_go_to_pos>
	OLED_print_sentence("Final Score: ");
    19d8:	87 e1       	ldi	r24, 0x17	; 23
    19da:	91 e0       	ldi	r25, 0x01	; 1
    19dc:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
	OLED_go_to_pos(3, 44);
    19e0:	6c e2       	ldi	r22, 0x2C	; 44
    19e2:	83 e0       	ldi	r24, 0x03	; 3
    19e4:	0e 94 59 12 	call	0x24b2	; 0x24b2 <OLED_go_to_pos>
	char scorechar[10];
	sprintf(scorechar, "%d", score);
    19e8:	1f 93       	push	r17
    19ea:	0f 93       	push	r16
    19ec:	85 e2       	ldi	r24, 0x25	; 37
    19ee:	91 e0       	ldi	r25, 0x01	; 1
    19f0:	9f 93       	push	r25
    19f2:	8f 93       	push	r24
    19f4:	8e 01       	movw	r16, r28
    19f6:	0f 5f       	subi	r16, 0xFF	; 255
    19f8:	1f 4f       	sbci	r17, 0xFF	; 255
    19fa:	1f 93       	push	r17
    19fc:	0f 93       	push	r16
    19fe:	0e 94 aa 15 	call	0x2b54	; 0x2b54 <sprintf>
	OLED_print_sentence(scorechar);	
    1a02:	c8 01       	movw	r24, r16
    1a04:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
    1a08:	0f 90       	pop	r0
    1a0a:	0f 90       	pop	r0
    1a0c:	0f 90       	pop	r0
    1a0e:	0f 90       	pop	r0
    1a10:	0f 90       	pop	r0
    1a12:	0f 90       	pop	r0
}
    1a14:	65 96       	adiw	r28, 0x15	; 21
    1a16:	0f b6       	in	r0, 0x3f	; 63
    1a18:	f8 94       	cli
    1a1a:	de bf       	out	0x3e, r29	; 62
    1a1c:	0f be       	out	0x3f, r0	; 63
    1a1e:	cd bf       	out	0x3d, r28	; 61
    1a20:	df 91       	pop	r29
    1a22:	cf 91       	pop	r28
    1a24:	1f 91       	pop	r17
    1a26:	0f 91       	pop	r16
    1a28:	ff 90       	pop	r15
    1a2a:	ef 90       	pop	r14
    1a2c:	08 95       	ret

00001a2e <calibrate>:
 *  \param void
 *
 *  \return Joy_pos, Returns a struct: Joy_pos, containing calibration values.
 */

Joy_pos calibrate(){
    1a2e:	cf 93       	push	r28
	Joy_pos newPos;
	newPos.x = ADC_read(1);
    1a30:	81 e0       	ldi	r24, 0x01	; 1
    1a32:	0e 94 df 0b 	call	0x17be	; 0x17be <ADC_read>
    1a36:	c8 2f       	mov	r28, r24
	newPos.y = ADC_read(2);
    1a38:	82 e0       	ldi	r24, 0x02	; 2
    1a3a:	0e 94 df 0b 	call	0x17be	; 0x17be <ADC_read>
    1a3e:	28 2f       	mov	r18, r24
	return newPos;
    1a40:	6c 2f       	mov	r22, r28
    1a42:	70 e0       	ldi	r23, 0x00	; 0
    1a44:	82 2f       	mov	r24, r18
    1a46:	90 e0       	ldi	r25, 0x00	; 0
}
    1a48:	cf 91       	pop	r28
    1a4a:	08 95       	ret

00001a4c <getJoyPos>:
 *  \param void
 *
 *  \return Joy_pos, Returns a struct: Joy_pos, containing position.
 */

Joy_pos getJoyPos(){
    1a4c:	0f 93       	push	r16
    1a4e:	1f 93       	push	r17
    1a50:	cf 93       	push	r28
	Joy_pos position;
	int x = ADC_read(2);
    1a52:	82 e0       	ldi	r24, 0x02	; 2
    1a54:	0e 94 df 0b 	call	0x17be	; 0x17be <ADC_read>
    1a58:	c8 2f       	mov	r28, r24
	int y = ADC_read(1);
    1a5a:	81 e0       	ldi	r24, 0x01	; 1
    1a5c:	0e 94 df 0b 	call	0x17be	; 0x17be <ADC_read>
    1a60:	48 2f       	mov	r20, r24
	
	//converts positions to +- 100
	position.x = x - initialPosition.x;
    1a62:	60 91 50 03 	lds	r22, 0x0350
    1a66:	70 91 51 03 	lds	r23, 0x0351
	position.x *= 100;
	position.x /= initialPosition.x;
	
	position.y = y - initialPosition.y;
    1a6a:	e0 91 52 03 	lds	r30, 0x0352
    1a6e:	f0 91 53 03 	lds	r31, 0x0353
 *  \return Joy_pos, Returns a struct: Joy_pos, containing position.
 */

Joy_pos getJoyPos(){
	Joy_pos position;
	int x = ADC_read(2);
    1a72:	ac 2f       	mov	r26, r28
    1a74:	b0 e0       	ldi	r27, 0x00	; 0
	int y = ADC_read(1);
	
	//converts positions to +- 100
	position.x = x - initialPosition.x;
    1a76:	a6 1b       	sub	r26, r22
    1a78:	b7 0b       	sbc	r27, r23
	position.x *= 100;
    1a7a:	c4 e6       	ldi	r28, 0x64	; 100
    1a7c:	ca 9f       	mul	r28, r26
    1a7e:	c0 01       	movw	r24, r0
    1a80:	cb 9f       	mul	r28, r27
    1a82:	90 0d       	add	r25, r0
    1a84:	11 24       	eor	r1, r1
	position.x /= initialPosition.x;
    1a86:	0e 94 37 15 	call	0x2a6e	; 0x2a6e <__divmodhi4>
	
	position.y = y - initialPosition.y;
	position.y *= 100;
	position.y /= initialPosition.y;

	return position;
    1a8a:	8b 01       	movw	r16, r22
 */

Joy_pos getJoyPos(){
	Joy_pos position;
	int x = ADC_read(2);
	int y = ADC_read(1);
    1a8c:	50 e0       	ldi	r21, 0x00	; 0
	//converts positions to +- 100
	position.x = x - initialPosition.x;
	position.x *= 100;
	position.x /= initialPosition.x;
	
	position.y = y - initialPosition.y;
    1a8e:	4e 1b       	sub	r20, r30
    1a90:	5f 0b       	sbc	r21, r31
	position.y *= 100;
    1a92:	c4 9f       	mul	r28, r20
    1a94:	c0 01       	movw	r24, r0
    1a96:	c5 9f       	mul	r28, r21
    1a98:	90 0d       	add	r25, r0
    1a9a:	11 24       	eor	r1, r1
	position.y /= initialPosition.y;

	return position;
    1a9c:	bf 01       	movw	r22, r30
    1a9e:	0e 94 37 15 	call	0x2a6e	; 0x2a6e <__divmodhi4>
    1aa2:	9b 01       	movw	r18, r22
}
    1aa4:	c9 01       	movw	r24, r18
    1aa6:	b8 01       	movw	r22, r16
    1aa8:	cf 91       	pop	r28
    1aaa:	1f 91       	pop	r17
    1aac:	0f 91       	pop	r16
    1aae:	08 95       	ret

00001ab0 <getSliderPos>:
 *  \param void
 *
 *  \return Slider_pos, Returns a struct: Slider_pos, containing current values.
 */

Slider_pos getSliderPos(){
    1ab0:	cf 93       	push	r28
	Slider_pos position;
	position.L = ADC_read(3);
    1ab2:	83 e0       	ldi	r24, 0x03	; 3
    1ab4:	0e 94 df 0b 	call	0x17be	; 0x17be <ADC_read>
    1ab8:	c8 2f       	mov	r28, r24
	position.R = ADC_read(4);
    1aba:	84 e0       	ldi	r24, 0x04	; 4
    1abc:	0e 94 df 0b 	call	0x17be	; 0x17be <ADC_read>
    1ac0:	28 2f       	mov	r18, r24
	return position;
    1ac2:	62 2f       	mov	r22, r18
    1ac4:	70 e0       	ldi	r23, 0x00	; 0
    1ac6:	8c 2f       	mov	r24, r28
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
}
    1aca:	cf 91       	pop	r28
    1acc:	08 95       	ret

00001ace <joystick_init>:
 *  \param void
 *
 *  \return void
 */

void joystick_init(){
    1ace:	cf 93       	push	r28
    1ad0:	df 93       	push	r29
    1ad2:	cd b7       	in	r28, 0x3d	; 61
    1ad4:	de b7       	in	r29, 0x3e	; 62
    1ad6:	2b 97       	sbiw	r28, 0x0b	; 11
    1ad8:	0f b6       	in	r0, 0x3f	; 63
    1ada:	f8 94       	cli
    1adc:	de bf       	out	0x3e, r29	; 62
    1ade:	0f be       	out	0x3f, r0	; 63
    1ae0:	cd bf       	out	0x3d, r28	; 61
	// Set up internal pull-up for PB2 Joystickbutton:
	set_bit(PORTB,PB2);
    1ae2:	c2 9a       	sbi	0x18, 2	; 24
	clear_bit(DDRB,PB2);
    1ae4:	ba 98       	cbi	0x17, 2	; 23
	//Saves initial position for calibration:
	initialPosition = calibrate();
    1ae6:	0e 94 17 0d 	call	0x1a2e	; 0x1a2e <calibrate>
    1aea:	60 93 50 03 	sts	0x0350, r22
    1aee:	70 93 51 03 	sts	0x0351, r23
    1af2:	80 93 52 03 	sts	0x0352, r24
    1af6:	90 93 53 03 	sts	0x0353, r25
    //Send initilizing CAN message for NODE2:
	CAN_message msg;
	msg.id=JOYSTICK_INIT;
    1afa:	81 e0       	ldi	r24, 0x01	; 1
    1afc:	90 e0       	ldi	r25, 0x00	; 0
    1afe:	9a 83       	std	Y+2, r25	; 0x02
    1b00:	89 83       	std	Y+1, r24	; 0x01
	msg.length=2;
    1b02:	82 e0       	ldi	r24, 0x02	; 2
    1b04:	8b 83       	std	Y+3, r24	; 0x03
	msg.data[0]=initialPosition.x;
    1b06:	6c 83       	std	Y+4, r22	; 0x04
	msg.data[1]=initialPosition.y;
    1b08:	80 91 52 03 	lds	r24, 0x0352
    1b0c:	8d 83       	std	Y+5, r24	; 0x05
	CAN_message_send(&msg);
    1b0e:	ce 01       	movw	r24, r28
    1b10:	01 96       	adiw	r24, 0x01	; 1
    1b12:	0e 94 4e 0c 	call	0x189c	; 0x189c <CAN_message_send>
}
    1b16:	2b 96       	adiw	r28, 0x0b	; 11
    1b18:	0f b6       	in	r0, 0x3f	; 63
    1b1a:	f8 94       	cli
    1b1c:	de bf       	out	0x3e, r29	; 62
    1b1e:	0f be       	out	0x3f, r0	; 63
    1b20:	cd bf       	out	0x3d, r28	; 61
    1b22:	df 91       	pop	r29
    1b24:	cf 91       	pop	r28
    1b26:	08 95       	ret

00001b28 <getJoyDir>:
 *
 *  \return DIR, returns enum DIR.
 */

DIR getJoyDir(){
	Joy_pos position = getJoyPos();
    1b28:	0e 94 26 0d 	call	0x1a4c	; 0x1a4c <getJoyPos>
	if (position.x > 50){
    1b2c:	63 33       	cpi	r22, 0x33	; 51
    1b2e:	71 05       	cpc	r23, r1
    1b30:	b4 f4       	brge	.+44     	; 0x1b5e <getJoyDir+0x36>
		return RIGHT;
	}
	else if (position.x < -50){
    1b32:	6e 3c       	cpi	r22, 0xCE	; 206
    1b34:	ef ef       	ldi	r30, 0xFF	; 255
    1b36:	7e 07       	cpc	r23, r30
    1b38:	a4 f0       	brlt	.+40     	; 0x1b62 <getJoyDir+0x3a>
		return LEFT;
	}
	else if (position.y < -50){
    1b3a:	8e 3c       	cpi	r24, 0xCE	; 206
    1b3c:	2f ef       	ldi	r18, 0xFF	; 255
    1b3e:	92 07       	cpc	r25, r18
    1b40:	94 f0       	brlt	.+36     	; 0x1b66 <getJoyDir+0x3e>
		return DOWN;
	}
	else if (position.y > 50){
    1b42:	83 33       	cpi	r24, 0x33	; 51
    1b44:	91 05       	cpc	r25, r1
    1b46:	8c f4       	brge	.+34     	; 0x1b6a <getJoyDir+0x42>
		return UP;
	}
	else if ((abs(position.x) < 5) && (abs(position.y) < 5)){
    1b48:	9b 01       	movw	r18, r22
    1b4a:	2c 5f       	subi	r18, 0xFC	; 252
    1b4c:	3f 4f       	sbci	r19, 0xFF	; 255
    1b4e:	29 30       	cpi	r18, 0x09	; 9
    1b50:	31 05       	cpc	r19, r1
    1b52:	68 f4       	brcc	.+26     	; 0x1b6e <getJoyDir+0x46>
    1b54:	04 96       	adiw	r24, 0x04	; 4
    1b56:	09 97       	sbiw	r24, 0x09	; 9
    1b58:	60 f0       	brcs	.+24     	; 0x1b72 <getJoyDir+0x4a>
		return NEUTRAL;
	}
	else{
		return NONE;
    1b5a:	85 e0       	ldi	r24, 0x05	; 5
    1b5c:	08 95       	ret
 */

DIR getJoyDir(){
	Joy_pos position = getJoyPos();
	if (position.x > 50){
		return RIGHT;
    1b5e:	82 e0       	ldi	r24, 0x02	; 2
    1b60:	08 95       	ret
	}
	else if (position.x < -50){
		return LEFT;
    1b62:	83 e0       	ldi	r24, 0x03	; 3
    1b64:	08 95       	ret
	}
	else if (position.y < -50){
		return DOWN;
    1b66:	81 e0       	ldi	r24, 0x01	; 1
    1b68:	08 95       	ret
	}
	else if (position.y > 50){
		return UP;
    1b6a:	80 e0       	ldi	r24, 0x00	; 0
    1b6c:	08 95       	ret
	}
	else if ((abs(position.x) < 5) && (abs(position.y) < 5)){
		return NEUTRAL;
	}
	else{
		return NONE;
    1b6e:	85 e0       	ldi	r24, 0x05	; 5
    1b70:	08 95       	ret
	}
	else if (position.y > 50){
		return UP;
	}
	else if ((abs(position.x) < 5) && (abs(position.y) < 5)){
		return NEUTRAL;
    1b72:	84 e0       	ldi	r24, 0x04	; 4
	}
	else{
		return NONE;
	}

}
    1b74:	08 95       	ret

00001b76 <rightButtonPressed>:
 *
 *  \return bool, returns true or false.
 */

bool rightButtonPressed(){	
	return (test_bit(PINB, PB0));
    1b76:	86 b3       	in	r24, 0x16	; 22
}
    1b78:	81 70       	andi	r24, 0x01	; 1
    1b7a:	08 95       	ret

00001b7c <leftButtonPressed>:
 *
 *  \return bool, returns true or false.
 */

bool leftButtonPressed(){
	return (test_bit(PINB, PB1));
    1b7c:	86 b3       	in	r24, 0x16	; 22
}
    1b7e:	86 95       	lsr	r24
    1b80:	81 70       	andi	r24, 0x01	; 1
    1b82:	08 95       	ret

00001b84 <joyStickButtonPressed>:
 *
 *  \return bool, returns true or false.
 */

bool joyStickButtonPressed(){
	bool pressed = !(test_bit(PINB, PB2));
    1b84:	86 b3       	in	r24, 0x16	; 22
    1b86:	82 fb       	bst	r24, 2
    1b88:	88 27       	eor	r24, r24
    1b8a:	80 f9       	bld	r24, 0
	return pressed;
}
    1b8c:	91 e0       	ldi	r25, 0x01	; 1
    1b8e:	89 27       	eor	r24, r25
    1b90:	08 95       	ret

00001b92 <IO_send_CAN>:
 *  \param DIR joystick_direction, takes in to send to NODE2.
 *
 *  \return void
 */

void IO_send_CAN(DIR joystick_direction){
    1b92:	cf 93       	push	r28
    1b94:	df 93       	push	r29
    1b96:	cd b7       	in	r28, 0x3d	; 61
    1b98:	de b7       	in	r29, 0x3e	; 62
    1b9a:	2b 97       	sbiw	r28, 0x0b	; 11
    1b9c:	0f b6       	in	r0, 0x3f	; 63
    1b9e:	f8 94       	cli
    1ba0:	de bf       	out	0x3e, r29	; 62
    1ba2:	0f be       	out	0x3f, r0	; 63
    1ba4:	cd bf       	out	0x3d, r28	; 61
	CAN_message msg;
	ID id = PLAYERINPUT;
	uint8_t length = 7;
	msg.id = id;
    1ba6:	1a 82       	std	Y+2, r1	; 0x02
    1ba8:	19 82       	std	Y+1, r1	; 0x01
	msg.length = length;
    1baa:	97 e0       	ldi	r25, 0x07	; 7
    1bac:	9b 83       	std	Y+3, r25	; 0x03
	msg.data[DIRECTION] = joystick_direction;
    1bae:	8c 83       	std	Y+4, r24	; 0x04
	msg.data[JOYSTICK_X] = ADC_read(2);
    1bb0:	82 e0       	ldi	r24, 0x02	; 2
    1bb2:	0e 94 df 0b 	call	0x17be	; 0x17be <ADC_read>
    1bb6:	8d 83       	std	Y+5, r24	; 0x05
	msg.data[JOYSTICK_Y] = ADC_read(1);
    1bb8:	81 e0       	ldi	r24, 0x01	; 1
    1bba:	0e 94 df 0b 	call	0x17be	; 0x17be <ADC_read>
    1bbe:	8e 83       	std	Y+6, r24	; 0x06
	//Saves and sends sliderposition:
	Slider_pos slider = getSliderPos();
    1bc0:	0e 94 58 0d 	call	0x1ab0	; 0x1ab0 <getSliderPos>
	msg.data[RIGHT_SLIDER] = slider.R;
    1bc4:	6f 83       	std	Y+7, r22	; 0x07
	msg.data[LEFT_SLIDER] = slider.L;
    1bc6:	88 87       	std	Y+8, r24	; 0x08
	msg.data[RIGHT_BUTTON] = rightButtonPressed();
    1bc8:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <rightButtonPressed>
    1bcc:	89 87       	std	Y+9, r24	; 0x09
	msg.data[LEFT_BUTTON] = leftButtonPressed();
    1bce:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <leftButtonPressed>
    1bd2:	8a 87       	std	Y+10, r24	; 0x0a
	CAN_message_send(&msg);
    1bd4:	ce 01       	movw	r24, r28
    1bd6:	01 96       	adiw	r24, 0x01	; 1
    1bd8:	0e 94 4e 0c 	call	0x189c	; 0x189c <CAN_message_send>
}
    1bdc:	2b 96       	adiw	r28, 0x0b	; 11
    1bde:	0f b6       	in	r0, 0x3f	; 63
    1be0:	f8 94       	cli
    1be2:	de bf       	out	0x3e, r29	; 62
    1be4:	0f be       	out	0x3f, r0	; 63
    1be6:	cd bf       	out	0x3d, r28	; 61
    1be8:	df 91       	pop	r29
    1bea:	cf 91       	pop	r28
    1bec:	08 95       	ret

00001bee <main>:
	MENU,
	GAME
} STATE;

int main(void)
{
    1bee:	cf 93       	push	r28
    1bf0:	df 93       	push	r29
    1bf2:	cd b7       	in	r28, 0x3d	; 61
    1bf4:	de b7       	in	r29, 0x3e	; 62
    1bf6:	60 97       	sbiw	r28, 0x10	; 16
    1bf8:	0f b6       	in	r0, 0x3f	; 63
    1bfa:	f8 94       	cli
    1bfc:	de bf       	out	0x3e, r29	; 62
    1bfe:	0f be       	out	0x3f, r0	; 63
    1c00:	cd bf       	out	0x3d, r28	; 61
	
	USART_init();
    1c02:	0e 94 29 15 	call	0x2a52	; 0x2a52 <USART_init>
	set_bit(MCUCR, SRE);
    1c06:	85 b7       	in	r24, 0x35	; 53
    1c08:	80 68       	ori	r24, 0x80	; 128
    1c0a:	85 bf       	out	0x35, r24	; 53
	set_bit(SFIOR,XMM2);
    1c0c:	80 b7       	in	r24, 0x30	; 48
    1c0e:	80 62       	ori	r24, 0x20	; 32
    1c10:	80 bf       	out	0x30, r24	; 48
	set_bit(MCUCR,SRW10);
    1c12:	85 b7       	in	r24, 0x35	; 53
    1c14:	80 64       	ori	r24, 0x40	; 64
    1c16:	85 bf       	out	0x35, r24	; 53
	set_bit(EMCUCR,SRW11);
    1c18:	86 b7       	in	r24, 0x36	; 54
    1c1a:	82 60       	ori	r24, 0x02	; 2
    1c1c:	86 bf       	out	0x36, r24	; 54
	
	
	set_bit(DDRD, 6); // Write pin Atmega, output
    1c1e:	8e 9a       	sbi	0x11, 6	; 17
	set_bit(DDRD, 7); // Read Pin Atmega, output
    1c20:	8f 9a       	sbi	0x11, 7	; 17
	set_bit(DDRE, 1); //Adresse Latch Enable
    1c22:	31 9a       	sbi	0x06, 1	; 6
	clear_bit(DDRB, 6);
    1c24:	be 98       	cbi	0x17, 6	; 23
	clear_bit(DDRB, 7);
    1c26:	bf 98       	cbi	0x17, 7	; 23
	clear_bit(DDRB, 8);
    1c28:	87 b3       	in	r24, 0x17	; 23
    1c2a:	87 bb       	out	0x17, r24	; 23
	ADC_init();
    1c2c:	0e 94 d3 0b 	call	0x17a6	; 0x17a6 <ADC_init>
	OLED_init();
    1c30:	0e 94 c5 12 	call	0x258a	; 0x258a <OLED_init>
	CAN_init();
    1c34:	0e 94 ed 0b 	call	0x17da	; 0x17da <CAN_init>
	joystick_init(); // NB! Must be initialized after CAN:
    1c38:	0e 94 67 0d 	call	0x1ace	; 0x1ace <joystick_init>
	MENU_init_menu();
    1c3c:	0e 94 12 0f 	call	0x1e24	; 0x1e24 <MENU_init_menu>
	
	
	DIR joystick_direction = NEUTRAL;
	MENU_print_menu();
    1c40:	0e 94 a2 10 	call	0x2144	; 0x2144 <MENU_print_menu>
	volatile game_settings settings;
	volatile uint8_t startgame = 0;
    1c44:	1d 82       	std	Y+5, r1	; 0x05
	STATE state= MENU;
    1c46:	d1 2c       	mov	r13, r1
							
							CAN_send_game_settings(settings);
							MENU_goto_main_menu();
							OLED_reset();
							OLED_print_pig();
							state = GAME;
    1c48:	bb 24       	eor	r11, r11
    1c4a:	b3 94       	inc	r11
				if (msg.id == GAMEOVER){
					GAME_print_finalscore(msg);
					while (!leftButtonPressed() && !rightButtonPressed() && !joyStickButtonPressed()){}
					//_delay_ms(2000);
					MENU_goto_main_menu();
					state = MENU;
    1c4c:	c1 2c       	mov	r12, r1
	volatile game_settings settings;
	volatile uint8_t startgame = 0;
	STATE state= MENU;
	volatile int score;
	while(1){
		switch(state){
    1c4e:	dd 20       	and	r13, r13
    1c50:	21 f0       	breq	.+8      	; 0x1c5a <main+0x6c>
    1c52:	21 e0       	ldi	r18, 0x01	; 1
    1c54:	d2 16       	cp	r13, r18
    1c56:	a1 f1       	breq	.+104    	; 0x1cc0 <main+0xd2>
    1c58:	fa cf       	rjmp	.-12     	; 0x1c4e <main+0x60>
			case MENU:
				joystick_direction = getJoyDir();
    1c5a:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <getJoyDir>
    1c5e:	18 2f       	mov	r17, r24
    1c60:	8f ef       	ldi	r24, 0xFF	; 255
    1c62:	9f e7       	ldi	r25, 0x7F	; 127
    1c64:	21 e0       	ldi	r18, 0x01	; 1
    1c66:	81 50       	subi	r24, 0x01	; 1
    1c68:	90 40       	sbci	r25, 0x00	; 0
    1c6a:	20 40       	sbci	r18, 0x00	; 0
    1c6c:	e1 f7       	brne	.-8      	; 0x1c66 <main+0x78>
    1c6e:	00 c0       	rjmp	.+0      	; 0x1c70 <main+0x82>
    1c70:	00 c0       	rjmp	.+0      	; 0x1c72 <main+0x84>
				_delay_ms(100);
		
				if (getJoyDir() != joystick_direction){
    1c72:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <getJoyDir>
    1c76:	81 17       	cp	r24, r17
    1c78:	51 f3       	breq	.-44     	; 0x1c4e <main+0x60>
    1c7a:	80 e0       	ldi	r24, 0x00	; 0
    1c7c:	90 ef       	ldi	r25, 0xF0	; 240
    1c7e:	01 97       	sbiw	r24, 0x01	; 1
    1c80:	f1 f7       	brne	.-4      	; 0x1c7e <main+0x90>
					_delay_ms(50);
					joystick_direction = getJoyDir();
    1c82:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <getJoyDir>
    1c86:	18 2f       	mov	r17, r24
					MENU_navigate(joystick_direction);
    1c88:	0e 94 07 11 	call	0x220e	; 0x220e <MENU_navigate>
			
					if (joystick_direction == RIGHT){
    1c8c:	12 30       	cpi	r17, 0x02	; 2
    1c8e:	f9 f6       	brne	.-66     	; 0x1c4e <main+0x60>
						MENU_selectAction(&settings, &startgame);
    1c90:	be 01       	movw	r22, r28
    1c92:	6b 5f       	subi	r22, 0xFB	; 251
    1c94:	7f 4f       	sbci	r23, 0xFF	; 255
    1c96:	ce 01       	movw	r24, r28
    1c98:	01 96       	adiw	r24, 0x01	; 1
    1c9a:	0e 94 6b 11 	call	0x22d6	; 0x22d6 <MENU_selectAction>
						if (startgame == 1){
    1c9e:	8d 81       	ldd	r24, Y+5	; 0x05
    1ca0:	81 30       	cpi	r24, 0x01	; 1
    1ca2:	a9 f6       	brne	.-86     	; 0x1c4e <main+0x60>
							
							CAN_send_game_settings(settings);
    1ca4:	69 81       	ldd	r22, Y+1	; 0x01
    1ca6:	7a 81       	ldd	r23, Y+2	; 0x02
    1ca8:	8b 81       	ldd	r24, Y+3	; 0x03
    1caa:	9c 81       	ldd	r25, Y+4	; 0x04
    1cac:	0e 94 77 0c 	call	0x18ee	; 0x18ee <CAN_send_game_settings>
							MENU_goto_main_menu();
    1cb0:	0e 94 58 11 	call	0x22b0	; 0x22b0 <MENU_goto_main_menu>
							OLED_reset();
    1cb4:	0e 94 a1 12 	call	0x2542	; 0x2542 <OLED_reset>
							OLED_print_pig();
    1cb8:	0e 94 c7 14 	call	0x298e	; 0x298e <OLED_print_pig>
							state = GAME;
    1cbc:	db 2c       	mov	r13, r11
    1cbe:	c7 cf       	rjmp	.-114    	; 0x1c4e <main+0x60>
					}
				}
				break;
				
			case GAME:
				joystick_direction = getJoyDir();
    1cc0:	0e 94 94 0d 	call	0x1b28	; 0x1b28 <getJoyDir>
				IO_send_CAN(joystick_direction);
    1cc4:	0e 94 c9 0d 	call	0x1b92	; 0x1b92 <IO_send_CAN>
				CAN_message msg;
				CAN_message_recieve(&msg);
    1cc8:	ce 01       	movw	r24, r28
    1cca:	06 96       	adiw	r24, 0x06	; 6
    1ccc:	0e 94 00 0c 	call	0x1800	; 0x1800 <CAN_message_recieve>
				
				if (msg.id == SENDSCORE){
    1cd0:	8e 81       	ldd	r24, Y+6	; 0x06
    1cd2:	9f 81       	ldd	r25, Y+7	; 0x07
    1cd4:	44 97       	sbiw	r24, 0x14	; 20
    1cd6:	69 f4       	brne	.+26     	; 0x1cf2 <main+0x104>
					GAME_print_score(msg);
    1cd8:	ee 80       	ldd	r14, Y+6	; 0x06
    1cda:	ff 80       	ldd	r15, Y+7	; 0x07
    1cdc:	08 85       	ldd	r16, Y+8	; 0x08
    1cde:	19 85       	ldd	r17, Y+9	; 0x09
    1ce0:	2a 85       	ldd	r18, Y+10	; 0x0a
    1ce2:	3b 85       	ldd	r19, Y+11	; 0x0b
    1ce4:	4c 85       	ldd	r20, Y+12	; 0x0c
    1ce6:	5d 85       	ldd	r21, Y+13	; 0x0d
    1ce8:	6e 85       	ldd	r22, Y+14	; 0x0e
    1cea:	7f 85       	ldd	r23, Y+15	; 0x0f
    1cec:	88 89       	ldd	r24, Y+16	; 0x10
    1cee:	0e 94 98 0c 	call	0x1930	; 0x1930 <GAME_print_score>

				}
				if (msg.id == GAMEOVER){
    1cf2:	8e 81       	ldd	r24, Y+6	; 0x06
    1cf4:	9f 81       	ldd	r25, Y+7	; 0x07
    1cf6:	45 97       	sbiw	r24, 0x15	; 21
    1cf8:	09 f0       	breq	.+2      	; 0x1cfc <main+0x10e>
    1cfa:	a9 cf       	rjmp	.-174    	; 0x1c4e <main+0x60>
					GAME_print_finalscore(msg);
    1cfc:	ee 80       	ldd	r14, Y+6	; 0x06
    1cfe:	ff 80       	ldd	r15, Y+7	; 0x07
    1d00:	08 85       	ldd	r16, Y+8	; 0x08
    1d02:	19 85       	ldd	r17, Y+9	; 0x09
    1d04:	2a 85       	ldd	r18, Y+10	; 0x0a
    1d06:	3b 85       	ldd	r19, Y+11	; 0x0b
    1d08:	4c 85       	ldd	r20, Y+12	; 0x0c
    1d0a:	5d 85       	ldd	r21, Y+13	; 0x0d
    1d0c:	6e 85       	ldd	r22, Y+14	; 0x0e
    1d0e:	7f 85       	ldd	r23, Y+15	; 0x0f
    1d10:	88 89       	ldd	r24, Y+16	; 0x10
    1d12:	0e 94 d1 0c 	call	0x19a2	; 0x19a2 <GAME_print_finalscore>
					while (!leftButtonPressed() && !rightButtonPressed() && !joyStickButtonPressed()){}
    1d16:	0e 94 be 0d 	call	0x1b7c	; 0x1b7c <leftButtonPressed>
    1d1a:	81 11       	cpse	r24, r1
    1d1c:	08 c0       	rjmp	.+16     	; 0x1d2e <main+0x140>
    1d1e:	0e 94 bb 0d 	call	0x1b76	; 0x1b76 <rightButtonPressed>
    1d22:	81 11       	cpse	r24, r1
    1d24:	04 c0       	rjmp	.+8      	; 0x1d2e <main+0x140>
    1d26:	0e 94 c2 0d 	call	0x1b84	; 0x1b84 <joyStickButtonPressed>
    1d2a:	88 23       	and	r24, r24
    1d2c:	a1 f3       	breq	.-24     	; 0x1d16 <main+0x128>
					//_delay_ms(2000);
					MENU_goto_main_menu();
    1d2e:	0e 94 58 11 	call	0x22b0	; 0x22b0 <MENU_goto_main_menu>
					state = MENU;
    1d32:	dc 2c       	mov	r13, r12
    1d34:	8c cf       	rjmp	.-232    	; 0x1c4e <main+0x60>

00001d36 <MCP2515_read>:
    1d36:	cf 93       	push	r28
    1d38:	c8 2f       	mov	r28, r24
    1d3a:	80 e0       	ldi	r24, 0x00	; 0
    1d3c:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <SPI_chipSelect>
    1d40:	83 e0       	ldi	r24, 0x03	; 3
    1d42:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <SPI_write>
    1d46:	8c 2f       	mov	r24, r28
    1d48:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <SPI_write>
    1d4c:	0e 94 0e 15 	call	0x2a1c	; 0x2a1c <SPI_read>
    1d50:	c8 2f       	mov	r28, r24
    1d52:	81 e0       	ldi	r24, 0x01	; 1
    1d54:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <SPI_chipSelect>
    1d58:	8c 2f       	mov	r24, r28
    1d5a:	cf 91       	pop	r28
    1d5c:	08 95       	ret

00001d5e <MCP2515_write>:
    1d5e:	cf 93       	push	r28
    1d60:	df 93       	push	r29
    1d62:	d8 2f       	mov	r29, r24
    1d64:	c6 2f       	mov	r28, r22
    1d66:	80 e0       	ldi	r24, 0x00	; 0
    1d68:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <SPI_chipSelect>
    1d6c:	82 e0       	ldi	r24, 0x02	; 2
    1d6e:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <SPI_write>
    1d72:	8d 2f       	mov	r24, r29
    1d74:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <SPI_write>
    1d78:	8c 2f       	mov	r24, r28
    1d7a:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <SPI_write>
    1d7e:	81 e0       	ldi	r24, 0x01	; 1
    1d80:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <SPI_chipSelect>
    1d84:	df 91       	pop	r29
    1d86:	cf 91       	pop	r28
    1d88:	08 95       	ret

00001d8a <MCP2515_requestToSend>:
    1d8a:	cf 93       	push	r28
    1d8c:	c8 2f       	mov	r28, r24
    1d8e:	80 e0       	ldi	r24, 0x00	; 0
    1d90:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <SPI_chipSelect>
    1d94:	8f e7       	ldi	r24, 0x7F	; 127
    1d96:	8c 0f       	add	r24, r28
    1d98:	82 30       	cpi	r24, 0x02	; 2
    1d9a:	20 f0       	brcs	.+8      	; 0x1da4 <MCP2515_requestToSend+0x1a>
    1d9c:	c4 38       	cpi	r28, 0x84	; 132
    1d9e:	11 f0       	breq	.+4      	; 0x1da4 <MCP2515_requestToSend+0x1a>
    1da0:	c7 38       	cpi	r28, 0x87	; 135
    1da2:	21 f4       	brne	.+8      	; 0x1dac <MCP2515_requestToSend+0x22>
    1da4:	8c 2f       	mov	r24, r28
    1da6:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <SPI_write>
    1daa:	0c c0       	rjmp	.+24     	; 0x1dc4 <MCP2515_requestToSend+0x3a>
    1dac:	0e 94 c7 14 	call	0x298e	; 0x298e <OLED_print_pig>
    1db0:	2a e2       	ldi	r18, 0x2A	; 42
    1db2:	30 e5       	ldi	r19, 0x50	; 80
    1db4:	8e ef       	ldi	r24, 0xFE	; 254
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	21 50       	subi	r18, 0x01	; 1
    1dba:	30 40       	sbci	r19, 0x00	; 0
    1dbc:	80 40       	sbci	r24, 0x00	; 0
    1dbe:	90 40       	sbci	r25, 0x00	; 0
    1dc0:	d9 f7       	brne	.-10     	; 0x1db8 <MCP2515_requestToSend+0x2e>
    1dc2:	00 00       	nop
    1dc4:	81 e0       	ldi	r24, 0x01	; 1
    1dc6:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <SPI_chipSelect>
    1dca:	cf 91       	pop	r28
    1dcc:	08 95       	ret

00001dce <MCP2515_bitModify>:
    1dce:	1f 93       	push	r17
    1dd0:	cf 93       	push	r28
    1dd2:	df 93       	push	r29
    1dd4:	18 2f       	mov	r17, r24
    1dd6:	d6 2f       	mov	r29, r22
    1dd8:	c4 2f       	mov	r28, r20
    1dda:	80 e0       	ldi	r24, 0x00	; 0
    1ddc:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <SPI_chipSelect>
    1de0:	85 e0       	ldi	r24, 0x05	; 5
    1de2:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <SPI_write>
    1de6:	81 2f       	mov	r24, r17
    1de8:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <SPI_write>
    1dec:	8d 2f       	mov	r24, r29
    1dee:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <SPI_write>
    1df2:	8c 2f       	mov	r24, r28
    1df4:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <SPI_write>
    1df8:	81 e0       	ldi	r24, 0x01	; 1
    1dfa:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <SPI_chipSelect>
    1dfe:	df 91       	pop	r29
    1e00:	cf 91       	pop	r28
    1e02:	1f 91       	pop	r17
    1e04:	08 95       	ret

00001e06 <MCP2515_reset>:
    1e06:	80 e0       	ldi	r24, 0x00	; 0
    1e08:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <SPI_chipSelect>
    1e0c:	80 ec       	ldi	r24, 0xC0	; 192
    1e0e:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <SPI_write>
    1e12:	81 e0       	ldi	r24, 0x01	; 1
    1e14:	0e 94 1b 15 	call	0x2a36	; 0x2a36 <SPI_chipSelect>
    1e18:	08 95       	ret

00001e1a <MCP2515_init>:
    1e1a:	0e 94 13 15 	call	0x2a26	; 0x2a26 <SPI_init>
    1e1e:	0e 94 03 0f 	call	0x1e06	; 0x1e06 <MCP2515_reset>
    1e22:	08 95       	ret

00001e24 <MENU_init_menu>:
 *  \param void
 *
 *  \return void
 */

void MENU_init_menu(){
    1e24:	8f 92       	push	r8
    1e26:	9f 92       	push	r9
    1e28:	af 92       	push	r10
    1e2a:	bf 92       	push	r11
    1e2c:	cf 92       	push	r12
    1e2e:	df 92       	push	r13
    1e30:	ef 92       	push	r14
    1e32:	ff 92       	push	r15
    1e34:	0f 93       	push	r16
    1e36:	1f 93       	push	r17
    1e38:	cf 93       	push	r28
    1e3a:	df 93       	push	r29
	
	main.name = "MainMenu";
    1e3c:	0f 2e       	mov	r0, r31
    1e3e:	ff e3       	ldi	r31, 0x3F	; 63
    1e40:	8f 2e       	mov	r8, r31
    1e42:	f3 e0       	ldi	r31, 0x03	; 3
    1e44:	9f 2e       	mov	r9, r31
    1e46:	f0 2d       	mov	r31, r0
    1e48:	88 e2       	ldi	r24, 0x28	; 40
    1e4a:	91 e0       	ldi	r25, 0x01	; 1
    1e4c:	d4 01       	movw	r26, r8
    1e4e:	8d 93       	st	X+, r24
    1e50:	9c 93       	st	X, r25
	main.parent = NULL;
    1e52:	10 92 42 03 	sts	0x0342, r1
    1e56:	10 92 41 03 	sts	0x0341, r1
	main.child[1] = &newGame;
    1e5a:	ce e2       	ldi	r28, 0x2E	; 46
    1e5c:	d3 e0       	ldi	r29, 0x03	; 3
    1e5e:	d0 93 46 03 	sts	0x0346, r29
    1e62:	c0 93 45 03 	sts	0x0345, r28
	main.child[2] = &HighScores;
    1e66:	8d e1       	ldi	r24, 0x1D	; 29
    1e68:	93 e0       	ldi	r25, 0x03	; 3
    1e6a:	90 93 48 03 	sts	0x0348, r25
    1e6e:	80 93 47 03 	sts	0x0347, r24
	main.child[3] = &Options;
    1e72:	ec e0       	ldi	r30, 0x0C	; 12
    1e74:	f3 e0       	ldi	r31, 0x03	; 3
    1e76:	f0 93 4a 03 	sts	0x034A, r31
    1e7a:	e0 93 49 03 	sts	0x0349, r30
	main.child[4] = &Credits;
    1e7e:	47 eb       	ldi	r20, 0xB7	; 183
    1e80:	52 e0       	ldi	r21, 0x02	; 2
    1e82:	50 93 4c 03 	sts	0x034C, r21
    1e86:	40 93 4b 03 	sts	0x034B, r20
	main.nmbrChilds = 4;
    1e8a:	68 94       	set
    1e8c:	ff 24       	eor	r15, r15
    1e8e:	f2 f8       	bld	r15, 2
    1e90:	f0 92 4f 03 	sts	0x034F, r15
	
	//main menu children
	newGame.name = "New Game";
    1e94:	21 e3       	ldi	r18, 0x31	; 49
    1e96:	31 e0       	ldi	r19, 0x01	; 1
    1e98:	39 83       	std	Y+1, r19	; 0x01
    1e9a:	28 83       	st	Y, r18
	newGame.parent = &main;
    1e9c:	90 92 31 03 	sts	0x0331, r9
    1ea0:	80 92 30 03 	sts	0x0330, r8
	newGame.child[1] = &easyGame;
    1ea4:	0a ee       	ldi	r16, 0xEA	; 234
    1ea6:	12 e0       	ldi	r17, 0x02	; 2
    1ea8:	10 93 35 03 	sts	0x0335, r17
    1eac:	00 93 34 03 	sts	0x0334, r16
	newGame.child[2] = &normalGame;
    1eb0:	69 ed       	ldi	r22, 0xD9	; 217
    1eb2:	72 e0       	ldi	r23, 0x02	; 2
    1eb4:	70 93 37 03 	sts	0x0337, r23
    1eb8:	60 93 36 03 	sts	0x0336, r22
	newGame.child[3] = &hardGame;
    1ebc:	28 ec       	ldi	r18, 0xC8	; 200
    1ebe:	32 e0       	ldi	r19, 0x02	; 2
    1ec0:	30 93 39 03 	sts	0x0339, r19
    1ec4:	20 93 38 03 	sts	0x0338, r18
	newGame.nmbrChilds = 3;	
    1ec8:	0f 2e       	mov	r0, r31
    1eca:	f3 e0       	ldi	r31, 0x03	; 3
    1ecc:	af 2e       	mov	r10, r31
    1ece:	f0 2d       	mov	r31, r0
    1ed0:	a0 92 3e 03 	sts	0x033E, r10
	
		//New game children
 		easyGame.name = "Easy";
    1ed4:	0f 2e       	mov	r0, r31
    1ed6:	fa e3       	ldi	r31, 0x3A	; 58
    1ed8:	cf 2e       	mov	r12, r31
    1eda:	f1 e0       	ldi	r31, 0x01	; 1
    1edc:	df 2e       	mov	r13, r31
    1ede:	f0 2d       	mov	r31, r0
    1ee0:	d8 01       	movw	r26, r16
    1ee2:	cd 92       	st	X+, r12
    1ee4:	dc 92       	st	X, r13
 		easyGame.parent = &newGame;
    1ee6:	d0 93 ed 02 	sts	0x02ED, r29
    1eea:	c0 93 ec 02 	sts	0x02EC, r28
 		easyGame.nmbrChilds = 0;
    1eee:	10 92 fa 02 	sts	0x02FA, r1

 		
 		normalGame.name = "Normal";
    1ef2:	0f e3       	ldi	r16, 0x3F	; 63
    1ef4:	11 e0       	ldi	r17, 0x01	; 1
    1ef6:	db 01       	movw	r26, r22
    1ef8:	0d 93       	st	X+, r16
    1efa:	1c 93       	st	X, r17
 		normalGame.parent = &newGame;
    1efc:	d0 93 dc 02 	sts	0x02DC, r29
    1f00:	c0 93 db 02 	sts	0x02DB, r28
 		normalGame.nmbrChilds = 0;
    1f04:	10 92 e9 02 	sts	0x02E9, r1
 		
 		hardGame.name = "Hard";
    1f08:	66 e4       	ldi	r22, 0x46	; 70
    1f0a:	71 e0       	ldi	r23, 0x01	; 1
    1f0c:	d9 01       	movw	r26, r18
    1f0e:	6d 93       	st	X+, r22
    1f10:	7c 93       	st	X, r23
 		hardGame.parent = &newGame;
    1f12:	d0 93 cb 02 	sts	0x02CB, r29
    1f16:	c0 93 ca 02 	sts	0x02CA, r28
 		hardGame.nmbrChilds = 0;
    1f1a:	10 92 d8 02 	sts	0x02D8, r1
	
	HighScores.name = "High Scores";
    1f1e:	2b e4       	ldi	r18, 0x4B	; 75
    1f20:	31 e0       	ldi	r19, 0x01	; 1
    1f22:	dc 01       	movw	r26, r24
    1f24:	2d 93       	st	X+, r18
    1f26:	3c 93       	st	X, r19
	HighScores.parent = &main;
    1f28:	90 92 20 03 	sts	0x0320, r9
    1f2c:	80 92 1f 03 	sts	0x031F, r8
	HighScores.nmbrChilds = 0;
    1f30:	10 92 2d 03 	sts	0x032D, r1

	Options.name = "Options";
    1f34:	87 e5       	ldi	r24, 0x57	; 87
    1f36:	91 e0       	ldi	r25, 0x01	; 1
    1f38:	91 83       	std	Z+1, r25	; 0x01
    1f3a:	80 83       	st	Z, r24
	Options.parent = &main;
    1f3c:	90 92 0f 03 	sts	0x030F, r9
    1f40:	80 92 0e 03 	sts	0x030E, r8
	Options.child[1] = &Controller;
    1f44:	26 ea       	ldi	r18, 0xA6	; 166
    1f46:	32 e0       	ldi	r19, 0x02	; 2
    1f48:	30 93 13 03 	sts	0x0313, r19
    1f4c:	20 93 12 03 	sts	0x0312, r18
	Options.child[2] = &Sound;
    1f50:	63 e7       	ldi	r22, 0x73	; 115
    1f52:	72 e0       	ldi	r23, 0x02	; 2
    1f54:	70 93 15 03 	sts	0x0315, r23
    1f58:	60 93 14 03 	sts	0x0314, r22
	Options.child[3] = &SolenoidMode;
    1f5c:	c2 e6       	ldi	r28, 0x62	; 98
    1f5e:	d2 e0       	ldi	r29, 0x02	; 2
    1f60:	d0 93 17 03 	sts	0x0317, r29
    1f64:	c0 93 16 03 	sts	0x0316, r28
	Options.child[4] = &InvertedMode;
    1f68:	81 e5       	ldi	r24, 0x51	; 81
    1f6a:	92 e0       	ldi	r25, 0x02	; 2
    1f6c:	90 93 19 03 	sts	0x0319, r25
    1f70:	80 93 18 03 	sts	0x0318, r24
	Options.nmbrChilds = 4;
    1f74:	f0 92 1c 03 	sts	0x031C, r15

		//options children
		Controller.name = "Controller sel";
    1f78:	0f e5       	ldi	r16, 0x5F	; 95
    1f7a:	11 e0       	ldi	r17, 0x01	; 1
    1f7c:	d9 01       	movw	r26, r18
    1f7e:	0d 93       	st	X+, r16
    1f80:	1c 93       	st	X, r17
		Controller.parent = &Options;
    1f82:	f0 93 a9 02 	sts	0x02A9, r31
    1f86:	e0 93 a8 02 	sts	0x02A8, r30
		Controller.child[1] = &SpeedController;
    1f8a:	0f 2e       	mov	r0, r31
    1f8c:	f5 e9       	ldi	r31, 0x95	; 149
    1f8e:	ef 2e       	mov	r14, r31
    1f90:	f2 e0       	ldi	r31, 0x02	; 2
    1f92:	ff 2e       	mov	r15, r31
    1f94:	f0 2d       	mov	r31, r0
    1f96:	f0 92 ad 02 	sts	0x02AD, r15
    1f9a:	e0 92 ac 02 	sts	0x02AC, r14
		Controller.child[2] = &PositionController;
    1f9e:	04 e8       	ldi	r16, 0x84	; 132
    1fa0:	12 e0       	ldi	r17, 0x02	; 2
    1fa2:	10 93 af 02 	sts	0x02AF, r17
    1fa6:	00 93 ae 02 	sts	0x02AE, r16
		Controller.nmbrChilds = 2;
    1faa:	68 94       	set
    1fac:	bb 24       	eor	r11, r11
    1fae:	b1 f8       	bld	r11, 1
    1fb0:	b0 92 b6 02 	sts	0x02B6, r11
			
			//Controller children
			SpeedController.name = "Speed";
    1fb4:	0f 2e       	mov	r0, r31
    1fb6:	fe e6       	ldi	r31, 0x6E	; 110
    1fb8:	cf 2e       	mov	r12, r31
    1fba:	f1 e0       	ldi	r31, 0x01	; 1
    1fbc:	df 2e       	mov	r13, r31
    1fbe:	f0 2d       	mov	r31, r0
    1fc0:	d7 01       	movw	r26, r14
    1fc2:	cd 92       	st	X+, r12
    1fc4:	dc 92       	st	X, r13
			SpeedController.parent = &Controller;
    1fc6:	30 93 98 02 	sts	0x0298, r19
    1fca:	20 93 97 02 	sts	0x0297, r18
			SpeedController.nmbrChilds = 0;
    1fce:	10 92 a5 02 	sts	0x02A5, r1

			PositionController.name = "Position";
    1fd2:	0f 2e       	mov	r0, r31
    1fd4:	f4 e7       	ldi	r31, 0x74	; 116
    1fd6:	ef 2e       	mov	r14, r31
    1fd8:	f1 e0       	ldi	r31, 0x01	; 1
    1fda:	ff 2e       	mov	r15, r31
    1fdc:	f0 2d       	mov	r31, r0
    1fde:	d8 01       	movw	r26, r16
    1fe0:	ed 92       	st	X+, r14
    1fe2:	fc 92       	st	X, r15
			PositionController.parent = &Controller;
    1fe4:	30 93 87 02 	sts	0x0287, r19
    1fe8:	20 93 86 02 	sts	0x0286, r18
			PositionController.nmbrChilds = 0;
    1fec:	10 92 94 02 	sts	0x0294, r1
			
		
		SolenoidMode.name = "Solenoid Mode";
    1ff0:	2d e7       	ldi	r18, 0x7D	; 125
    1ff2:	31 e0       	ldi	r19, 0x01	; 1
    1ff4:	39 83       	std	Y+1, r19	; 0x01
    1ff6:	28 83       	st	Y, r18
		SolenoidMode.parent = &Options;
    1ff8:	f0 93 65 02 	sts	0x0265, r31
    1ffc:	e0 93 64 02 	sts	0x0264, r30
		SolenoidMode.child[1] = &SolenoidSemi;
    2000:	0f 2e       	mov	r0, r31
    2002:	ff e2       	ldi	r31, 0x2F	; 47
    2004:	ef 2e       	mov	r14, r31
    2006:	f2 e0       	ldi	r31, 0x02	; 2
    2008:	ff 2e       	mov	r15, r31
    200a:	f0 2d       	mov	r31, r0
    200c:	f0 92 69 02 	sts	0x0269, r15
    2010:	e0 92 68 02 	sts	0x0268, r14
		SolenoidMode.child[2] = &SolenoidAuto;
    2014:	00 e4       	ldi	r16, 0x40	; 64
    2016:	12 e0       	ldi	r17, 0x02	; 2
    2018:	10 93 6b 02 	sts	0x026B, r17
    201c:	00 93 6a 02 	sts	0x026A, r16
		SolenoidMode.child[3] = &SolenoidToggleAuto;
    2020:	2e e1       	ldi	r18, 0x1E	; 30
    2022:	32 e0       	ldi	r19, 0x02	; 2
    2024:	30 93 6d 02 	sts	0x026D, r19
    2028:	20 93 6c 02 	sts	0x026C, r18
		SolenoidMode.nmbrChilds = 3;
    202c:	a0 92 72 02 	sts	0x0272, r10
	
			//SolenoidMode children
			SolenoidSemi.name = "Semi Auto";
    2030:	0f 2e       	mov	r0, r31
    2032:	fb e8       	ldi	r31, 0x8B	; 139
    2034:	cf 2e       	mov	r12, r31
    2036:	f1 e0       	ldi	r31, 0x01	; 1
    2038:	df 2e       	mov	r13, r31
    203a:	f0 2d       	mov	r31, r0
    203c:	d7 01       	movw	r26, r14
    203e:	cd 92       	st	X+, r12
    2040:	dc 92       	st	X, r13
			SolenoidSemi.parent = &SolenoidMode;
    2042:	d0 93 32 02 	sts	0x0232, r29
    2046:	c0 93 31 02 	sts	0x0231, r28
			SolenoidSemi.nmbrChilds = 0;
    204a:	10 92 3f 02 	sts	0x023F, r1
			
			SolenoidAuto.name = "Auto";
    204e:	0f 2e       	mov	r0, r31
    2050:	fc e9       	ldi	r31, 0x9C	; 156
    2052:	ef 2e       	mov	r14, r31
    2054:	f1 e0       	ldi	r31, 0x01	; 1
    2056:	ff 2e       	mov	r15, r31
    2058:	f0 2d       	mov	r31, r0
    205a:	d8 01       	movw	r26, r16
    205c:	ed 92       	st	X+, r14
    205e:	fc 92       	st	X, r15
			SolenoidAuto.parent = &SolenoidMode;
    2060:	d0 93 43 02 	sts	0x0243, r29
    2064:	c0 93 42 02 	sts	0x0242, r28
			SolenoidAuto.nmbrChilds = 0;
    2068:	10 92 50 02 	sts	0x0250, r1
	
			SolenoidToggleAuto.name = "Toggle Auto";
    206c:	05 e9       	ldi	r16, 0x95	; 149
    206e:	11 e0       	ldi	r17, 0x01	; 1
    2070:	d9 01       	movw	r26, r18
    2072:	0d 93       	st	X+, r16
    2074:	1c 93       	st	X, r17
			SolenoidToggleAuto.parent = &SolenoidMode;
    2076:	d0 93 21 02 	sts	0x0221, r29
    207a:	c0 93 20 02 	sts	0x0220, r28
			SolenoidToggleAuto.nmbrChilds = 0;
    207e:	10 92 2e 02 	sts	0x022E, r1
	
		InvertedMode.name = "Inverted Mode";
    2082:	21 ea       	ldi	r18, 0xA1	; 161
    2084:	31 e0       	ldi	r19, 0x01	; 1
    2086:	dc 01       	movw	r26, r24
    2088:	2d 93       	st	X+, r18
    208a:	3c 93       	st	X, r19
		InvertedMode.parent = &Options;
    208c:	f0 93 54 02 	sts	0x0254, r31
    2090:	e0 93 53 02 	sts	0x0253, r30
		InvertedMode.child[1] = &NonInverted;
    2094:	2d e0       	ldi	r18, 0x0D	; 13
    2096:	32 e0       	ldi	r19, 0x02	; 2
    2098:	30 93 58 02 	sts	0x0258, r19
    209c:	20 93 57 02 	sts	0x0257, r18
		InvertedMode.child[2] = &Inverted;
    20a0:	cc ef       	ldi	r28, 0xFC	; 252
    20a2:	d1 e0       	ldi	r29, 0x01	; 1
    20a4:	d0 93 5a 02 	sts	0x025A, r29
    20a8:	c0 93 59 02 	sts	0x0259, r28
		InvertedMode.nmbrChilds = 2;
    20ac:	b0 92 61 02 	sts	0x0261, r11
		
			//InvertedMode children
			NonInverted.name = "Non Inverted";
    20b0:	0f ea       	ldi	r16, 0xAF	; 175
    20b2:	11 e0       	ldi	r17, 0x01	; 1
    20b4:	d9 01       	movw	r26, r18
    20b6:	0d 93       	st	X+, r16
    20b8:	1c 93       	st	X, r17
			NonInverted.parent = &InvertedMode;
    20ba:	90 93 10 02 	sts	0x0210, r25
    20be:	80 93 0f 02 	sts	0x020F, r24
			NonInverted.nmbrChilds = 0;
    20c2:	10 92 1d 02 	sts	0x021D, r1
			
			Inverted.name = "Inverted";
    20c6:	23 eb       	ldi	r18, 0xB3	; 179
    20c8:	31 e0       	ldi	r19, 0x01	; 1
    20ca:	39 83       	std	Y+1, r19	; 0x01
    20cc:	28 83       	st	Y, r18
			Inverted.parent = &InvertedMode;
    20ce:	90 93 ff 01 	sts	0x01FF, r25
    20d2:	80 93 fe 01 	sts	0x01FE, r24
			Inverted.nmbrChilds = 0;
    20d6:	10 92 0c 02 	sts	0x020C, r1
			
	
	Sound.name = "Sound";
    20da:	8c eb       	ldi	r24, 0xBC	; 188
    20dc:	91 e0       	ldi	r25, 0x01	; 1
    20de:	db 01       	movw	r26, r22
    20e0:	8d 93       	st	X+, r24
    20e2:	9c 93       	st	X, r25
	Sound.parent = &Options;
    20e4:	f0 93 76 02 	sts	0x0276, r31
    20e8:	e0 93 75 02 	sts	0x0275, r30
	Sound.nmbrChilds = 0;
    20ec:	10 92 83 02 	sts	0x0283, r1
	
	Credits.name = "Credits";
    20f0:	82 ec       	ldi	r24, 0xC2	; 194
    20f2:	91 e0       	ldi	r25, 0x01	; 1
    20f4:	fa 01       	movw	r30, r20
    20f6:	91 83       	std	Z+1, r25	; 0x01
    20f8:	80 83       	st	Z, r24
	Credits.parent = &main;
    20fa:	90 92 ba 02 	sts	0x02BA, r9
    20fe:	80 92 b9 02 	sts	0x02B9, r8
	Credits.nmbrChilds = 0;	
    2102:	10 92 c7 02 	sts	0x02C7, r1
	
	currentMenu = main;
    2106:	81 e1       	ldi	r24, 0x11	; 17
    2108:	f4 01       	movw	r30, r8
    210a:	ab ef       	ldi	r26, 0xFB	; 251
    210c:	b2 e0       	ldi	r27, 0x02	; 2
    210e:	01 90       	ld	r0, Z+
    2110:	0d 92       	st	X+, r0
    2112:	8a 95       	dec	r24
    2114:	e1 f7       	brne	.-8      	; 0x210e <MENU_init_menu+0x2ea>
	OLED_go_to_pos(1, 0);
    2116:	60 e0       	ldi	r22, 0x00	; 0
    2118:	81 e0       	ldi	r24, 0x01	; 1
    211a:	0e 94 59 12 	call	0x24b2	; 0x24b2 <OLED_go_to_pos>
	markerPage = 1;	
    211e:	81 e0       	ldi	r24, 0x01	; 1
    2120:	80 93 54 03 	sts	0x0354, r24
	OLED_print_char((uint8_t)(36));	
    2124:	84 e2       	ldi	r24, 0x24	; 36
    2126:	0e 94 15 12 	call	0x242a	; 0x242a <OLED_print_char>
}
    212a:	df 91       	pop	r29
    212c:	cf 91       	pop	r28
    212e:	1f 91       	pop	r17
    2130:	0f 91       	pop	r16
    2132:	ff 90       	pop	r15
    2134:	ef 90       	pop	r14
    2136:	df 90       	pop	r13
    2138:	cf 90       	pop	r12
    213a:	bf 90       	pop	r11
    213c:	af 90       	pop	r10
    213e:	9f 90       	pop	r9
    2140:	8f 90       	pop	r8
    2142:	08 95       	ret

00002144 <MENU_print_menu>:
 *  \param void
 *
 *  \return void
 */

void MENU_print_menu(){
    2144:	ef 92       	push	r14
    2146:	ff 92       	push	r15
    2148:	0f 93       	push	r16
    214a:	1f 93       	push	r17
    214c:	cf 93       	push	r28
    214e:	df 93       	push	r29
	OLED_go_to_pos(0, 10);
    2150:	6a e0       	ldi	r22, 0x0A	; 10
    2152:	80 e0       	ldi	r24, 0x00	; 0
    2154:	0e 94 59 12 	call	0x24b2	; 0x24b2 <OLED_go_to_pos>
	OLED_print_sentence("*");
    2158:	8a ec       	ldi	r24, 0xCA	; 202
    215a:	91 e0       	ldi	r25, 0x01	; 1
    215c:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
	OLED_print_sentence(currentMenu.name);
    2160:	80 91 fb 02 	lds	r24, 0x02FB
    2164:	90 91 fc 02 	lds	r25, 0x02FC
    2168:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
	OLED_print_sentence("*");
    216c:	8a ec       	ldi	r24, 0xCA	; 202
    216e:	91 e0       	ldi	r25, 0x01	; 1
    2170:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
	for (int i = 1; i < currentMenu.nmbrChilds+1; i++){
    2174:	80 91 0b 03 	lds	r24, 0x030B
    2178:	90 e0       	ldi	r25, 0x00	; 0
    217a:	01 96       	adiw	r24, 0x01	; 1
    217c:	02 97       	sbiw	r24, 0x02	; 2
    217e:	f4 f0       	brlt	.+60     	; 0x21bc <MENU_print_menu+0x78>
    2180:	01 e0       	ldi	r16, 0x01	; 1
    2182:	13 e0       	ldi	r17, 0x03	; 3
    2184:	c1 e0       	ldi	r28, 0x01	; 1
    2186:	d0 e0       	ldi	r29, 0x00	; 0
    2188:	0f 2e       	mov	r0, r31
    218a:	fb e0       	ldi	r31, 0x0B	; 11
    218c:	ef 2e       	mov	r14, r31
    218e:	f3 e0       	ldi	r31, 0x03	; 3
    2190:	ff 2e       	mov	r15, r31
    2192:	f0 2d       	mov	r31, r0
		
		OLED_go_to_pos(i, 10);
    2194:	6a e0       	ldi	r22, 0x0A	; 10
    2196:	8c 2f       	mov	r24, r28
    2198:	0e 94 59 12 	call	0x24b2	; 0x24b2 <OLED_go_to_pos>
		OLED_print_sentence(currentMenu.child[i]->name);
    219c:	d8 01       	movw	r26, r16
    219e:	ed 91       	ld	r30, X+
    21a0:	fd 91       	ld	r31, X+
    21a2:	8d 01       	movw	r16, r26
    21a4:	80 81       	ld	r24, Z
    21a6:	91 81       	ldd	r25, Z+1	; 0x01
    21a8:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
void MENU_print_menu(){
	OLED_go_to_pos(0, 10);
	OLED_print_sentence("*");
	OLED_print_sentence(currentMenu.name);
	OLED_print_sentence("*");
	for (int i = 1; i < currentMenu.nmbrChilds+1; i++){
    21ac:	21 96       	adiw	r28, 0x01	; 1
    21ae:	f7 01       	movw	r30, r14
    21b0:	80 81       	ld	r24, Z
    21b2:	90 e0       	ldi	r25, 0x00	; 0
    21b4:	01 96       	adiw	r24, 0x01	; 1
    21b6:	c8 17       	cp	r28, r24
    21b8:	d9 07       	cpc	r29, r25
    21ba:	64 f3       	brlt	.-40     	; 0x2194 <MENU_print_menu+0x50>
		OLED_go_to_pos(i, 10);
		OLED_print_sentence(currentMenu.child[i]->name);

	}

}
    21bc:	df 91       	pop	r29
    21be:	cf 91       	pop	r28
    21c0:	1f 91       	pop	r17
    21c2:	0f 91       	pop	r16
    21c4:	ff 90       	pop	r15
    21c6:	ef 90       	pop	r14
    21c8:	08 95       	ret

000021ca <MENU_selectLine>:
 *
 *  \return void
 */

void MENU_selectLine(uint8_t line){
	OLED_go_to_pos(line, 0);
    21ca:	60 e0       	ldi	r22, 0x00	; 0
    21cc:	0e 94 59 12 	call	0x24b2	; 0x24b2 <OLED_go_to_pos>
	OLED_print_char((uint8_t)(36));
    21d0:	84 e2       	ldi	r24, 0x24	; 36
    21d2:	0e 94 15 12 	call	0x242a	; 0x242a <OLED_print_char>
    21d6:	08 95       	ret

000021d8 <MENU_clearLine>:
 *
 *  \return void
 */

void MENU_clearLine(uint8_t line){
	OLED_go_to_pos(line, 0);
    21d8:	60 e0       	ldi	r22, 0x00	; 0
    21da:	0e 94 59 12 	call	0x24b2	; 0x24b2 <OLED_go_to_pos>
	OLED_clear_char();
    21de:	0e 94 0a 12 	call	0x2414	; 0x2414 <OLED_clear_char>
    21e2:	08 95       	ret

000021e4 <MENU_goto_parent_menu>:
		}
	}
}

void MENU_goto_parent_menu(){
	currentMenu = *currentMenu.parent;
    21e4:	e0 91 fd 02 	lds	r30, 0x02FD
    21e8:	f0 91 fe 02 	lds	r31, 0x02FE
    21ec:	81 e1       	ldi	r24, 0x11	; 17
    21ee:	ab ef       	ldi	r26, 0xFB	; 251
    21f0:	b2 e0       	ldi	r27, 0x02	; 2
    21f2:	01 90       	ld	r0, Z+
    21f4:	0d 92       	st	X+, r0
    21f6:	8a 95       	dec	r24
    21f8:	e1 f7       	brne	.-8      	; 0x21f2 <MENU_goto_parent_menu+0xe>
	OLED_reset();
    21fa:	0e 94 a1 12 	call	0x2542	; 0x2542 <OLED_reset>
	MENU_print_menu();
    21fe:	0e 94 a2 10 	call	0x2144	; 0x2144 <MENU_print_menu>
	markerPage = 1;
    2202:	81 e0       	ldi	r24, 0x01	; 1
    2204:	80 93 54 03 	sts	0x0354, r24
	MENU_selectLine(markerPage);
    2208:	0e 94 e5 10 	call	0x21ca	; 0x21ca <MENU_selectLine>
    220c:	08 95       	ret

0000220e <MENU_navigate>:
 *  \return void
 */

void MENU_navigate(DIR direction){
	
	if (direction == UP){
    220e:	81 11       	cpse	r24, r1
    2210:	0f c0       	rjmp	.+30     	; 0x2230 <MENU_navigate+0x22>
		if (markerPage > 1){
    2212:	80 91 54 03 	lds	r24, 0x0354
    2216:	82 30       	cpi	r24, 0x02	; 2
    2218:	08 f4       	brcc	.+2      	; 0x221c <MENU_navigate+0xe>
    221a:	49 c0       	rjmp	.+146    	; 0x22ae <MENU_navigate+0xa0>
			MENU_clearLine(markerPage);
    221c:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <MENU_clearLine>
			markerPage--;
    2220:	80 91 54 03 	lds	r24, 0x0354
    2224:	81 50       	subi	r24, 0x01	; 1
    2226:	80 93 54 03 	sts	0x0354, r24
			MENU_selectLine(markerPage);	
    222a:	0e 94 e5 10 	call	0x21ca	; 0x21ca <MENU_selectLine>
    222e:	08 95       	ret
		}
	}
	
	else if (direction == DOWN){
    2230:	81 30       	cpi	r24, 0x01	; 1
    2232:	81 f4       	brne	.+32     	; 0x2254 <MENU_navigate+0x46>
		if (markerPage < currentMenu.nmbrChilds){
    2234:	80 91 54 03 	lds	r24, 0x0354
    2238:	90 91 0b 03 	lds	r25, 0x030B
    223c:	89 17       	cp	r24, r25
    223e:	b8 f5       	brcc	.+110    	; 0x22ae <MENU_navigate+0xa0>
			MENU_clearLine(markerPage);
    2240:	0e 94 ec 10 	call	0x21d8	; 0x21d8 <MENU_clearLine>
			markerPage++;
    2244:	80 91 54 03 	lds	r24, 0x0354
    2248:	8f 5f       	subi	r24, 0xFF	; 255
    224a:	80 93 54 03 	sts	0x0354, r24
			MENU_selectLine(markerPage);
    224e:	0e 94 e5 10 	call	0x21ca	; 0x21ca <MENU_selectLine>
    2252:	08 95       	ret
	}	
}
		else if(direction == RIGHT){
    2254:	82 30       	cpi	r24, 0x02	; 2
    2256:	09 f5       	brne	.+66     	; 0x229a <MENU_navigate+0x8c>
			if ((markerPage <= currentMenu.nmbrChilds) && (markerPage != 0)){
    2258:	e0 91 54 03 	lds	r30, 0x0354
    225c:	80 91 0b 03 	lds	r24, 0x030B
    2260:	8e 17       	cp	r24, r30
    2262:	28 f1       	brcs	.+74     	; 0x22ae <MENU_navigate+0xa0>
    2264:	ee 23       	and	r30, r30
    2266:	19 f1       	breq	.+70     	; 0x22ae <MENU_navigate+0xa0>
				currentMenu = *currentMenu.child[markerPage];
    2268:	f0 e0       	ldi	r31, 0x00	; 0
    226a:	ee 0f       	add	r30, r30
    226c:	ff 1f       	adc	r31, r31
    226e:	e1 50       	subi	r30, 0x01	; 1
    2270:	fd 4f       	sbci	r31, 0xFD	; 253
    2272:	01 90       	ld	r0, Z+
    2274:	f0 81       	ld	r31, Z
    2276:	e0 2d       	mov	r30, r0
    2278:	81 e1       	ldi	r24, 0x11	; 17
    227a:	ab ef       	ldi	r26, 0xFB	; 251
    227c:	b2 e0       	ldi	r27, 0x02	; 2
    227e:	01 90       	ld	r0, Z+
    2280:	0d 92       	st	X+, r0
    2282:	8a 95       	dec	r24
    2284:	e1 f7       	brne	.-8      	; 0x227e <MENU_navigate+0x70>
				OLED_reset();
    2286:	0e 94 a1 12 	call	0x2542	; 0x2542 <OLED_reset>
				MENU_print_menu();
    228a:	0e 94 a2 10 	call	0x2144	; 0x2144 <MENU_print_menu>
				markerPage = 1;
    228e:	81 e0       	ldi	r24, 0x01	; 1
    2290:	80 93 54 03 	sts	0x0354, r24
				MENU_selectLine(markerPage);
    2294:	0e 94 e5 10 	call	0x21ca	; 0x21ca <MENU_selectLine>
    2298:	08 95       	ret
			}
			
		}
		else if(direction == LEFT){
    229a:	83 30       	cpi	r24, 0x03	; 3
    229c:	41 f4       	brne	.+16     	; 0x22ae <MENU_navigate+0xa0>
			if (currentMenu.parent != NULL){
    229e:	80 91 fd 02 	lds	r24, 0x02FD
    22a2:	90 91 fe 02 	lds	r25, 0x02FE
    22a6:	89 2b       	or	r24, r25
    22a8:	11 f0       	breq	.+4      	; 0x22ae <MENU_navigate+0xa0>
				MENU_goto_parent_menu();		
    22aa:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
    22ae:	08 95       	ret

000022b0 <MENU_goto_main_menu>:
	markerPage = 1;
	MENU_selectLine(markerPage);
}

void MENU_goto_main_menu(){
	currentMenu = main;
    22b0:	81 e1       	ldi	r24, 0x11	; 17
    22b2:	ef e3       	ldi	r30, 0x3F	; 63
    22b4:	f3 e0       	ldi	r31, 0x03	; 3
    22b6:	ab ef       	ldi	r26, 0xFB	; 251
    22b8:	b2 e0       	ldi	r27, 0x02	; 2
    22ba:	01 90       	ld	r0, Z+
    22bc:	0d 92       	st	X+, r0
    22be:	8a 95       	dec	r24
    22c0:	e1 f7       	brne	.-8      	; 0x22ba <MENU_goto_main_menu+0xa>
	OLED_reset();
    22c2:	0e 94 a1 12 	call	0x2542	; 0x2542 <OLED_reset>
	MENU_print_menu();
    22c6:	0e 94 a2 10 	call	0x2144	; 0x2144 <MENU_print_menu>
	markerPage = 1;
    22ca:	81 e0       	ldi	r24, 0x01	; 1
    22cc:	80 93 54 03 	sts	0x0354, r24
	MENU_selectLine(markerPage);
    22d0:	0e 94 e5 10 	call	0x21ca	; 0x21ca <MENU_selectLine>
    22d4:	08 95       	ret

000022d6 <MENU_selectAction>:
 *  \param void
 *
 *  \return void
 */

void MENU_selectAction(game_settings *settings, uint8_t *startgame){
    22d6:	0f 93       	push	r16
    22d8:	1f 93       	push	r17
    22da:	cf 93       	push	r28
    22dc:	df 93       	push	r29
    22de:	ec 01       	movw	r28, r24
    22e0:	8b 01       	movw	r16, r22
	if (currentMenu.nmbrChilds == 0){
    22e2:	80 91 0b 03 	lds	r24, 0x030B
    22e6:	81 11       	cpse	r24, r1
    22e8:	90 c0       	rjmp	.+288    	; 0x240a <MENU_selectAction+0x134>
		if (currentMenu.name == "High Scores"){
    22ea:	80 91 fb 02 	lds	r24, 0x02FB
    22ee:	90 91 fc 02 	lds	r25, 0x02FC
    22f2:	8b 54       	subi	r24, 0x4B	; 75
    22f4:	91 40       	sbci	r25, 0x01	; 1
    22f6:	21 f4       	brne	.+8      	; 0x2300 <MENU_selectAction+0x2a>
			OLED_print_sentence("high scores");
    22f8:	8c ec       	ldi	r24, 0xCC	; 204
    22fa:	91 e0       	ldi	r25, 0x01	; 1
    22fc:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
			//print highscores
		}
		if (currentMenu.name == "Easy"){
    2300:	80 91 fb 02 	lds	r24, 0x02FB
    2304:	90 91 fc 02 	lds	r25, 0x02FC
    2308:	8a 53       	subi	r24, 0x3A	; 58
    230a:	91 40       	sbci	r25, 0x01	; 1
    230c:	21 f4       	brne	.+8      	; 0x2316 <MENU_selectAction+0x40>
			settings->difficulty = 0;
    230e:	19 82       	std	Y+1, r1	; 0x01
			*startgame = 1;
    2310:	81 e0       	ldi	r24, 0x01	; 1
    2312:	f8 01       	movw	r30, r16
    2314:	80 83       	st	Z, r24
		}
		if (currentMenu.name == "Normal"){
    2316:	80 91 fb 02 	lds	r24, 0x02FB
    231a:	90 91 fc 02 	lds	r25, 0x02FC
    231e:	8f 53       	subi	r24, 0x3F	; 63
    2320:	91 40       	sbci	r25, 0x01	; 1
    2322:	21 f4       	brne	.+8      	; 0x232c <MENU_selectAction+0x56>
			settings->difficulty = 1;
    2324:	81 e0       	ldi	r24, 0x01	; 1
    2326:	89 83       	std	Y+1, r24	; 0x01
			*startgame = 1;
    2328:	f8 01       	movw	r30, r16
    232a:	80 83       	st	Z, r24
		}
		if (currentMenu.name == "Hard"){
    232c:	80 91 fb 02 	lds	r24, 0x02FB
    2330:	90 91 fc 02 	lds	r25, 0x02FC
    2334:	86 54       	subi	r24, 0x46	; 70
    2336:	91 40       	sbci	r25, 0x01	; 1
    2338:	29 f4       	brne	.+10     	; 0x2344 <MENU_selectAction+0x6e>
			settings->difficulty = 2;
    233a:	82 e0       	ldi	r24, 0x02	; 2
    233c:	89 83       	std	Y+1, r24	; 0x01
			*startgame = 1;
    233e:	81 e0       	ldi	r24, 0x01	; 1
    2340:	f8 01       	movw	r30, r16
    2342:	80 83       	st	Z, r24
		}
		if (currentMenu.name == "Credits"){
    2344:	80 91 fb 02 	lds	r24, 0x02FB
    2348:	90 91 fc 02 	lds	r25, 0x02FC
    234c:	82 5c       	subi	r24, 0xC2	; 194
    234e:	91 40       	sbci	r25, 0x01	; 1
    2350:	21 f4       	brne	.+8      	; 0x235a <MENU_selectAction+0x84>
			OLED_reset();
    2352:	0e 94 a1 12 	call	0x2542	; 0x2542 <OLED_reset>
			OLED_credits();
    2356:	0e 94 9a 14 	call	0x2934	; 0x2934 <OLED_credits>
		}
		if (currentMenu.name == "Speed"){
    235a:	80 91 fb 02 	lds	r24, 0x02FB
    235e:	90 91 fc 02 	lds	r25, 0x02FC
    2362:	8e 56       	subi	r24, 0x6E	; 110
    2364:	91 40       	sbci	r25, 0x01	; 1
    2366:	31 f4       	brne	.+12     	; 0x2374 <MENU_selectAction+0x9e>
			settings->regulator = 1;
    2368:	81 e0       	ldi	r24, 0x01	; 1
    236a:	88 83       	st	Y, r24
			MENU_goto_parent_menu();
    236c:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
			MENU_goto_parent_menu();
    2370:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
		}
		if (currentMenu.name == "Position"){
    2374:	80 91 fb 02 	lds	r24, 0x02FB
    2378:	90 91 fc 02 	lds	r25, 0x02FC
    237c:	84 57       	subi	r24, 0x74	; 116
    237e:	91 40       	sbci	r25, 0x01	; 1
    2380:	29 f4       	brne	.+10     	; 0x238c <MENU_selectAction+0xb6>
			settings->regulator = 0;
    2382:	18 82       	st	Y, r1
			MENU_goto_parent_menu();
    2384:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
			MENU_goto_parent_menu();
    2388:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
		}
		if (currentMenu.name == "Semi Auto"){
    238c:	80 91 fb 02 	lds	r24, 0x02FB
    2390:	90 91 fc 02 	lds	r25, 0x02FC
    2394:	8b 58       	subi	r24, 0x8B	; 139
    2396:	91 40       	sbci	r25, 0x01	; 1
    2398:	29 f4       	brne	.+10     	; 0x23a4 <MENU_selectAction+0xce>
			settings->solenoid = 0;
    239a:	1a 82       	std	Y+2, r1	; 0x02
			MENU_goto_parent_menu();
    239c:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
			MENU_goto_parent_menu();
    23a0:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
		}
		if (currentMenu.name == "Auto"){
    23a4:	80 91 fb 02 	lds	r24, 0x02FB
    23a8:	90 91 fc 02 	lds	r25, 0x02FC
    23ac:	8c 59       	subi	r24, 0x9C	; 156
    23ae:	91 40       	sbci	r25, 0x01	; 1
    23b0:	31 f4       	brne	.+12     	; 0x23be <MENU_selectAction+0xe8>
			settings->solenoid = 1;
    23b2:	81 e0       	ldi	r24, 0x01	; 1
    23b4:	8a 83       	std	Y+2, r24	; 0x02
			MENU_goto_parent_menu();
    23b6:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
			MENU_goto_parent_menu();
    23ba:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
		}
		if (currentMenu.name == "Toggle Auto"){
    23be:	80 91 fb 02 	lds	r24, 0x02FB
    23c2:	90 91 fc 02 	lds	r25, 0x02FC
    23c6:	85 59       	subi	r24, 0x95	; 149
    23c8:	91 40       	sbci	r25, 0x01	; 1
    23ca:	31 f4       	brne	.+12     	; 0x23d8 <MENU_selectAction+0x102>
			settings->solenoid = 2;
    23cc:	82 e0       	ldi	r24, 0x02	; 2
    23ce:	8a 83       	std	Y+2, r24	; 0x02
			MENU_goto_parent_menu();
    23d0:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
			MENU_goto_parent_menu();
    23d4:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
		}
		if (currentMenu.name == "Non Inverted"){
    23d8:	80 91 fb 02 	lds	r24, 0x02FB
    23dc:	90 91 fc 02 	lds	r25, 0x02FC
    23e0:	8f 5a       	subi	r24, 0xAF	; 175
    23e2:	91 40       	sbci	r25, 0x01	; 1
    23e4:	29 f4       	brne	.+10     	; 0x23f0 <MENU_selectAction+0x11a>
			settings->inverted = 0;
    23e6:	1b 82       	std	Y+3, r1	; 0x03
			MENU_goto_parent_menu();
    23e8:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
			MENU_goto_parent_menu();
    23ec:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
		}
		if (currentMenu.name == "Inverted"){
    23f0:	80 91 fb 02 	lds	r24, 0x02FB
    23f4:	90 91 fc 02 	lds	r25, 0x02FC
    23f8:	83 5b       	subi	r24, 0xB3	; 179
    23fa:	91 40       	sbci	r25, 0x01	; 1
    23fc:	31 f4       	brne	.+12     	; 0x240a <MENU_selectAction+0x134>
			settings->inverted = 1;
    23fe:	81 e0       	ldi	r24, 0x01	; 1
    2400:	8b 83       	std	Y+3, r24	; 0x03
			MENU_goto_parent_menu();
    2402:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
			MENU_goto_parent_menu();
    2406:	0e 94 f2 10 	call	0x21e4	; 0x21e4 <MENU_goto_parent_menu>
		}
	}

}
    240a:	df 91       	pop	r29
    240c:	cf 91       	pop	r28
    240e:	1f 91       	pop	r17
    2410:	0f 91       	pop	r16
    2412:	08 95       	ret

00002414 <OLED_clear_char>:
 *  \param void
 *
 *  \return void
 */

void OLED_clear_char(){
    2414:	88 e0       	ldi	r24, 0x08	; 8
    2416:	90 e0       	ldi	r25, 0x00	; 0
 *
 *  \return void
 */
void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    2418:	e0 91 08 01 	lds	r30, 0x0108
    241c:	f0 91 09 01 	lds	r31, 0x0109
    2420:	10 82       	st	Z, r1
    2422:	01 97       	sbiw	r24, 0x01	; 1
 *
 *  \return void
 */

void OLED_clear_char(){
	for (int i = 0; i < FONTSIZE; i++){
    2424:	00 97       	sbiw	r24, 0x00	; 0
    2426:	c1 f7       	brne	.-16     	; 0x2418 <OLED_clear_char+0x4>
		OLED_write_data(0x00);
	}
}
    2428:	08 95       	ret

0000242a <OLED_print_char>:
 *  \param char input, char to be written at current place.
 *
 *  \return void
 */

void OLED_print_char(char input){ //Har blitt gjort VOID
    242a:	28 e0       	ldi	r18, 0x08	; 8
    242c:	82 9f       	mul	r24, r18
    242e:	c0 01       	movw	r24, r0
    2430:	11 24       	eor	r1, r1
    2432:	fc 01       	movw	r30, r24
    2434:	e0 59       	subi	r30, 0x90	; 144
    2436:	fc 4e       	sbci	r31, 0xEC	; 236
	for (int i = 0; i < FONTSIZE; i++){
    2438:	20 e0       	ldi	r18, 0x00	; 0
    243a:	30 e0       	ldi	r19, 0x00	; 0
		OLED_write_data(pgm_read_byte(&font[(int)input-32][i]));
    243c:	84 91       	lpm	r24, Z
 *
 *  \return void
 */
void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    243e:	a0 91 08 01 	lds	r26, 0x0108
    2442:	b0 91 09 01 	lds	r27, 0x0109
    2446:	8c 93       	st	X, r24
 */

void OLED_print_char(char input){ //Har blitt gjort VOID
	for (int i = 0; i < FONTSIZE; i++){
		OLED_write_data(pgm_read_byte(&font[(int)input-32][i]));
		col ++;
    2448:	80 91 55 03 	lds	r24, 0x0355
    244c:	8f 5f       	subi	r24, 0xFF	; 255
    244e:	80 93 55 03 	sts	0x0355, r24
 *
 *  \return void
 */

void OLED_print_char(char input){ //Har blitt gjort VOID
	for (int i = 0; i < FONTSIZE; i++){
    2452:	2f 5f       	subi	r18, 0xFF	; 255
    2454:	3f 4f       	sbci	r19, 0xFF	; 255
    2456:	31 96       	adiw	r30, 0x01	; 1
    2458:	28 30       	cpi	r18, 0x08	; 8
    245a:	31 05       	cpc	r19, r1
    245c:	79 f7       	brne	.-34     	; 0x243c <OLED_print_char+0x12>
		OLED_write_data(pgm_read_byte(&font[(int)input-32][i]));
		col ++;
	}
}
    245e:	08 95       	ret

00002460 <OLED_goto_page>:
 *
 *  \return void
 */

void OLED_goto_page(uint8_t newpage){
	page = newpage;
    2460:	80 93 56 03 	sts	0x0356, r24
	OLED_write_command(0xB0+page);
    2464:	80 55       	subi	r24, 0x50	; 80
 *
 *  \return void
 */

void OLED_write_command(uint8_t address){
	*oled_cmd = address;
    2466:	e0 91 0a 01 	lds	r30, 0x010A
    246a:	f0 91 0b 01 	lds	r31, 0x010B
    246e:	80 83       	st	Z, r24
    2470:	08 95       	ret

00002472 <OLED_goto_column>:
 *
 *  \return void
 */

void OLED_goto_column(uint8_t column){
 	col = column;
    2472:	80 93 55 03 	sts	0x0355, r24
 	if (column < 16){
    2476:	80 31       	cpi	r24, 0x10	; 16
    2478:	60 f4       	brcc	.+24     	; 0x2492 <OLED_goto_column+0x20>
 *
 *  \return void
 */

void OLED_write_command(uint8_t address){
	*oled_cmd = address;
    247a:	e0 91 0a 01 	lds	r30, 0x010A
    247e:	f0 91 0b 01 	lds	r31, 0x010B
    2482:	80 83       	st	Z, r24
    2484:	e0 91 0a 01 	lds	r30, 0x010A
    2488:	f0 91 0b 01 	lds	r31, 0x010B
    248c:	80 e1       	ldi	r24, 0x10	; 16
    248e:	80 83       	st	Z, r24
    2490:	08 95       	ret
 	if (column < 16){
 		OLED_write_command(0x00+column);
		OLED_write_command(0x10);
 	}
	else{
		OLED_write_command((column & 0b00001111));
    2492:	98 2f       	mov	r25, r24
    2494:	9f 70       	andi	r25, 0x0F	; 15
 *
 *  \return void
 */

void OLED_write_command(uint8_t address){
	*oled_cmd = address;
    2496:	e0 91 0a 01 	lds	r30, 0x010A
    249a:	f0 91 0b 01 	lds	r31, 0x010B
    249e:	90 83       	st	Z, r25
 		OLED_write_command(0x00+column);
		OLED_write_command(0x10);
 	}
	else{
		OLED_write_command((column & 0b00001111));
		OLED_write_command(0x10+((column)>>4));
    24a0:	82 95       	swap	r24
    24a2:	8f 70       	andi	r24, 0x0F	; 15
    24a4:	80 5f       	subi	r24, 0xF0	; 240
 *
 *  \return void
 */

void OLED_write_command(uint8_t address){
	*oled_cmd = address;
    24a6:	e0 91 0a 01 	lds	r30, 0x010A
    24aa:	f0 91 0b 01 	lds	r31, 0x010B
    24ae:	80 83       	st	Z, r24
    24b0:	08 95       	ret

000024b2 <OLED_go_to_pos>:
 *  \uint8_t column, desired column.
 *
 *  \return void
 */

void OLED_go_to_pos(uint8_t page, uint8_t column){
    24b2:	cf 93       	push	r28
    24b4:	c8 2f       	mov	r28, r24
    24b6:	86 2f       	mov	r24, r22
	 OLED_goto_column(column);
    24b8:	0e 94 39 12 	call	0x2472	; 0x2472 <OLED_goto_column>
	 OLED_goto_page(page);
    24bc:	8c 2f       	mov	r24, r28
    24be:	0e 94 30 12 	call	0x2460	; 0x2460 <OLED_goto_page>
 }
    24c2:	cf 91       	pop	r28
    24c4:	08 95       	ret

000024c6 <OLED_home>:
 *
 *  \return void
 */

void OLED_home(){
	col = 0;
    24c6:	10 92 55 03 	sts	0x0355, r1
	page = 0;
    24ca:	10 92 56 03 	sts	0x0356, r1
	OLED_go_to_pos(0,0);
    24ce:	60 e0       	ldi	r22, 0x00	; 0
    24d0:	80 e0       	ldi	r24, 0x00	; 0
    24d2:	0e 94 59 12 	call	0x24b2	; 0x24b2 <OLED_go_to_pos>
    24d6:	08 95       	ret

000024d8 <OLED_print_sentence>:
 *  \param char sentence[], sentence to be written.
 *
 *  \return void
 */

void OLED_print_sentence(char sentence[]){
    24d8:	ef 92       	push	r14
    24da:	ff 92       	push	r15
    24dc:	0f 93       	push	r16
    24de:	1f 93       	push	r17
    24e0:	cf 93       	push	r28
    24e2:	df 93       	push	r29
    24e4:	8c 01       	movw	r16, r24
    24e6:	7c 01       	movw	r14, r24
	for (int i = 0; i < strlen(sentence); i++){
    24e8:	c0 e0       	ldi	r28, 0x00	; 0
    24ea:	d0 e0       	ldi	r29, 0x00	; 0
    24ec:	19 c0       	rjmp	.+50     	; 0x2520 <OLED_print_sentence+0x48>
		if (col > 128 - FONTSIZE+1){
    24ee:	80 91 55 03 	lds	r24, 0x0355
    24f2:	8a 37       	cpi	r24, 0x7A	; 122
    24f4:	78 f0       	brcs	.+30     	; 0x2514 <OLED_print_sentence+0x3c>
			OLED_goto_page(page+1);
    24f6:	80 91 56 03 	lds	r24, 0x0356
    24fa:	8f 5f       	subi	r24, 0xFF	; 255
    24fc:	0e 94 30 12 	call	0x2460	; 0x2460 <OLED_goto_page>
			OLED_goto_column(0);
    2500:	80 e0       	ldi	r24, 0x00	; 0
    2502:	0e 94 39 12 	call	0x2472	; 0x2472 <OLED_goto_column>
			if (page == 8){
    2506:	80 91 56 03 	lds	r24, 0x0356
    250a:	88 30       	cpi	r24, 0x08	; 8
    250c:	19 f4       	brne	.+6      	; 0x2514 <OLED_print_sentence+0x3c>
				OLED_home();
    250e:	0e 94 63 12 	call	0x24c6	; 0x24c6 <OLED_home>
				break;
    2512:	10 c0       	rjmp	.+32     	; 0x2534 <OLED_print_sentence+0x5c>
			}
		}
		OLED_print_char(sentence[i]);
    2514:	f7 01       	movw	r30, r14
    2516:	81 91       	ld	r24, Z+
    2518:	7f 01       	movw	r14, r30
    251a:	0e 94 15 12 	call	0x242a	; 0x242a <OLED_print_char>
 *
 *  \return void
 */

void OLED_print_sentence(char sentence[]){
	for (int i = 0; i < strlen(sentence); i++){
    251e:	21 96       	adiw	r28, 0x01	; 1
    2520:	f8 01       	movw	r30, r16
    2522:	01 90       	ld	r0, Z+
    2524:	00 20       	and	r0, r0
    2526:	e9 f7       	brne	.-6      	; 0x2522 <OLED_print_sentence+0x4a>
    2528:	31 97       	sbiw	r30, 0x01	; 1
    252a:	e0 1b       	sub	r30, r16
    252c:	f1 0b       	sbc	r31, r17
    252e:	ce 17       	cp	r28, r30
    2530:	df 07       	cpc	r29, r31
    2532:	e8 f2       	brcs	.-70     	; 0x24ee <OLED_print_sentence+0x16>
				break;
			}
		}
		OLED_print_char(sentence[i]);
	} 
}
    2534:	df 91       	pop	r29
    2536:	cf 91       	pop	r28
    2538:	1f 91       	pop	r17
    253a:	0f 91       	pop	r16
    253c:	ff 90       	pop	r15
    253e:	ef 90       	pop	r14
    2540:	08 95       	ret

00002542 <OLED_reset>:
 *  \param void
 *
 *  \return void
 */

void OLED_reset(){
    2542:	1f 93       	push	r17
    2544:	cf 93       	push	r28
    2546:	df 93       	push	r29
	OLED_go_to_pos(0,0);
    2548:	60 e0       	ldi	r22, 0x00	; 0
    254a:	80 e0       	ldi	r24, 0x00	; 0
    254c:	0e 94 59 12 	call	0x24b2	; 0x24b2 <OLED_go_to_pos>
    2550:	c0 e0       	ldi	r28, 0x00	; 0
	
	for (int i = 0; i < 8; i++){
		OLED_goto_page(i);
    2552:	10 e8       	ldi	r17, 0x80	; 128
    2554:	d0 e0       	ldi	r29, 0x00	; 0
    2556:	8c 2f       	mov	r24, r28
    2558:	0e 94 30 12 	call	0x2460	; 0x2460 <OLED_goto_page>
    255c:	21 2f       	mov	r18, r17
    255e:	3d 2f       	mov	r19, r29
 *
 *  \return void
 */
void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    2560:	e0 91 08 01 	lds	r30, 0x0108
    2564:	f0 91 09 01 	lds	r31, 0x0109
    2568:	10 82       	st	Z, r1
    256a:	21 50       	subi	r18, 0x01	; 1
    256c:	31 09       	sbc	r19, r1
	OLED_go_to_pos(0,0);
	
	for (int i = 0; i < 8; i++){
		OLED_goto_page(i);
		
		for (int j = 0; j < 128; j++){
    256e:	21 15       	cp	r18, r1
    2570:	31 05       	cpc	r19, r1
    2572:	b1 f7       	brne	.-20     	; 0x2560 <OLED_reset+0x1e>
    2574:	cf 5f       	subi	r28, 0xFF	; 255
 */

void OLED_reset(){
	OLED_go_to_pos(0,0);
	
	for (int i = 0; i < 8; i++){
    2576:	c8 30       	cpi	r28, 0x08	; 8
    2578:	71 f7       	brne	.-36     	; 0x2556 <OLED_reset+0x14>
		
		for (int j = 0; j < 128; j++){
			OLED_write_data(0x00);
		}
	}
	OLED_go_to_pos(0,0);
    257a:	60 e0       	ldi	r22, 0x00	; 0
    257c:	80 e0       	ldi	r24, 0x00	; 0
    257e:	0e 94 59 12 	call	0x24b2	; 0x24b2 <OLED_go_to_pos>
}
    2582:	df 91       	pop	r29
    2584:	cf 91       	pop	r28
    2586:	1f 91       	pop	r17
    2588:	08 95       	ret

0000258a <OLED_init>:
 *
 *  \return void
 */

void OLED_write_command(uint8_t address){
	*oled_cmd = address;
    258a:	e0 91 0a 01 	lds	r30, 0x010A
    258e:	f0 91 0b 01 	lds	r31, 0x010B
    2592:	8e ea       	ldi	r24, 0xAE	; 174
    2594:	80 83       	st	Z, r24
    2596:	e0 91 0a 01 	lds	r30, 0x010A
    259a:	f0 91 0b 01 	lds	r31, 0x010B
    259e:	81 ea       	ldi	r24, 0xA1	; 161
    25a0:	80 83       	st	Z, r24
    25a2:	e0 91 0a 01 	lds	r30, 0x010A
    25a6:	f0 91 0b 01 	lds	r31, 0x010B
    25aa:	8a ed       	ldi	r24, 0xDA	; 218
    25ac:	80 83       	st	Z, r24
    25ae:	e0 91 0a 01 	lds	r30, 0x010A
    25b2:	f0 91 0b 01 	lds	r31, 0x010B
    25b6:	82 e1       	ldi	r24, 0x12	; 18
    25b8:	80 83       	st	Z, r24
    25ba:	e0 91 0a 01 	lds	r30, 0x010A
    25be:	f0 91 0b 01 	lds	r31, 0x010B
    25c2:	88 ec       	ldi	r24, 0xC8	; 200
    25c4:	80 83       	st	Z, r24
    25c6:	e0 91 0a 01 	lds	r30, 0x010A
    25ca:	f0 91 0b 01 	lds	r31, 0x010B
    25ce:	88 ea       	ldi	r24, 0xA8	; 168
    25d0:	80 83       	st	Z, r24
    25d2:	e0 91 0a 01 	lds	r30, 0x010A
    25d6:	f0 91 0b 01 	lds	r31, 0x010B
    25da:	8f e3       	ldi	r24, 0x3F	; 63
    25dc:	80 83       	st	Z, r24
    25de:	e0 91 0a 01 	lds	r30, 0x010A
    25e2:	f0 91 0b 01 	lds	r31, 0x010B
    25e6:	85 ed       	ldi	r24, 0xD5	; 213
    25e8:	80 83       	st	Z, r24
    25ea:	e0 91 0a 01 	lds	r30, 0x010A
    25ee:	f0 91 0b 01 	lds	r31, 0x010B
    25f2:	80 e8       	ldi	r24, 0x80	; 128
    25f4:	80 83       	st	Z, r24
    25f6:	e0 91 0a 01 	lds	r30, 0x010A
    25fa:	f0 91 0b 01 	lds	r31, 0x010B
    25fe:	81 e8       	ldi	r24, 0x81	; 129
    2600:	80 83       	st	Z, r24
    2602:	e0 91 0a 01 	lds	r30, 0x010A
    2606:	f0 91 0b 01 	lds	r31, 0x010B
    260a:	80 e5       	ldi	r24, 0x50	; 80
    260c:	80 83       	st	Z, r24
    260e:	e0 91 0a 01 	lds	r30, 0x010A
    2612:	f0 91 0b 01 	lds	r31, 0x010B
    2616:	89 ed       	ldi	r24, 0xD9	; 217
    2618:	80 83       	st	Z, r24
    261a:	e0 91 0a 01 	lds	r30, 0x010A
    261e:	f0 91 0b 01 	lds	r31, 0x010B
    2622:	81 e2       	ldi	r24, 0x21	; 33
    2624:	80 83       	st	Z, r24
    2626:	e0 91 0a 01 	lds	r30, 0x010A
    262a:	f0 91 0b 01 	lds	r31, 0x010B
    262e:	80 e2       	ldi	r24, 0x20	; 32
    2630:	80 83       	st	Z, r24
    2632:	e0 91 0a 01 	lds	r30, 0x010A
    2636:	f0 91 0b 01 	lds	r31, 0x010B
    263a:	82 e0       	ldi	r24, 0x02	; 2
    263c:	80 83       	st	Z, r24
    263e:	e0 91 0a 01 	lds	r30, 0x010A
    2642:	f0 91 0b 01 	lds	r31, 0x010B
    2646:	8b ed       	ldi	r24, 0xDB	; 219
    2648:	80 83       	st	Z, r24
    264a:	e0 91 0a 01 	lds	r30, 0x010A
    264e:	f0 91 0b 01 	lds	r31, 0x010B
    2652:	80 e3       	ldi	r24, 0x30	; 48
    2654:	80 83       	st	Z, r24
    2656:	e0 91 0a 01 	lds	r30, 0x010A
    265a:	f0 91 0b 01 	lds	r31, 0x010B
    265e:	8d ea       	ldi	r24, 0xAD	; 173
    2660:	80 83       	st	Z, r24
    2662:	e0 91 0a 01 	lds	r30, 0x010A
    2666:	f0 91 0b 01 	lds	r31, 0x010B
    266a:	10 82       	st	Z, r1
    266c:	e0 91 0a 01 	lds	r30, 0x010A
    2670:	f0 91 0b 01 	lds	r31, 0x010B
    2674:	84 ea       	ldi	r24, 0xA4	; 164
    2676:	80 83       	st	Z, r24
    2678:	e0 91 0a 01 	lds	r30, 0x010A
    267c:	f0 91 0b 01 	lds	r31, 0x010B
    2680:	86 ea       	ldi	r24, 0xA6	; 166
    2682:	80 83       	st	Z, r24
    2684:	e0 91 0a 01 	lds	r30, 0x010A
    2688:	f0 91 0b 01 	lds	r31, 0x010B
    268c:	8f ea       	ldi	r24, 0xAF	; 175
    268e:	80 83       	st	Z, r24
	OLED_write_command(0xad); //master configuration
	OLED_write_command(0x00);
	OLED_write_command(0xa4); //out follows RAM content
	OLED_write_command(0xa6); //set normal display
	OLED_write_command(0xaf); // display on
	OLED_reset();             // reset
    2690:	0e 94 a1 12 	call	0x2542	; 0x2542 <OLED_reset>
    2694:	08 95       	ret

00002696 <OLED_print_score>:
		}
		OLED_print_char(sentence[i]);
	} 
}

void OLED_print_score(int score){
    2696:	0f 93       	push	r16
    2698:	1f 93       	push	r17
    269a:	cf 93       	push	r28
    269c:	df 93       	push	r29
    269e:	cd b7       	in	r28, 0x3d	; 61
    26a0:	de b7       	in	r29, 0x3e	; 62
    26a2:	2a 97       	sbiw	r28, 0x0a	; 10
    26a4:	0f b6       	in	r0, 0x3f	; 63
    26a6:	f8 94       	cli
    26a8:	de bf       	out	0x3e, r29	; 62
    26aa:	0f be       	out	0x3f, r0	; 63
    26ac:	cd bf       	out	0x3d, r28	; 61
	char scorechar[10];
	sprintf(scorechar, "%d", score);
    26ae:	9f 93       	push	r25
    26b0:	8f 93       	push	r24
    26b2:	85 e2       	ldi	r24, 0x25	; 37
    26b4:	91 e0       	ldi	r25, 0x01	; 1
    26b6:	9f 93       	push	r25
    26b8:	8f 93       	push	r24
    26ba:	8e 01       	movw	r16, r28
    26bc:	0f 5f       	subi	r16, 0xFF	; 255
    26be:	1f 4f       	sbci	r17, 0xFF	; 255
    26c0:	1f 93       	push	r17
    26c2:	0f 93       	push	r16
    26c4:	0e 94 aa 15 	call	0x2b54	; 0x2b54 <sprintf>
	OLED_go_to_pos(2, 44);
    26c8:	6c e2       	ldi	r22, 0x2C	; 44
    26ca:	82 e0       	ldi	r24, 0x02	; 2
    26cc:	0e 94 59 12 	call	0x24b2	; 0x24b2 <OLED_go_to_pos>
	OLED_print_sentence("score: ");
    26d0:	88 ed       	ldi	r24, 0xD8	; 216
    26d2:	91 e0       	ldi	r25, 0x01	; 1
    26d4:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
	
	//clear old score from OLED
	OLED_go_to_pos(3, 44);
    26d8:	6c e2       	ldi	r22, 0x2C	; 44
    26da:	83 e0       	ldi	r24, 0x03	; 3
    26dc:	0e 94 59 12 	call	0x24b2	; 0x24b2 <OLED_go_to_pos>
	for (int i = 0; i < 5; i++){
		OLED_clear_char();
    26e0:	0e 94 0a 12 	call	0x2414	; 0x2414 <OLED_clear_char>
    26e4:	0e 94 0a 12 	call	0x2414	; 0x2414 <OLED_clear_char>
    26e8:	0e 94 0a 12 	call	0x2414	; 0x2414 <OLED_clear_char>
    26ec:	0e 94 0a 12 	call	0x2414	; 0x2414 <OLED_clear_char>
    26f0:	0e 94 0a 12 	call	0x2414	; 0x2414 <OLED_clear_char>
	}
	OLED_go_to_pos(3, 44);
    26f4:	6c e2       	ldi	r22, 0x2C	; 44
    26f6:	83 e0       	ldi	r24, 0x03	; 3
    26f8:	0e 94 59 12 	call	0x24b2	; 0x24b2 <OLED_go_to_pos>
	OLED_print_sentence(scorechar);
    26fc:	c8 01       	movw	r24, r16
    26fe:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
    2702:	0f 90       	pop	r0
    2704:	0f 90       	pop	r0
    2706:	0f 90       	pop	r0
    2708:	0f 90       	pop	r0
    270a:	0f 90       	pop	r0
    270c:	0f 90       	pop	r0
}
    270e:	2a 96       	adiw	r28, 0x0a	; 10
    2710:	0f b6       	in	r0, 0x3f	; 63
    2712:	f8 94       	cli
    2714:	de bf       	out	0x3e, r29	; 62
    2716:	0f be       	out	0x3f, r0	; 63
    2718:	cd bf       	out	0x3d, r28	; 61
    271a:	df 91       	pop	r29
    271c:	cf 91       	pop	r28
    271e:	1f 91       	pop	r17
    2720:	0f 91       	pop	r16
    2722:	08 95       	ret

00002724 <OLED_print_brage>:
 *
 *  \param void
 *
 *  \return void
 */
void OLED_print_brage(){
    2724:	0f 93       	push	r16
    2726:	1f 93       	push	r17
    2728:	cf 93       	push	r28
    272a:	df 93       	push	r29
	OLED_reset();
    272c:	0e 94 a1 12 	call	0x2542	; 0x2542 <OLED_reset>
	
	OLED_goto_column(0);
    2730:	80 e0       	ldi	r24, 0x00	; 0
    2732:	0e 94 39 12 	call	0x2472	; 0x2472 <OLED_goto_column>
    2736:	c0 e8       	ldi	r28, 0x80	; 128
    2738:	d0 e0       	ldi	r29, 0x00	; 0
 *
 *  \param void
 *
 *  \return void
 */
void OLED_print_brage(){
    273a:	00 e0       	ldi	r16, 0x00	; 0
    273c:	10 e0       	ldi	r17, 0x00	; 0
    273e:	26 c0       	rjmp	.+76     	; 0x278c <OLED_print_brage+0x68>
    2740:	f9 01       	movw	r30, r18
    2742:	e8 0f       	add	r30, r24
    2744:	f9 1f       	adc	r31, r25
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&brage[j+k][i]));
    2746:	e4 91       	lpm	r30, Z
 *
 *  \return void
 */
void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    2748:	a0 91 08 01 	lds	r26, 0x0108
    274c:	b0 91 09 01 	lds	r27, 0x0109
    2750:	ec 93       	st	X, r30
    2752:	01 96       	adiw	r24, 0x01	; 1
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
    2754:	88 30       	cpi	r24, 0x08	; 8
    2756:	91 05       	cpc	r25, r1
    2758:	99 f7       	brne	.-26     	; 0x2740 <OLED_print_brage+0x1c>
    275a:	48 5f       	subi	r20, 0xF8	; 248
    275c:	5f 4f       	sbci	r21, 0xFF	; 255
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
    275e:	4c 17       	cp	r20, r28
    2760:	5d 07       	cpc	r21, r29
    2762:	31 f0       	breq	.+12     	; 0x2770 <OLED_print_brage+0x4c>
 *
 *  \param void
 *
 *  \return void
 */
void OLED_print_brage(){
    2764:	80 2f       	mov	r24, r16
    2766:	91 2f       	mov	r25, r17
    2768:	9a 01       	movw	r18, r20
    276a:	20 59       	subi	r18, 0x90	; 144
    276c:	37 4f       	sbci	r19, 0xF7	; 247
    276e:	e8 cf       	rjmp	.-48     	; 0x2740 <OLED_print_brage+0x1c>
		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&brage[j+k][i]));
			}
		}
		OLED_goto_page(page+1);
    2770:	80 91 56 03 	lds	r24, 0x0356
    2774:	8f 5f       	subi	r24, 0xFF	; 255
    2776:	0e 94 30 12 	call	0x2460	; 0x2460 <OLED_goto_page>
		OLED_goto_column(0);
    277a:	80 e0       	ldi	r24, 0x00	; 0
    277c:	0e 94 39 12 	call	0x2472	; 0x2472 <OLED_goto_column>
    2780:	c0 58       	subi	r28, 0x80	; 128
    2782:	df 4f       	sbci	r29, 0xFF	; 255
 */
void OLED_print_brage(){
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){
    2784:	c0 38       	cpi	r28, 0x80	; 128
    2786:	84 e0       	ldi	r24, 0x04	; 4
    2788:	d8 07       	cpc	r29, r24
    278a:	21 f0       	breq	.+8      	; 0x2794 <OLED_print_brage+0x70>
    278c:	ae 01       	movw	r20, r28
    278e:	40 58       	subi	r20, 0x80	; 128
    2790:	51 09       	sbc	r21, r1
    2792:	e8 cf       	rjmp	.-48     	; 0x2764 <OLED_print_brage+0x40>
			}
		}
		OLED_goto_page(page+1);
		OLED_goto_column(0);
	}
	OLED_home();	
    2794:	0e 94 63 12 	call	0x24c6	; 0x24c6 <OLED_home>
	OLED_print_sentence("Brage");
    2798:	80 ee       	ldi	r24, 0xE0	; 224
    279a:	91 e0       	ldi	r25, 0x01	; 1
    279c:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
}
    27a0:	df 91       	pop	r29
    27a2:	cf 91       	pop	r28
    27a4:	1f 91       	pop	r17
    27a6:	0f 91       	pop	r16
    27a8:	08 95       	ret

000027aa <OLED_print_tobias>:
 *  \param void
 *
 *  \return void
 */

void OLED_print_tobias(){
    27aa:	0f 93       	push	r16
    27ac:	1f 93       	push	r17
    27ae:	cf 93       	push	r28
    27b0:	df 93       	push	r29
	OLED_reset();
    27b2:	0e 94 a1 12 	call	0x2542	; 0x2542 <OLED_reset>
	
	OLED_goto_column(0);
    27b6:	80 e0       	ldi	r24, 0x00	; 0
    27b8:	0e 94 39 12 	call	0x2472	; 0x2472 <OLED_goto_column>
    27bc:	c0 e8       	ldi	r28, 0x80	; 128
    27be:	d0 e0       	ldi	r29, 0x00	; 0
 *  \param void
 *
 *  \return void
 */

void OLED_print_tobias(){
    27c0:	00 e0       	ldi	r16, 0x00	; 0
    27c2:	10 e0       	ldi	r17, 0x00	; 0
    27c4:	26 c0       	rjmp	.+76     	; 0x2812 <OLED_print_tobias+0x68>
    27c6:	f9 01       	movw	r30, r18
    27c8:	e8 0f       	add	r30, r24
    27ca:	f9 1f       	adc	r31, r25
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&tobias[j+k][i]));
    27cc:	e4 91       	lpm	r30, Z
 *
 *  \return void
 */
void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    27ce:	a0 91 08 01 	lds	r26, 0x0108
    27d2:	b0 91 09 01 	lds	r27, 0x0109
    27d6:	ec 93       	st	X, r30
    27d8:	01 96       	adiw	r24, 0x01	; 1
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
    27da:	88 30       	cpi	r24, 0x08	; 8
    27dc:	91 05       	cpc	r25, r1
    27de:	99 f7       	brne	.-26     	; 0x27c6 <OLED_print_tobias+0x1c>
    27e0:	48 5f       	subi	r20, 0xF8	; 248
    27e2:	5f 4f       	sbci	r21, 0xFF	; 255
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
    27e4:	4c 17       	cp	r20, r28
    27e6:	5d 07       	cpc	r21, r29
    27e8:	31 f0       	breq	.+12     	; 0x27f6 <OLED_print_tobias+0x4c>
 *  \param void
 *
 *  \return void
 */

void OLED_print_tobias(){
    27ea:	80 2f       	mov	r24, r16
    27ec:	91 2f       	mov	r25, r17
    27ee:	9a 01       	movw	r18, r20
    27f0:	20 59       	subi	r18, 0x90	; 144
    27f2:	33 4f       	sbci	r19, 0xF3	; 243
    27f4:	e8 cf       	rjmp	.-48     	; 0x27c6 <OLED_print_tobias+0x1c>
		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&tobias[j+k][i]));
			}
		}
		OLED_goto_page(page+1);
    27f6:	80 91 56 03 	lds	r24, 0x0356
    27fa:	8f 5f       	subi	r24, 0xFF	; 255
    27fc:	0e 94 30 12 	call	0x2460	; 0x2460 <OLED_goto_page>
		OLED_goto_column(0);
    2800:	80 e0       	ldi	r24, 0x00	; 0
    2802:	0e 94 39 12 	call	0x2472	; 0x2472 <OLED_goto_column>
    2806:	c0 58       	subi	r28, 0x80	; 128
    2808:	df 4f       	sbci	r29, 0xFF	; 255

void OLED_print_tobias(){
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){
    280a:	c0 38       	cpi	r28, 0x80	; 128
    280c:	84 e0       	ldi	r24, 0x04	; 4
    280e:	d8 07       	cpc	r29, r24
    2810:	21 f0       	breq	.+8      	; 0x281a <OLED_print_tobias+0x70>
    2812:	ae 01       	movw	r20, r28
    2814:	40 58       	subi	r20, 0x80	; 128
    2816:	51 09       	sbc	r21, r1
    2818:	e8 cf       	rjmp	.-48     	; 0x27ea <OLED_print_tobias+0x40>
			}
		}
		OLED_goto_page(page+1);
		OLED_goto_column(0);
	}
	OLED_home();
    281a:	0e 94 63 12 	call	0x24c6	; 0x24c6 <OLED_home>
	OLED_print_sentence("Tobias");
    281e:	86 ee       	ldi	r24, 0xE6	; 230
    2820:	91 e0       	ldi	r25, 0x01	; 1
    2822:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
}
    2826:	df 91       	pop	r29
    2828:	cf 91       	pop	r28
    282a:	1f 91       	pop	r17
    282c:	0f 91       	pop	r16
    282e:	08 95       	ret

00002830 <OLED_print_henning>:
 *  \param void
 *
 *  \return void
 */

void OLED_print_henning(){
    2830:	0f 93       	push	r16
    2832:	1f 93       	push	r17
    2834:	cf 93       	push	r28
    2836:	df 93       	push	r29
	OLED_reset();
    2838:	0e 94 a1 12 	call	0x2542	; 0x2542 <OLED_reset>
	
	OLED_goto_column(0);
    283c:	80 e0       	ldi	r24, 0x00	; 0
    283e:	0e 94 39 12 	call	0x2472	; 0x2472 <OLED_goto_column>
    2842:	c0 e8       	ldi	r28, 0x80	; 128
    2844:	d0 e0       	ldi	r29, 0x00	; 0
 *  \param void
 *
 *  \return void
 */

void OLED_print_henning(){
    2846:	00 e0       	ldi	r16, 0x00	; 0
    2848:	10 e0       	ldi	r17, 0x00	; 0
    284a:	26 c0       	rjmp	.+76     	; 0x2898 <OLED_print_henning+0x68>
    284c:	f9 01       	movw	r30, r18
    284e:	e8 0f       	add	r30, r24
    2850:	f9 1f       	adc	r31, r25
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&henning[j+k][i]));
    2852:	e4 91       	lpm	r30, Z
 *
 *  \return void
 */
void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    2854:	a0 91 08 01 	lds	r26, 0x0108
    2858:	b0 91 09 01 	lds	r27, 0x0109
    285c:	ec 93       	st	X, r30
    285e:	01 96       	adiw	r24, 0x01	; 1
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
    2860:	88 30       	cpi	r24, 0x08	; 8
    2862:	91 05       	cpc	r25, r1
    2864:	99 f7       	brne	.-26     	; 0x284c <OLED_print_henning+0x1c>
    2866:	48 5f       	subi	r20, 0xF8	; 248
    2868:	5f 4f       	sbci	r21, 0xFF	; 255
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
    286a:	4c 17       	cp	r20, r28
    286c:	5d 07       	cpc	r21, r29
    286e:	31 f0       	breq	.+12     	; 0x287c <OLED_print_henning+0x4c>
 *  \param void
 *
 *  \return void
 */

void OLED_print_henning(){
    2870:	80 2f       	mov	r24, r16
    2872:	91 2f       	mov	r25, r17
    2874:	9a 01       	movw	r18, r20
    2876:	20 59       	subi	r18, 0x90	; 144
    2878:	3f 4f       	sbci	r19, 0xFF	; 255
    287a:	e8 cf       	rjmp	.-48     	; 0x284c <OLED_print_henning+0x1c>
		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&henning[j+k][i]));
			}
		}
		OLED_goto_page(page+1);
    287c:	80 91 56 03 	lds	r24, 0x0356
    2880:	8f 5f       	subi	r24, 0xFF	; 255
    2882:	0e 94 30 12 	call	0x2460	; 0x2460 <OLED_goto_page>
		OLED_goto_column(0);
    2886:	80 e0       	ldi	r24, 0x00	; 0
    2888:	0e 94 39 12 	call	0x2472	; 0x2472 <OLED_goto_column>
    288c:	c0 58       	subi	r28, 0x80	; 128
    288e:	df 4f       	sbci	r29, 0xFF	; 255

void OLED_print_henning(){
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){
    2890:	c0 38       	cpi	r28, 0x80	; 128
    2892:	84 e0       	ldi	r24, 0x04	; 4
    2894:	d8 07       	cpc	r29, r24
    2896:	21 f0       	breq	.+8      	; 0x28a0 <OLED_print_henning+0x70>
    2898:	ae 01       	movw	r20, r28
    289a:	40 58       	subi	r20, 0x80	; 128
    289c:	51 09       	sbc	r21, r1
    289e:	e8 cf       	rjmp	.-48     	; 0x2870 <OLED_print_henning+0x40>
			}
		}
		OLED_goto_page(page+1);
		OLED_goto_column(0);
	}
	OLED_home();
    28a0:	0e 94 63 12 	call	0x24c6	; 0x24c6 <OLED_home>
	OLED_print_sentence("Henning");
    28a4:	8d ee       	ldi	r24, 0xED	; 237
    28a6:	91 e0       	ldi	r25, 0x01	; 1
    28a8:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
}
    28ac:	df 91       	pop	r29
    28ae:	cf 91       	pop	r28
    28b0:	1f 91       	pop	r17
    28b2:	0f 91       	pop	r16
    28b4:	08 95       	ret

000028b6 <OLED_print_credits>:
 *  \param void
 *
 *  \return void
 */

void OLED_print_credits(){
    28b6:	0f 93       	push	r16
    28b8:	1f 93       	push	r17
    28ba:	cf 93       	push	r28
    28bc:	df 93       	push	r29
	OLED_reset();
    28be:	0e 94 a1 12 	call	0x2542	; 0x2542 <OLED_reset>
	OLED_goto_column(0);
    28c2:	80 e0       	ldi	r24, 0x00	; 0
    28c4:	0e 94 39 12 	call	0x2472	; 0x2472 <OLED_goto_column>
    28c8:	c0 e8       	ldi	r28, 0x80	; 128
    28ca:	d0 e0       	ldi	r29, 0x00	; 0
 *  \param void
 *
 *  \return void
 */

void OLED_print_credits(){
    28cc:	00 e0       	ldi	r16, 0x00	; 0
    28ce:	10 e0       	ldi	r17, 0x00	; 0
    28d0:	26 c0       	rjmp	.+76     	; 0x291e <OLED_print_credits+0x68>
    28d2:	f9 01       	movw	r30, r18
    28d4:	e8 0f       	add	r30, r24
    28d6:	f9 1f       	adc	r31, r25
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&credits[j+k][i]));
    28d8:	e4 91       	lpm	r30, Z
 *
 *  \return void
 */
void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    28da:	a0 91 08 01 	lds	r26, 0x0108
    28de:	b0 91 09 01 	lds	r27, 0x0109
    28e2:	ec 93       	st	X, r30
    28e4:	01 96       	adiw	r24, 0x01	; 1
	OLED_reset();
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
    28e6:	88 30       	cpi	r24, 0x08	; 8
    28e8:	91 05       	cpc	r25, r1
    28ea:	99 f7       	brne	.-26     	; 0x28d2 <OLED_print_credits+0x1c>
    28ec:	48 5f       	subi	r20, 0xF8	; 248
    28ee:	5f 4f       	sbci	r21, 0xFF	; 255
void OLED_print_credits(){
	OLED_reset();
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
    28f0:	4c 17       	cp	r20, r28
    28f2:	5d 07       	cpc	r21, r29
    28f4:	31 f0       	breq	.+12     	; 0x2902 <OLED_print_credits+0x4c>
 *  \param void
 *
 *  \return void
 */

void OLED_print_credits(){
    28f6:	80 2f       	mov	r24, r16
    28f8:	91 2f       	mov	r25, r17
    28fa:	9a 01       	movw	r18, r20
    28fc:	20 59       	subi	r18, 0x90	; 144
    28fe:	3b 4f       	sbci	r19, 0xFB	; 251
    2900:	e8 cf       	rjmp	.-48     	; 0x28d2 <OLED_print_credits+0x1c>
		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&credits[j+k][i]));
			}
		}
		OLED_goto_page(page+1);
    2902:	80 91 56 03 	lds	r24, 0x0356
    2906:	8f 5f       	subi	r24, 0xFF	; 255
    2908:	0e 94 30 12 	call	0x2460	; 0x2460 <OLED_goto_page>
		OLED_goto_column(0);
    290c:	80 e0       	ldi	r24, 0x00	; 0
    290e:	0e 94 39 12 	call	0x2472	; 0x2472 <OLED_goto_column>
    2912:	c0 58       	subi	r28, 0x80	; 128
    2914:	df 4f       	sbci	r29, 0xFF	; 255
 */

void OLED_print_credits(){
	OLED_reset();
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){
    2916:	c0 38       	cpi	r28, 0x80	; 128
    2918:	84 e0       	ldi	r24, 0x04	; 4
    291a:	d8 07       	cpc	r29, r24
    291c:	21 f0       	breq	.+8      	; 0x2926 <OLED_print_credits+0x70>
    291e:	ae 01       	movw	r20, r28
    2920:	40 58       	subi	r20, 0x80	; 128
    2922:	51 09       	sbc	r21, r1
    2924:	e8 cf       	rjmp	.-48     	; 0x28f6 <OLED_print_credits+0x40>
			}
		}
		OLED_goto_page(page+1);
		OLED_goto_column(0);
	}
	OLED_home();
    2926:	0e 94 63 12 	call	0x24c6	; 0x24c6 <OLED_home>
}
    292a:	df 91       	pop	r29
    292c:	cf 91       	pop	r28
    292e:	1f 91       	pop	r17
    2930:	0f 91       	pop	r16
    2932:	08 95       	ret

00002934 <OLED_credits>:
 *
 *  \return void
 */

void OLED_credits(){
	OLED_print_credits();
    2934:	0e 94 5b 14 	call	0x28b6	; 0x28b6 <OLED_print_credits>
    2938:	2f e7       	ldi	r18, 0x7F	; 127
    293a:	84 e8       	ldi	r24, 0x84	; 132
    293c:	9e e1       	ldi	r25, 0x1E	; 30
    293e:	21 50       	subi	r18, 0x01	; 1
    2940:	80 40       	sbci	r24, 0x00	; 0
    2942:	90 40       	sbci	r25, 0x00	; 0
    2944:	e1 f7       	brne	.-8      	; 0x293e <OLED_credits+0xa>
    2946:	00 c0       	rjmp	.+0      	; 0x2948 <OLED_credits+0x14>
    2948:	00 00       	nop
	_delay_ms(10000);
	OLED_print_henning();
    294a:	0e 94 18 14 	call	0x2830	; 0x2830 <OLED_print_henning>
    294e:	2f e7       	ldi	r18, 0x7F	; 127
    2950:	84 e8       	ldi	r24, 0x84	; 132
    2952:	9e e1       	ldi	r25, 0x1E	; 30
    2954:	21 50       	subi	r18, 0x01	; 1
    2956:	80 40       	sbci	r24, 0x00	; 0
    2958:	90 40       	sbci	r25, 0x00	; 0
    295a:	e1 f7       	brne	.-8      	; 0x2954 <OLED_credits+0x20>
    295c:	00 c0       	rjmp	.+0      	; 0x295e <OLED_credits+0x2a>
    295e:	00 00       	nop
	_delay_ms(10000);
	OLED_print_brage();
    2960:	0e 94 92 13 	call	0x2724	; 0x2724 <OLED_print_brage>
    2964:	2f e7       	ldi	r18, 0x7F	; 127
    2966:	84 e8       	ldi	r24, 0x84	; 132
    2968:	9e e1       	ldi	r25, 0x1E	; 30
    296a:	21 50       	subi	r18, 0x01	; 1
    296c:	80 40       	sbci	r24, 0x00	; 0
    296e:	90 40       	sbci	r25, 0x00	; 0
    2970:	e1 f7       	brne	.-8      	; 0x296a <OLED_credits+0x36>
    2972:	00 c0       	rjmp	.+0      	; 0x2974 <OLED_credits+0x40>
    2974:	00 00       	nop
	_delay_ms(10000);
	OLED_print_tobias();
    2976:	0e 94 d5 13 	call	0x27aa	; 0x27aa <OLED_print_tobias>
    297a:	2f e7       	ldi	r18, 0x7F	; 127
    297c:	84 e8       	ldi	r24, 0x84	; 132
    297e:	9e e1       	ldi	r25, 0x1E	; 30
    2980:	21 50       	subi	r18, 0x01	; 1
    2982:	80 40       	sbci	r24, 0x00	; 0
    2984:	90 40       	sbci	r25, 0x00	; 0
    2986:	e1 f7       	brne	.-8      	; 0x2980 <OLED_credits+0x4c>
    2988:	00 c0       	rjmp	.+0      	; 0x298a <OLED_credits+0x56>
    298a:	00 00       	nop
    298c:	08 95       	ret

0000298e <OLED_print_pig>:
 *  \param void
 *
 *  \return void
 */

void OLED_print_pig(){
    298e:	0f 93       	push	r16
    2990:	1f 93       	push	r17
    2992:	cf 93       	push	r28
    2994:	df 93       	push	r29
	OLED_reset();
    2996:	0e 94 a1 12 	call	0x2542	; 0x2542 <OLED_reset>
	
	OLED_goto_column(0);
    299a:	80 e0       	ldi	r24, 0x00	; 0
    299c:	0e 94 39 12 	call	0x2472	; 0x2472 <OLED_goto_column>
    29a0:	c0 e8       	ldi	r28, 0x80	; 128
    29a2:	d0 e0       	ldi	r29, 0x00	; 0
 *  \param void
 *
 *  \return void
 */

void OLED_print_pig(){
    29a4:	00 e0       	ldi	r16, 0x00	; 0
    29a6:	10 e0       	ldi	r17, 0x00	; 0
    29a8:	26 c0       	rjmp	.+76     	; 0x29f6 <OLED_print_pig+0x68>
    29aa:	f9 01       	movw	r30, r18
    29ac:	e8 0f       	add	r30, r24
    29ae:	f9 1f       	adc	r31, r25
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&pig[j+k][i]));
    29b0:	e4 91       	lpm	r30, Z
 *
 *  \return void
 */
void OLED_write_data(uint8_t data)
{
	*oled_data = data;
    29b2:	a0 91 08 01 	lds	r26, 0x0108
    29b6:	b0 91 09 01 	lds	r27, 0x0109
    29ba:	ec 93       	st	X, r30
    29bc:	01 96       	adiw	r24, 0x01	; 1
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
    29be:	88 30       	cpi	r24, 0x08	; 8
    29c0:	91 05       	cpc	r25, r1
    29c2:	99 f7       	brne	.-26     	; 0x29aa <OLED_print_pig+0x1c>
    29c4:	48 5f       	subi	r20, 0xF8	; 248
    29c6:	5f 4f       	sbci	r21, 0xFF	; 255
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){

		for (uint8_t j = 0; j < 16; j++){
    29c8:	4c 17       	cp	r20, r28
    29ca:	5d 07       	cpc	r21, r29
    29cc:	31 f0       	breq	.+12     	; 0x29da <OLED_print_pig+0x4c>
 *  \param void
 *
 *  \return void
 */

void OLED_print_pig(){
    29ce:	80 2f       	mov	r24, r16
    29d0:	91 2f       	mov	r25, r17
    29d2:	9a 01       	movw	r18, r20
    29d4:	20 59       	subi	r18, 0x90	; 144
    29d6:	3f 4e       	sbci	r19, 0xEF	; 239
    29d8:	e8 cf       	rjmp	.-48     	; 0x29aa <OLED_print_pig+0x1c>
		for (uint8_t j = 0; j < 16; j++){
			for (uint8_t i = 0; i < FONTSIZE; i++){
				OLED_write_data(pgm_read_byte(&pig[j+k][i]));
			}
		}
		OLED_goto_page(page+1);
    29da:	80 91 56 03 	lds	r24, 0x0356
    29de:	8f 5f       	subi	r24, 0xFF	; 255
    29e0:	0e 94 30 12 	call	0x2460	; 0x2460 <OLED_goto_page>
		OLED_goto_column(0);
    29e4:	80 e0       	ldi	r24, 0x00	; 0
    29e6:	0e 94 39 12 	call	0x2472	; 0x2472 <OLED_goto_column>
    29ea:	c0 58       	subi	r28, 0x80	; 128
    29ec:	df 4f       	sbci	r29, 0xFF	; 255

void OLED_print_pig(){
	OLED_reset();
	
	OLED_goto_column(0);
	for (uint8_t k = 0; k < 128; k+=16){
    29ee:	c0 38       	cpi	r28, 0x80	; 128
    29f0:	84 e0       	ldi	r24, 0x04	; 4
    29f2:	d8 07       	cpc	r29, r24
    29f4:	21 f0       	breq	.+8      	; 0x29fe <OLED_print_pig+0x70>
    29f6:	ae 01       	movw	r20, r28
    29f8:	40 58       	subi	r20, 0x80	; 128
    29fa:	51 09       	sbc	r21, r1
    29fc:	e8 cf       	rjmp	.-48     	; 0x29ce <OLED_print_pig+0x40>
			}
		}
		OLED_goto_page(page+1);
		OLED_goto_column(0);
	}
	OLED_home();
    29fe:	0e 94 63 12 	call	0x24c6	; 0x24c6 <OLED_home>
	OLED_print_sentence("Pig<3");
    2a02:	85 ef       	ldi	r24, 0xF5	; 245
    2a04:	91 e0       	ldi	r25, 0x01	; 1
    2a06:	0e 94 6c 12 	call	0x24d8	; 0x24d8 <OLED_print_sentence>
}
    2a0a:	df 91       	pop	r29
    2a0c:	cf 91       	pop	r28
    2a0e:	1f 91       	pop	r17
    2a10:	0f 91       	pop	r16
    2a12:	08 95       	ret

00002a14 <SPI_write>:
    2a14:	8f b9       	out	0x0f, r24	; 15
    2a16:	77 9b       	sbis	0x0e, 7	; 14
    2a18:	fe cf       	rjmp	.-4      	; 0x2a16 <SPI_write+0x2>
    2a1a:	08 95       	ret

00002a1c <SPI_read>:
    2a1c:	1f b8       	out	0x0f, r1	; 15
    2a1e:	77 9b       	sbis	0x0e, 7	; 14
    2a20:	fe cf       	rjmp	.-4      	; 0x2a1e <SPI_read+0x2>
    2a22:	8f b1       	in	r24, 0x0f	; 15
    2a24:	08 95       	ret

00002a26 <SPI_init>:
    2a26:	bd 9a       	sbi	0x17, 5	; 23
    2a28:	bf 9a       	sbi	0x17, 7	; 23
    2a2a:	bc 9a       	sbi	0x17, 4	; 23
    2a2c:	be 98       	cbi	0x17, 6	; 23
    2a2e:	8d b1       	in	r24, 0x0d	; 13
    2a30:	81 65       	ori	r24, 0x51	; 81
    2a32:	8d b9       	out	0x0d, r24	; 13
    2a34:	08 95       	ret

00002a36 <SPI_chipSelect>:
    2a36:	81 11       	cpse	r24, r1
    2a38:	02 c0       	rjmp	.+4      	; 0x2a3e <SPI_chipSelect+0x8>
    2a3a:	c4 98       	cbi	0x18, 4	; 24
    2a3c:	08 95       	ret
    2a3e:	c4 9a       	sbi	0x18, 4	; 24
    2a40:	08 95       	ret

00002a42 <USART_receive>:
    2a42:	5f 9b       	sbis	0x0b, 7	; 11
    2a44:	fe cf       	rjmp	.-4      	; 0x2a42 <USART_receive>
    2a46:	8c b1       	in	r24, 0x0c	; 12
    2a48:	08 95       	ret

00002a4a <USART_transmit>:
    2a4a:	5d 9b       	sbis	0x0b, 5	; 11
    2a4c:	fe cf       	rjmp	.-4      	; 0x2a4a <USART_transmit>
    2a4e:	8c b9       	out	0x0c, r24	; 12
    2a50:	08 95       	ret

00002a52 <USART_init>:
    2a52:	8f e1       	ldi	r24, 0x1F	; 31
    2a54:	89 b9       	out	0x09, r24	; 9
    2a56:	10 bc       	out	0x20, r1	; 32
    2a58:	88 e1       	ldi	r24, 0x18	; 24
    2a5a:	8a b9       	out	0x0a, r24	; 10
    2a5c:	86 e8       	ldi	r24, 0x86	; 134
    2a5e:	80 bd       	out	0x20, r24	; 32
    2a60:	61 e2       	ldi	r22, 0x21	; 33
    2a62:	75 e1       	ldi	r23, 0x15	; 21
    2a64:	85 e2       	ldi	r24, 0x25	; 37
    2a66:	95 e1       	ldi	r25, 0x15	; 21
    2a68:	0e 94 5f 15 	call	0x2abe	; 0x2abe <fdevopen>
    2a6c:	08 95       	ret

00002a6e <__divmodhi4>:
    2a6e:	97 fb       	bst	r25, 7
    2a70:	07 2e       	mov	r0, r23
    2a72:	16 f4       	brtc	.+4      	; 0x2a78 <__divmodhi4+0xa>
    2a74:	00 94       	com	r0
    2a76:	07 d0       	rcall	.+14     	; 0x2a86 <__divmodhi4_neg1>
    2a78:	77 fd       	sbrc	r23, 7
    2a7a:	09 d0       	rcall	.+18     	; 0x2a8e <__divmodhi4_neg2>
    2a7c:	0e 94 4b 15 	call	0x2a96	; 0x2a96 <__udivmodhi4>
    2a80:	07 fc       	sbrc	r0, 7
    2a82:	05 d0       	rcall	.+10     	; 0x2a8e <__divmodhi4_neg2>
    2a84:	3e f4       	brtc	.+14     	; 0x2a94 <__divmodhi4_exit>

00002a86 <__divmodhi4_neg1>:
    2a86:	90 95       	com	r25
    2a88:	81 95       	neg	r24
    2a8a:	9f 4f       	sbci	r25, 0xFF	; 255
    2a8c:	08 95       	ret

00002a8e <__divmodhi4_neg2>:
    2a8e:	70 95       	com	r23
    2a90:	61 95       	neg	r22
    2a92:	7f 4f       	sbci	r23, 0xFF	; 255

00002a94 <__divmodhi4_exit>:
    2a94:	08 95       	ret

00002a96 <__udivmodhi4>:
    2a96:	aa 1b       	sub	r26, r26
    2a98:	bb 1b       	sub	r27, r27
    2a9a:	51 e1       	ldi	r21, 0x11	; 17
    2a9c:	07 c0       	rjmp	.+14     	; 0x2aac <__udivmodhi4_ep>

00002a9e <__udivmodhi4_loop>:
    2a9e:	aa 1f       	adc	r26, r26
    2aa0:	bb 1f       	adc	r27, r27
    2aa2:	a6 17       	cp	r26, r22
    2aa4:	b7 07       	cpc	r27, r23
    2aa6:	10 f0       	brcs	.+4      	; 0x2aac <__udivmodhi4_ep>
    2aa8:	a6 1b       	sub	r26, r22
    2aaa:	b7 0b       	sbc	r27, r23

00002aac <__udivmodhi4_ep>:
    2aac:	88 1f       	adc	r24, r24
    2aae:	99 1f       	adc	r25, r25
    2ab0:	5a 95       	dec	r21
    2ab2:	a9 f7       	brne	.-22     	; 0x2a9e <__udivmodhi4_loop>
    2ab4:	80 95       	com	r24
    2ab6:	90 95       	com	r25
    2ab8:	bc 01       	movw	r22, r24
    2aba:	cd 01       	movw	r24, r26
    2abc:	08 95       	ret

00002abe <fdevopen>:
    2abe:	0f 93       	push	r16
    2ac0:	1f 93       	push	r17
    2ac2:	cf 93       	push	r28
    2ac4:	df 93       	push	r29
    2ac6:	ec 01       	movw	r28, r24
    2ac8:	8b 01       	movw	r16, r22
    2aca:	00 97       	sbiw	r24, 0x00	; 0
    2acc:	31 f4       	brne	.+12     	; 0x2ada <fdevopen+0x1c>
    2ace:	61 15       	cp	r22, r1
    2ad0:	71 05       	cpc	r23, r1
    2ad2:	19 f4       	brne	.+6      	; 0x2ada <fdevopen+0x1c>
    2ad4:	80 e0       	ldi	r24, 0x00	; 0
    2ad6:	90 e0       	ldi	r25, 0x00	; 0
    2ad8:	38 c0       	rjmp	.+112    	; 0x2b4a <fdevopen+0x8c>
    2ada:	6e e0       	ldi	r22, 0x0E	; 14
    2adc:	70 e0       	ldi	r23, 0x00	; 0
    2ade:	81 e0       	ldi	r24, 0x01	; 1
    2ae0:	90 e0       	ldi	r25, 0x00	; 0
    2ae2:	0e 94 9e 17 	call	0x2f3c	; 0x2f3c <calloc>
    2ae6:	fc 01       	movw	r30, r24
    2ae8:	00 97       	sbiw	r24, 0x00	; 0
    2aea:	a1 f3       	breq	.-24     	; 0x2ad4 <fdevopen+0x16>
    2aec:	80 e8       	ldi	r24, 0x80	; 128
    2aee:	83 83       	std	Z+3, r24	; 0x03
    2af0:	01 15       	cp	r16, r1
    2af2:	11 05       	cpc	r17, r1
    2af4:	71 f0       	breq	.+28     	; 0x2b12 <fdevopen+0x54>
    2af6:	13 87       	std	Z+11, r17	; 0x0b
    2af8:	02 87       	std	Z+10, r16	; 0x0a
    2afa:	81 e8       	ldi	r24, 0x81	; 129
    2afc:	83 83       	std	Z+3, r24	; 0x03
    2afe:	80 91 57 03 	lds	r24, 0x0357
    2b02:	90 91 58 03 	lds	r25, 0x0358
    2b06:	89 2b       	or	r24, r25
    2b08:	21 f4       	brne	.+8      	; 0x2b12 <fdevopen+0x54>
    2b0a:	f0 93 58 03 	sts	0x0358, r31
    2b0e:	e0 93 57 03 	sts	0x0357, r30
    2b12:	20 97       	sbiw	r28, 0x00	; 0
    2b14:	c9 f0       	breq	.+50     	; 0x2b48 <fdevopen+0x8a>
    2b16:	d1 87       	std	Z+9, r29	; 0x09
    2b18:	c0 87       	std	Z+8, r28	; 0x08
    2b1a:	83 81       	ldd	r24, Z+3	; 0x03
    2b1c:	82 60       	ori	r24, 0x02	; 2
    2b1e:	83 83       	std	Z+3, r24	; 0x03
    2b20:	80 91 59 03 	lds	r24, 0x0359
    2b24:	90 91 5a 03 	lds	r25, 0x035A
    2b28:	89 2b       	or	r24, r25
    2b2a:	71 f4       	brne	.+28     	; 0x2b48 <fdevopen+0x8a>
    2b2c:	f0 93 5a 03 	sts	0x035A, r31
    2b30:	e0 93 59 03 	sts	0x0359, r30
    2b34:	80 91 5b 03 	lds	r24, 0x035B
    2b38:	90 91 5c 03 	lds	r25, 0x035C
    2b3c:	89 2b       	or	r24, r25
    2b3e:	21 f4       	brne	.+8      	; 0x2b48 <fdevopen+0x8a>
    2b40:	f0 93 5c 03 	sts	0x035C, r31
    2b44:	e0 93 5b 03 	sts	0x035B, r30
    2b48:	cf 01       	movw	r24, r30
    2b4a:	df 91       	pop	r29
    2b4c:	cf 91       	pop	r28
    2b4e:	1f 91       	pop	r17
    2b50:	0f 91       	pop	r16
    2b52:	08 95       	ret

00002b54 <sprintf>:
    2b54:	ae e0       	ldi	r26, 0x0E	; 14
    2b56:	b0 e0       	ldi	r27, 0x00	; 0
    2b58:	e0 eb       	ldi	r30, 0xB0	; 176
    2b5a:	f5 e1       	ldi	r31, 0x15	; 21
    2b5c:	0c 94 9c 19 	jmp	0x3338	; 0x3338 <__prologue_saves__+0x1c>
    2b60:	0d 89       	ldd	r16, Y+21	; 0x15
    2b62:	1e 89       	ldd	r17, Y+22	; 0x16
    2b64:	86 e0       	ldi	r24, 0x06	; 6
    2b66:	8c 83       	std	Y+4, r24	; 0x04
    2b68:	1a 83       	std	Y+2, r17	; 0x02
    2b6a:	09 83       	std	Y+1, r16	; 0x01
    2b6c:	8f ef       	ldi	r24, 0xFF	; 255
    2b6e:	9f e7       	ldi	r25, 0x7F	; 127
    2b70:	9e 83       	std	Y+6, r25	; 0x06
    2b72:	8d 83       	std	Y+5, r24	; 0x05
    2b74:	ae 01       	movw	r20, r28
    2b76:	47 5e       	subi	r20, 0xE7	; 231
    2b78:	5f 4f       	sbci	r21, 0xFF	; 255
    2b7a:	6f 89       	ldd	r22, Y+23	; 0x17
    2b7c:	78 8d       	ldd	r23, Y+24	; 0x18
    2b7e:	ce 01       	movw	r24, r28
    2b80:	01 96       	adiw	r24, 0x01	; 1
    2b82:	0e 94 cc 15 	call	0x2b98	; 0x2b98 <vfprintf>
    2b86:	ef 81       	ldd	r30, Y+7	; 0x07
    2b88:	f8 85       	ldd	r31, Y+8	; 0x08
    2b8a:	e0 0f       	add	r30, r16
    2b8c:	f1 1f       	adc	r31, r17
    2b8e:	10 82       	st	Z, r1
    2b90:	2e 96       	adiw	r28, 0x0e	; 14
    2b92:	e4 e0       	ldi	r30, 0x04	; 4
    2b94:	0c 94 b8 19 	jmp	0x3370	; 0x3370 <__epilogue_restores__+0x1c>

00002b98 <vfprintf>:
    2b98:	ac e0       	ldi	r26, 0x0C	; 12
    2b9a:	b0 e0       	ldi	r27, 0x00	; 0
    2b9c:	e2 ed       	ldi	r30, 0xD2	; 210
    2b9e:	f5 e1       	ldi	r31, 0x15	; 21
    2ba0:	0c 94 8e 19 	jmp	0x331c	; 0x331c <__prologue_saves__>
    2ba4:	7c 01       	movw	r14, r24
    2ba6:	6b 01       	movw	r12, r22
    2ba8:	8a 01       	movw	r16, r20
    2baa:	fc 01       	movw	r30, r24
    2bac:	17 82       	std	Z+7, r1	; 0x07
    2bae:	16 82       	std	Z+6, r1	; 0x06
    2bb0:	83 81       	ldd	r24, Z+3	; 0x03
    2bb2:	81 ff       	sbrs	r24, 1
    2bb4:	bd c1       	rjmp	.+890    	; 0x2f30 <vfprintf+0x398>
    2bb6:	ce 01       	movw	r24, r28
    2bb8:	01 96       	adiw	r24, 0x01	; 1
    2bba:	4c 01       	movw	r8, r24
    2bbc:	f7 01       	movw	r30, r14
    2bbe:	93 81       	ldd	r25, Z+3	; 0x03
    2bc0:	f6 01       	movw	r30, r12
    2bc2:	93 fd       	sbrc	r25, 3
    2bc4:	85 91       	lpm	r24, Z+
    2bc6:	93 ff       	sbrs	r25, 3
    2bc8:	81 91       	ld	r24, Z+
    2bca:	6f 01       	movw	r12, r30
    2bcc:	88 23       	and	r24, r24
    2bce:	09 f4       	brne	.+2      	; 0x2bd2 <vfprintf+0x3a>
    2bd0:	ab c1       	rjmp	.+854    	; 0x2f28 <vfprintf+0x390>
    2bd2:	85 32       	cpi	r24, 0x25	; 37
    2bd4:	39 f4       	brne	.+14     	; 0x2be4 <vfprintf+0x4c>
    2bd6:	93 fd       	sbrc	r25, 3
    2bd8:	85 91       	lpm	r24, Z+
    2bda:	93 ff       	sbrs	r25, 3
    2bdc:	81 91       	ld	r24, Z+
    2bde:	6f 01       	movw	r12, r30
    2be0:	85 32       	cpi	r24, 0x25	; 37
    2be2:	29 f4       	brne	.+10     	; 0x2bee <vfprintf+0x56>
    2be4:	b7 01       	movw	r22, r14
    2be6:	90 e0       	ldi	r25, 0x00	; 0
    2be8:	0e 94 fe 18 	call	0x31fc	; 0x31fc <fputc>
    2bec:	e7 cf       	rjmp	.-50     	; 0x2bbc <vfprintf+0x24>
    2bee:	51 2c       	mov	r5, r1
    2bf0:	31 2c       	mov	r3, r1
    2bf2:	20 e0       	ldi	r18, 0x00	; 0
    2bf4:	20 32       	cpi	r18, 0x20	; 32
    2bf6:	a0 f4       	brcc	.+40     	; 0x2c20 <vfprintf+0x88>
    2bf8:	8b 32       	cpi	r24, 0x2B	; 43
    2bfa:	69 f0       	breq	.+26     	; 0x2c16 <vfprintf+0x7e>
    2bfc:	30 f4       	brcc	.+12     	; 0x2c0a <vfprintf+0x72>
    2bfe:	80 32       	cpi	r24, 0x20	; 32
    2c00:	59 f0       	breq	.+22     	; 0x2c18 <vfprintf+0x80>
    2c02:	83 32       	cpi	r24, 0x23	; 35
    2c04:	69 f4       	brne	.+26     	; 0x2c20 <vfprintf+0x88>
    2c06:	20 61       	ori	r18, 0x10	; 16
    2c08:	2c c0       	rjmp	.+88     	; 0x2c62 <vfprintf+0xca>
    2c0a:	8d 32       	cpi	r24, 0x2D	; 45
    2c0c:	39 f0       	breq	.+14     	; 0x2c1c <vfprintf+0x84>
    2c0e:	80 33       	cpi	r24, 0x30	; 48
    2c10:	39 f4       	brne	.+14     	; 0x2c20 <vfprintf+0x88>
    2c12:	21 60       	ori	r18, 0x01	; 1
    2c14:	26 c0       	rjmp	.+76     	; 0x2c62 <vfprintf+0xca>
    2c16:	22 60       	ori	r18, 0x02	; 2
    2c18:	24 60       	ori	r18, 0x04	; 4
    2c1a:	23 c0       	rjmp	.+70     	; 0x2c62 <vfprintf+0xca>
    2c1c:	28 60       	ori	r18, 0x08	; 8
    2c1e:	21 c0       	rjmp	.+66     	; 0x2c62 <vfprintf+0xca>
    2c20:	27 fd       	sbrc	r18, 7
    2c22:	27 c0       	rjmp	.+78     	; 0x2c72 <vfprintf+0xda>
    2c24:	30 ed       	ldi	r19, 0xD0	; 208
    2c26:	38 0f       	add	r19, r24
    2c28:	3a 30       	cpi	r19, 0x0A	; 10
    2c2a:	78 f4       	brcc	.+30     	; 0x2c4a <vfprintf+0xb2>
    2c2c:	26 ff       	sbrs	r18, 6
    2c2e:	06 c0       	rjmp	.+12     	; 0x2c3c <vfprintf+0xa4>
    2c30:	fa e0       	ldi	r31, 0x0A	; 10
    2c32:	5f 9e       	mul	r5, r31
    2c34:	30 0d       	add	r19, r0
    2c36:	11 24       	eor	r1, r1
    2c38:	53 2e       	mov	r5, r19
    2c3a:	13 c0       	rjmp	.+38     	; 0x2c62 <vfprintf+0xca>
    2c3c:	8a e0       	ldi	r24, 0x0A	; 10
    2c3e:	38 9e       	mul	r3, r24
    2c40:	30 0d       	add	r19, r0
    2c42:	11 24       	eor	r1, r1
    2c44:	33 2e       	mov	r3, r19
    2c46:	20 62       	ori	r18, 0x20	; 32
    2c48:	0c c0       	rjmp	.+24     	; 0x2c62 <vfprintf+0xca>
    2c4a:	8e 32       	cpi	r24, 0x2E	; 46
    2c4c:	21 f4       	brne	.+8      	; 0x2c56 <vfprintf+0xbe>
    2c4e:	26 fd       	sbrc	r18, 6
    2c50:	6b c1       	rjmp	.+726    	; 0x2f28 <vfprintf+0x390>
    2c52:	20 64       	ori	r18, 0x40	; 64
    2c54:	06 c0       	rjmp	.+12     	; 0x2c62 <vfprintf+0xca>
    2c56:	8c 36       	cpi	r24, 0x6C	; 108
    2c58:	11 f4       	brne	.+4      	; 0x2c5e <vfprintf+0xc6>
    2c5a:	20 68       	ori	r18, 0x80	; 128
    2c5c:	02 c0       	rjmp	.+4      	; 0x2c62 <vfprintf+0xca>
    2c5e:	88 36       	cpi	r24, 0x68	; 104
    2c60:	41 f4       	brne	.+16     	; 0x2c72 <vfprintf+0xda>
    2c62:	f6 01       	movw	r30, r12
    2c64:	93 fd       	sbrc	r25, 3
    2c66:	85 91       	lpm	r24, Z+
    2c68:	93 ff       	sbrs	r25, 3
    2c6a:	81 91       	ld	r24, Z+
    2c6c:	6f 01       	movw	r12, r30
    2c6e:	81 11       	cpse	r24, r1
    2c70:	c1 cf       	rjmp	.-126    	; 0x2bf4 <vfprintf+0x5c>
    2c72:	98 2f       	mov	r25, r24
    2c74:	9f 7d       	andi	r25, 0xDF	; 223
    2c76:	95 54       	subi	r25, 0x45	; 69
    2c78:	93 30       	cpi	r25, 0x03	; 3
    2c7a:	28 f4       	brcc	.+10     	; 0x2c86 <vfprintf+0xee>
    2c7c:	0c 5f       	subi	r16, 0xFC	; 252
    2c7e:	1f 4f       	sbci	r17, 0xFF	; 255
    2c80:	ff e3       	ldi	r31, 0x3F	; 63
    2c82:	f9 83       	std	Y+1, r31	; 0x01
    2c84:	0d c0       	rjmp	.+26     	; 0x2ca0 <vfprintf+0x108>
    2c86:	83 36       	cpi	r24, 0x63	; 99
    2c88:	31 f0       	breq	.+12     	; 0x2c96 <vfprintf+0xfe>
    2c8a:	83 37       	cpi	r24, 0x73	; 115
    2c8c:	71 f0       	breq	.+28     	; 0x2caa <vfprintf+0x112>
    2c8e:	83 35       	cpi	r24, 0x53	; 83
    2c90:	09 f0       	breq	.+2      	; 0x2c94 <vfprintf+0xfc>
    2c92:	5b c0       	rjmp	.+182    	; 0x2d4a <vfprintf+0x1b2>
    2c94:	22 c0       	rjmp	.+68     	; 0x2cda <vfprintf+0x142>
    2c96:	f8 01       	movw	r30, r16
    2c98:	80 81       	ld	r24, Z
    2c9a:	89 83       	std	Y+1, r24	; 0x01
    2c9c:	0e 5f       	subi	r16, 0xFE	; 254
    2c9e:	1f 4f       	sbci	r17, 0xFF	; 255
    2ca0:	44 24       	eor	r4, r4
    2ca2:	43 94       	inc	r4
    2ca4:	51 2c       	mov	r5, r1
    2ca6:	54 01       	movw	r10, r8
    2ca8:	15 c0       	rjmp	.+42     	; 0x2cd4 <vfprintf+0x13c>
    2caa:	38 01       	movw	r6, r16
    2cac:	f2 e0       	ldi	r31, 0x02	; 2
    2cae:	6f 0e       	add	r6, r31
    2cb0:	71 1c       	adc	r7, r1
    2cb2:	f8 01       	movw	r30, r16
    2cb4:	a0 80       	ld	r10, Z
    2cb6:	b1 80       	ldd	r11, Z+1	; 0x01
    2cb8:	26 ff       	sbrs	r18, 6
    2cba:	03 c0       	rjmp	.+6      	; 0x2cc2 <vfprintf+0x12a>
    2cbc:	65 2d       	mov	r22, r5
    2cbe:	70 e0       	ldi	r23, 0x00	; 0
    2cc0:	02 c0       	rjmp	.+4      	; 0x2cc6 <vfprintf+0x12e>
    2cc2:	6f ef       	ldi	r22, 0xFF	; 255
    2cc4:	7f ef       	ldi	r23, 0xFF	; 255
    2cc6:	c5 01       	movw	r24, r10
    2cc8:	2c 87       	std	Y+12, r18	; 0x0c
    2cca:	0e 94 f3 18 	call	0x31e6	; 0x31e6 <strnlen>
    2cce:	2c 01       	movw	r4, r24
    2cd0:	83 01       	movw	r16, r6
    2cd2:	2c 85       	ldd	r18, Y+12	; 0x0c
    2cd4:	2f 77       	andi	r18, 0x7F	; 127
    2cd6:	22 2e       	mov	r2, r18
    2cd8:	17 c0       	rjmp	.+46     	; 0x2d08 <vfprintf+0x170>
    2cda:	38 01       	movw	r6, r16
    2cdc:	f2 e0       	ldi	r31, 0x02	; 2
    2cde:	6f 0e       	add	r6, r31
    2ce0:	71 1c       	adc	r7, r1
    2ce2:	f8 01       	movw	r30, r16
    2ce4:	a0 80       	ld	r10, Z
    2ce6:	b1 80       	ldd	r11, Z+1	; 0x01
    2ce8:	26 ff       	sbrs	r18, 6
    2cea:	03 c0       	rjmp	.+6      	; 0x2cf2 <vfprintf+0x15a>
    2cec:	65 2d       	mov	r22, r5
    2cee:	70 e0       	ldi	r23, 0x00	; 0
    2cf0:	02 c0       	rjmp	.+4      	; 0x2cf6 <vfprintf+0x15e>
    2cf2:	6f ef       	ldi	r22, 0xFF	; 255
    2cf4:	7f ef       	ldi	r23, 0xFF	; 255
    2cf6:	c5 01       	movw	r24, r10
    2cf8:	2c 87       	std	Y+12, r18	; 0x0c
    2cfa:	0e 94 e1 18 	call	0x31c2	; 0x31c2 <strnlen_P>
    2cfe:	2c 01       	movw	r4, r24
    2d00:	2c 85       	ldd	r18, Y+12	; 0x0c
    2d02:	20 68       	ori	r18, 0x80	; 128
    2d04:	22 2e       	mov	r2, r18
    2d06:	83 01       	movw	r16, r6
    2d08:	23 fc       	sbrc	r2, 3
    2d0a:	1b c0       	rjmp	.+54     	; 0x2d42 <vfprintf+0x1aa>
    2d0c:	83 2d       	mov	r24, r3
    2d0e:	90 e0       	ldi	r25, 0x00	; 0
    2d10:	48 16       	cp	r4, r24
    2d12:	59 06       	cpc	r5, r25
    2d14:	b0 f4       	brcc	.+44     	; 0x2d42 <vfprintf+0x1aa>
    2d16:	b7 01       	movw	r22, r14
    2d18:	80 e2       	ldi	r24, 0x20	; 32
    2d1a:	90 e0       	ldi	r25, 0x00	; 0
    2d1c:	0e 94 fe 18 	call	0x31fc	; 0x31fc <fputc>
    2d20:	3a 94       	dec	r3
    2d22:	f4 cf       	rjmp	.-24     	; 0x2d0c <vfprintf+0x174>
    2d24:	f5 01       	movw	r30, r10
    2d26:	27 fc       	sbrc	r2, 7
    2d28:	85 91       	lpm	r24, Z+
    2d2a:	27 fe       	sbrs	r2, 7
    2d2c:	81 91       	ld	r24, Z+
    2d2e:	5f 01       	movw	r10, r30
    2d30:	b7 01       	movw	r22, r14
    2d32:	90 e0       	ldi	r25, 0x00	; 0
    2d34:	0e 94 fe 18 	call	0x31fc	; 0x31fc <fputc>
    2d38:	31 10       	cpse	r3, r1
    2d3a:	3a 94       	dec	r3
    2d3c:	f1 e0       	ldi	r31, 0x01	; 1
    2d3e:	4f 1a       	sub	r4, r31
    2d40:	51 08       	sbc	r5, r1
    2d42:	41 14       	cp	r4, r1
    2d44:	51 04       	cpc	r5, r1
    2d46:	71 f7       	brne	.-36     	; 0x2d24 <vfprintf+0x18c>
    2d48:	e5 c0       	rjmp	.+458    	; 0x2f14 <vfprintf+0x37c>
    2d4a:	84 36       	cpi	r24, 0x64	; 100
    2d4c:	11 f0       	breq	.+4      	; 0x2d52 <vfprintf+0x1ba>
    2d4e:	89 36       	cpi	r24, 0x69	; 105
    2d50:	39 f5       	brne	.+78     	; 0x2da0 <vfprintf+0x208>
    2d52:	f8 01       	movw	r30, r16
    2d54:	27 ff       	sbrs	r18, 7
    2d56:	07 c0       	rjmp	.+14     	; 0x2d66 <vfprintf+0x1ce>
    2d58:	60 81       	ld	r22, Z
    2d5a:	71 81       	ldd	r23, Z+1	; 0x01
    2d5c:	82 81       	ldd	r24, Z+2	; 0x02
    2d5e:	93 81       	ldd	r25, Z+3	; 0x03
    2d60:	0c 5f       	subi	r16, 0xFC	; 252
    2d62:	1f 4f       	sbci	r17, 0xFF	; 255
    2d64:	08 c0       	rjmp	.+16     	; 0x2d76 <vfprintf+0x1de>
    2d66:	60 81       	ld	r22, Z
    2d68:	71 81       	ldd	r23, Z+1	; 0x01
    2d6a:	88 27       	eor	r24, r24
    2d6c:	77 fd       	sbrc	r23, 7
    2d6e:	80 95       	com	r24
    2d70:	98 2f       	mov	r25, r24
    2d72:	0e 5f       	subi	r16, 0xFE	; 254
    2d74:	1f 4f       	sbci	r17, 0xFF	; 255
    2d76:	2f 76       	andi	r18, 0x6F	; 111
    2d78:	b2 2e       	mov	r11, r18
    2d7a:	97 ff       	sbrs	r25, 7
    2d7c:	09 c0       	rjmp	.+18     	; 0x2d90 <vfprintf+0x1f8>
    2d7e:	90 95       	com	r25
    2d80:	80 95       	com	r24
    2d82:	70 95       	com	r23
    2d84:	61 95       	neg	r22
    2d86:	7f 4f       	sbci	r23, 0xFF	; 255
    2d88:	8f 4f       	sbci	r24, 0xFF	; 255
    2d8a:	9f 4f       	sbci	r25, 0xFF	; 255
    2d8c:	20 68       	ori	r18, 0x80	; 128
    2d8e:	b2 2e       	mov	r11, r18
    2d90:	2a e0       	ldi	r18, 0x0A	; 10
    2d92:	30 e0       	ldi	r19, 0x00	; 0
    2d94:	a4 01       	movw	r20, r8
    2d96:	0e 94 30 19 	call	0x3260	; 0x3260 <__ultoa_invert>
    2d9a:	a8 2e       	mov	r10, r24
    2d9c:	a8 18       	sub	r10, r8
    2d9e:	44 c0       	rjmp	.+136    	; 0x2e28 <vfprintf+0x290>
    2da0:	85 37       	cpi	r24, 0x75	; 117
    2da2:	29 f4       	brne	.+10     	; 0x2dae <vfprintf+0x216>
    2da4:	2f 7e       	andi	r18, 0xEF	; 239
    2da6:	b2 2e       	mov	r11, r18
    2da8:	2a e0       	ldi	r18, 0x0A	; 10
    2daa:	30 e0       	ldi	r19, 0x00	; 0
    2dac:	25 c0       	rjmp	.+74     	; 0x2df8 <vfprintf+0x260>
    2dae:	f2 2f       	mov	r31, r18
    2db0:	f9 7f       	andi	r31, 0xF9	; 249
    2db2:	bf 2e       	mov	r11, r31
    2db4:	8f 36       	cpi	r24, 0x6F	; 111
    2db6:	c1 f0       	breq	.+48     	; 0x2de8 <vfprintf+0x250>
    2db8:	18 f4       	brcc	.+6      	; 0x2dc0 <vfprintf+0x228>
    2dba:	88 35       	cpi	r24, 0x58	; 88
    2dbc:	79 f0       	breq	.+30     	; 0x2ddc <vfprintf+0x244>
    2dbe:	b4 c0       	rjmp	.+360    	; 0x2f28 <vfprintf+0x390>
    2dc0:	80 37       	cpi	r24, 0x70	; 112
    2dc2:	19 f0       	breq	.+6      	; 0x2dca <vfprintf+0x232>
    2dc4:	88 37       	cpi	r24, 0x78	; 120
    2dc6:	21 f0       	breq	.+8      	; 0x2dd0 <vfprintf+0x238>
    2dc8:	af c0       	rjmp	.+350    	; 0x2f28 <vfprintf+0x390>
    2dca:	2f 2f       	mov	r18, r31
    2dcc:	20 61       	ori	r18, 0x10	; 16
    2dce:	b2 2e       	mov	r11, r18
    2dd0:	b4 fe       	sbrs	r11, 4
    2dd2:	0d c0       	rjmp	.+26     	; 0x2dee <vfprintf+0x256>
    2dd4:	8b 2d       	mov	r24, r11
    2dd6:	84 60       	ori	r24, 0x04	; 4
    2dd8:	b8 2e       	mov	r11, r24
    2dda:	09 c0       	rjmp	.+18     	; 0x2dee <vfprintf+0x256>
    2ddc:	24 ff       	sbrs	r18, 4
    2dde:	0a c0       	rjmp	.+20     	; 0x2df4 <vfprintf+0x25c>
    2de0:	9f 2f       	mov	r25, r31
    2de2:	96 60       	ori	r25, 0x06	; 6
    2de4:	b9 2e       	mov	r11, r25
    2de6:	06 c0       	rjmp	.+12     	; 0x2df4 <vfprintf+0x25c>
    2de8:	28 e0       	ldi	r18, 0x08	; 8
    2dea:	30 e0       	ldi	r19, 0x00	; 0
    2dec:	05 c0       	rjmp	.+10     	; 0x2df8 <vfprintf+0x260>
    2dee:	20 e1       	ldi	r18, 0x10	; 16
    2df0:	30 e0       	ldi	r19, 0x00	; 0
    2df2:	02 c0       	rjmp	.+4      	; 0x2df8 <vfprintf+0x260>
    2df4:	20 e1       	ldi	r18, 0x10	; 16
    2df6:	32 e0       	ldi	r19, 0x02	; 2
    2df8:	f8 01       	movw	r30, r16
    2dfa:	b7 fe       	sbrs	r11, 7
    2dfc:	07 c0       	rjmp	.+14     	; 0x2e0c <vfprintf+0x274>
    2dfe:	60 81       	ld	r22, Z
    2e00:	71 81       	ldd	r23, Z+1	; 0x01
    2e02:	82 81       	ldd	r24, Z+2	; 0x02
    2e04:	93 81       	ldd	r25, Z+3	; 0x03
    2e06:	0c 5f       	subi	r16, 0xFC	; 252
    2e08:	1f 4f       	sbci	r17, 0xFF	; 255
    2e0a:	06 c0       	rjmp	.+12     	; 0x2e18 <vfprintf+0x280>
    2e0c:	60 81       	ld	r22, Z
    2e0e:	71 81       	ldd	r23, Z+1	; 0x01
    2e10:	80 e0       	ldi	r24, 0x00	; 0
    2e12:	90 e0       	ldi	r25, 0x00	; 0
    2e14:	0e 5f       	subi	r16, 0xFE	; 254
    2e16:	1f 4f       	sbci	r17, 0xFF	; 255
    2e18:	a4 01       	movw	r20, r8
    2e1a:	0e 94 30 19 	call	0x3260	; 0x3260 <__ultoa_invert>
    2e1e:	a8 2e       	mov	r10, r24
    2e20:	a8 18       	sub	r10, r8
    2e22:	fb 2d       	mov	r31, r11
    2e24:	ff 77       	andi	r31, 0x7F	; 127
    2e26:	bf 2e       	mov	r11, r31
    2e28:	b6 fe       	sbrs	r11, 6
    2e2a:	0b c0       	rjmp	.+22     	; 0x2e42 <vfprintf+0x2aa>
    2e2c:	2b 2d       	mov	r18, r11
    2e2e:	2e 7f       	andi	r18, 0xFE	; 254
    2e30:	a5 14       	cp	r10, r5
    2e32:	50 f4       	brcc	.+20     	; 0x2e48 <vfprintf+0x2b0>
    2e34:	b4 fe       	sbrs	r11, 4
    2e36:	0a c0       	rjmp	.+20     	; 0x2e4c <vfprintf+0x2b4>
    2e38:	b2 fc       	sbrc	r11, 2
    2e3a:	08 c0       	rjmp	.+16     	; 0x2e4c <vfprintf+0x2b4>
    2e3c:	2b 2d       	mov	r18, r11
    2e3e:	2e 7e       	andi	r18, 0xEE	; 238
    2e40:	05 c0       	rjmp	.+10     	; 0x2e4c <vfprintf+0x2b4>
    2e42:	7a 2c       	mov	r7, r10
    2e44:	2b 2d       	mov	r18, r11
    2e46:	03 c0       	rjmp	.+6      	; 0x2e4e <vfprintf+0x2b6>
    2e48:	7a 2c       	mov	r7, r10
    2e4a:	01 c0       	rjmp	.+2      	; 0x2e4e <vfprintf+0x2b6>
    2e4c:	75 2c       	mov	r7, r5
    2e4e:	24 ff       	sbrs	r18, 4
    2e50:	0d c0       	rjmp	.+26     	; 0x2e6c <vfprintf+0x2d4>
    2e52:	fe 01       	movw	r30, r28
    2e54:	ea 0d       	add	r30, r10
    2e56:	f1 1d       	adc	r31, r1
    2e58:	80 81       	ld	r24, Z
    2e5a:	80 33       	cpi	r24, 0x30	; 48
    2e5c:	11 f4       	brne	.+4      	; 0x2e62 <vfprintf+0x2ca>
    2e5e:	29 7e       	andi	r18, 0xE9	; 233
    2e60:	09 c0       	rjmp	.+18     	; 0x2e74 <vfprintf+0x2dc>
    2e62:	22 ff       	sbrs	r18, 2
    2e64:	06 c0       	rjmp	.+12     	; 0x2e72 <vfprintf+0x2da>
    2e66:	73 94       	inc	r7
    2e68:	73 94       	inc	r7
    2e6a:	04 c0       	rjmp	.+8      	; 0x2e74 <vfprintf+0x2dc>
    2e6c:	82 2f       	mov	r24, r18
    2e6e:	86 78       	andi	r24, 0x86	; 134
    2e70:	09 f0       	breq	.+2      	; 0x2e74 <vfprintf+0x2dc>
    2e72:	73 94       	inc	r7
    2e74:	23 fd       	sbrc	r18, 3
    2e76:	13 c0       	rjmp	.+38     	; 0x2e9e <vfprintf+0x306>
    2e78:	20 ff       	sbrs	r18, 0
    2e7a:	06 c0       	rjmp	.+12     	; 0x2e88 <vfprintf+0x2f0>
    2e7c:	5a 2c       	mov	r5, r10
    2e7e:	73 14       	cp	r7, r3
    2e80:	18 f4       	brcc	.+6      	; 0x2e88 <vfprintf+0x2f0>
    2e82:	53 0c       	add	r5, r3
    2e84:	57 18       	sub	r5, r7
    2e86:	73 2c       	mov	r7, r3
    2e88:	73 14       	cp	r7, r3
    2e8a:	68 f4       	brcc	.+26     	; 0x2ea6 <vfprintf+0x30e>
    2e8c:	b7 01       	movw	r22, r14
    2e8e:	80 e2       	ldi	r24, 0x20	; 32
    2e90:	90 e0       	ldi	r25, 0x00	; 0
    2e92:	2c 87       	std	Y+12, r18	; 0x0c
    2e94:	0e 94 fe 18 	call	0x31fc	; 0x31fc <fputc>
    2e98:	73 94       	inc	r7
    2e9a:	2c 85       	ldd	r18, Y+12	; 0x0c
    2e9c:	f5 cf       	rjmp	.-22     	; 0x2e88 <vfprintf+0x2f0>
    2e9e:	73 14       	cp	r7, r3
    2ea0:	10 f4       	brcc	.+4      	; 0x2ea6 <vfprintf+0x30e>
    2ea2:	37 18       	sub	r3, r7
    2ea4:	01 c0       	rjmp	.+2      	; 0x2ea8 <vfprintf+0x310>
    2ea6:	31 2c       	mov	r3, r1
    2ea8:	24 ff       	sbrs	r18, 4
    2eaa:	12 c0       	rjmp	.+36     	; 0x2ed0 <vfprintf+0x338>
    2eac:	b7 01       	movw	r22, r14
    2eae:	80 e3       	ldi	r24, 0x30	; 48
    2eb0:	90 e0       	ldi	r25, 0x00	; 0
    2eb2:	2c 87       	std	Y+12, r18	; 0x0c
    2eb4:	0e 94 fe 18 	call	0x31fc	; 0x31fc <fputc>
    2eb8:	2c 85       	ldd	r18, Y+12	; 0x0c
    2eba:	22 ff       	sbrs	r18, 2
    2ebc:	17 c0       	rjmp	.+46     	; 0x2eec <vfprintf+0x354>
    2ebe:	21 ff       	sbrs	r18, 1
    2ec0:	03 c0       	rjmp	.+6      	; 0x2ec8 <vfprintf+0x330>
    2ec2:	88 e5       	ldi	r24, 0x58	; 88
    2ec4:	90 e0       	ldi	r25, 0x00	; 0
    2ec6:	02 c0       	rjmp	.+4      	; 0x2ecc <vfprintf+0x334>
    2ec8:	88 e7       	ldi	r24, 0x78	; 120
    2eca:	90 e0       	ldi	r25, 0x00	; 0
    2ecc:	b7 01       	movw	r22, r14
    2ece:	0c c0       	rjmp	.+24     	; 0x2ee8 <vfprintf+0x350>
    2ed0:	82 2f       	mov	r24, r18
    2ed2:	86 78       	andi	r24, 0x86	; 134
    2ed4:	59 f0       	breq	.+22     	; 0x2eec <vfprintf+0x354>
    2ed6:	21 fd       	sbrc	r18, 1
    2ed8:	02 c0       	rjmp	.+4      	; 0x2ede <vfprintf+0x346>
    2eda:	80 e2       	ldi	r24, 0x20	; 32
    2edc:	01 c0       	rjmp	.+2      	; 0x2ee0 <vfprintf+0x348>
    2ede:	8b e2       	ldi	r24, 0x2B	; 43
    2ee0:	27 fd       	sbrc	r18, 7
    2ee2:	8d e2       	ldi	r24, 0x2D	; 45
    2ee4:	b7 01       	movw	r22, r14
    2ee6:	90 e0       	ldi	r25, 0x00	; 0
    2ee8:	0e 94 fe 18 	call	0x31fc	; 0x31fc <fputc>
    2eec:	a5 14       	cp	r10, r5
    2eee:	38 f4       	brcc	.+14     	; 0x2efe <vfprintf+0x366>
    2ef0:	b7 01       	movw	r22, r14
    2ef2:	80 e3       	ldi	r24, 0x30	; 48
    2ef4:	90 e0       	ldi	r25, 0x00	; 0
    2ef6:	0e 94 fe 18 	call	0x31fc	; 0x31fc <fputc>
    2efa:	5a 94       	dec	r5
    2efc:	f7 cf       	rjmp	.-18     	; 0x2eec <vfprintf+0x354>
    2efe:	aa 94       	dec	r10
    2f00:	f4 01       	movw	r30, r8
    2f02:	ea 0d       	add	r30, r10
    2f04:	f1 1d       	adc	r31, r1
    2f06:	80 81       	ld	r24, Z
    2f08:	b7 01       	movw	r22, r14
    2f0a:	90 e0       	ldi	r25, 0x00	; 0
    2f0c:	0e 94 fe 18 	call	0x31fc	; 0x31fc <fputc>
    2f10:	a1 10       	cpse	r10, r1
    2f12:	f5 cf       	rjmp	.-22     	; 0x2efe <vfprintf+0x366>
    2f14:	33 20       	and	r3, r3
    2f16:	09 f4       	brne	.+2      	; 0x2f1a <vfprintf+0x382>
    2f18:	51 ce       	rjmp	.-862    	; 0x2bbc <vfprintf+0x24>
    2f1a:	b7 01       	movw	r22, r14
    2f1c:	80 e2       	ldi	r24, 0x20	; 32
    2f1e:	90 e0       	ldi	r25, 0x00	; 0
    2f20:	0e 94 fe 18 	call	0x31fc	; 0x31fc <fputc>
    2f24:	3a 94       	dec	r3
    2f26:	f6 cf       	rjmp	.-20     	; 0x2f14 <vfprintf+0x37c>
    2f28:	f7 01       	movw	r30, r14
    2f2a:	86 81       	ldd	r24, Z+6	; 0x06
    2f2c:	97 81       	ldd	r25, Z+7	; 0x07
    2f2e:	02 c0       	rjmp	.+4      	; 0x2f34 <vfprintf+0x39c>
    2f30:	8f ef       	ldi	r24, 0xFF	; 255
    2f32:	9f ef       	ldi	r25, 0xFF	; 255
    2f34:	2c 96       	adiw	r28, 0x0c	; 12
    2f36:	e2 e1       	ldi	r30, 0x12	; 18
    2f38:	0c 94 aa 19 	jmp	0x3354	; 0x3354 <__epilogue_restores__>

00002f3c <calloc>:
    2f3c:	0f 93       	push	r16
    2f3e:	1f 93       	push	r17
    2f40:	cf 93       	push	r28
    2f42:	df 93       	push	r29
    2f44:	86 9f       	mul	r24, r22
    2f46:	80 01       	movw	r16, r0
    2f48:	87 9f       	mul	r24, r23
    2f4a:	10 0d       	add	r17, r0
    2f4c:	96 9f       	mul	r25, r22
    2f4e:	10 0d       	add	r17, r0
    2f50:	11 24       	eor	r1, r1
    2f52:	c8 01       	movw	r24, r16
    2f54:	0e 94 ba 17 	call	0x2f74	; 0x2f74 <malloc>
    2f58:	ec 01       	movw	r28, r24
    2f5a:	00 97       	sbiw	r24, 0x00	; 0
    2f5c:	29 f0       	breq	.+10     	; 0x2f68 <calloc+0x2c>
    2f5e:	a8 01       	movw	r20, r16
    2f60:	60 e0       	ldi	r22, 0x00	; 0
    2f62:	70 e0       	ldi	r23, 0x00	; 0
    2f64:	0e 94 ec 18 	call	0x31d8	; 0x31d8 <memset>
    2f68:	ce 01       	movw	r24, r28
    2f6a:	df 91       	pop	r29
    2f6c:	cf 91       	pop	r28
    2f6e:	1f 91       	pop	r17
    2f70:	0f 91       	pop	r16
    2f72:	08 95       	ret

00002f74 <malloc>:
    2f74:	cf 93       	push	r28
    2f76:	df 93       	push	r29
    2f78:	82 30       	cpi	r24, 0x02	; 2
    2f7a:	91 05       	cpc	r25, r1
    2f7c:	10 f4       	brcc	.+4      	; 0x2f82 <malloc+0xe>
    2f7e:	82 e0       	ldi	r24, 0x02	; 2
    2f80:	90 e0       	ldi	r25, 0x00	; 0
    2f82:	e0 91 5f 03 	lds	r30, 0x035F
    2f86:	f0 91 60 03 	lds	r31, 0x0360
    2f8a:	20 e0       	ldi	r18, 0x00	; 0
    2f8c:	30 e0       	ldi	r19, 0x00	; 0
    2f8e:	a0 e0       	ldi	r26, 0x00	; 0
    2f90:	b0 e0       	ldi	r27, 0x00	; 0
    2f92:	30 97       	sbiw	r30, 0x00	; 0
    2f94:	39 f1       	breq	.+78     	; 0x2fe4 <malloc+0x70>
    2f96:	40 81       	ld	r20, Z
    2f98:	51 81       	ldd	r21, Z+1	; 0x01
    2f9a:	48 17       	cp	r20, r24
    2f9c:	59 07       	cpc	r21, r25
    2f9e:	b8 f0       	brcs	.+46     	; 0x2fce <malloc+0x5a>
    2fa0:	48 17       	cp	r20, r24
    2fa2:	59 07       	cpc	r21, r25
    2fa4:	71 f4       	brne	.+28     	; 0x2fc2 <malloc+0x4e>
    2fa6:	82 81       	ldd	r24, Z+2	; 0x02
    2fa8:	93 81       	ldd	r25, Z+3	; 0x03
    2faa:	10 97       	sbiw	r26, 0x00	; 0
    2fac:	29 f0       	breq	.+10     	; 0x2fb8 <malloc+0x44>
    2fae:	13 96       	adiw	r26, 0x03	; 3
    2fb0:	9c 93       	st	X, r25
    2fb2:	8e 93       	st	-X, r24
    2fb4:	12 97       	sbiw	r26, 0x02	; 2
    2fb6:	2c c0       	rjmp	.+88     	; 0x3010 <malloc+0x9c>
    2fb8:	90 93 60 03 	sts	0x0360, r25
    2fbc:	80 93 5f 03 	sts	0x035F, r24
    2fc0:	27 c0       	rjmp	.+78     	; 0x3010 <malloc+0x9c>
    2fc2:	21 15       	cp	r18, r1
    2fc4:	31 05       	cpc	r19, r1
    2fc6:	31 f0       	breq	.+12     	; 0x2fd4 <malloc+0x60>
    2fc8:	42 17       	cp	r20, r18
    2fca:	53 07       	cpc	r21, r19
    2fcc:	18 f0       	brcs	.+6      	; 0x2fd4 <malloc+0x60>
    2fce:	a9 01       	movw	r20, r18
    2fd0:	db 01       	movw	r26, r22
    2fd2:	01 c0       	rjmp	.+2      	; 0x2fd6 <malloc+0x62>
    2fd4:	ef 01       	movw	r28, r30
    2fd6:	9a 01       	movw	r18, r20
    2fd8:	bd 01       	movw	r22, r26
    2fda:	df 01       	movw	r26, r30
    2fdc:	02 80       	ldd	r0, Z+2	; 0x02
    2fde:	f3 81       	ldd	r31, Z+3	; 0x03
    2fe0:	e0 2d       	mov	r30, r0
    2fe2:	d7 cf       	rjmp	.-82     	; 0x2f92 <malloc+0x1e>
    2fe4:	21 15       	cp	r18, r1
    2fe6:	31 05       	cpc	r19, r1
    2fe8:	f9 f0       	breq	.+62     	; 0x3028 <malloc+0xb4>
    2fea:	28 1b       	sub	r18, r24
    2fec:	39 0b       	sbc	r19, r25
    2fee:	24 30       	cpi	r18, 0x04	; 4
    2ff0:	31 05       	cpc	r19, r1
    2ff2:	80 f4       	brcc	.+32     	; 0x3014 <malloc+0xa0>
    2ff4:	8a 81       	ldd	r24, Y+2	; 0x02
    2ff6:	9b 81       	ldd	r25, Y+3	; 0x03
    2ff8:	61 15       	cp	r22, r1
    2ffa:	71 05       	cpc	r23, r1
    2ffc:	21 f0       	breq	.+8      	; 0x3006 <malloc+0x92>
    2ffe:	fb 01       	movw	r30, r22
    3000:	93 83       	std	Z+3, r25	; 0x03
    3002:	82 83       	std	Z+2, r24	; 0x02
    3004:	04 c0       	rjmp	.+8      	; 0x300e <malloc+0x9a>
    3006:	90 93 60 03 	sts	0x0360, r25
    300a:	80 93 5f 03 	sts	0x035F, r24
    300e:	fe 01       	movw	r30, r28
    3010:	32 96       	adiw	r30, 0x02	; 2
    3012:	44 c0       	rjmp	.+136    	; 0x309c <malloc+0x128>
    3014:	fe 01       	movw	r30, r28
    3016:	e2 0f       	add	r30, r18
    3018:	f3 1f       	adc	r31, r19
    301a:	81 93       	st	Z+, r24
    301c:	91 93       	st	Z+, r25
    301e:	22 50       	subi	r18, 0x02	; 2
    3020:	31 09       	sbc	r19, r1
    3022:	39 83       	std	Y+1, r19	; 0x01
    3024:	28 83       	st	Y, r18
    3026:	3a c0       	rjmp	.+116    	; 0x309c <malloc+0x128>
    3028:	20 91 5d 03 	lds	r18, 0x035D
    302c:	30 91 5e 03 	lds	r19, 0x035E
    3030:	23 2b       	or	r18, r19
    3032:	41 f4       	brne	.+16     	; 0x3044 <malloc+0xd0>
    3034:	20 91 02 01 	lds	r18, 0x0102
    3038:	30 91 03 01 	lds	r19, 0x0103
    303c:	30 93 5e 03 	sts	0x035E, r19
    3040:	20 93 5d 03 	sts	0x035D, r18
    3044:	20 91 00 01 	lds	r18, 0x0100
    3048:	30 91 01 01 	lds	r19, 0x0101
    304c:	21 15       	cp	r18, r1
    304e:	31 05       	cpc	r19, r1
    3050:	41 f4       	brne	.+16     	; 0x3062 <malloc+0xee>
    3052:	2d b7       	in	r18, 0x3d	; 61
    3054:	3e b7       	in	r19, 0x3e	; 62
    3056:	40 91 04 01 	lds	r20, 0x0104
    305a:	50 91 05 01 	lds	r21, 0x0105
    305e:	24 1b       	sub	r18, r20
    3060:	35 0b       	sbc	r19, r21
    3062:	e0 91 5d 03 	lds	r30, 0x035D
    3066:	f0 91 5e 03 	lds	r31, 0x035E
    306a:	e2 17       	cp	r30, r18
    306c:	f3 07       	cpc	r31, r19
    306e:	a0 f4       	brcc	.+40     	; 0x3098 <malloc+0x124>
    3070:	2e 1b       	sub	r18, r30
    3072:	3f 0b       	sbc	r19, r31
    3074:	28 17       	cp	r18, r24
    3076:	39 07       	cpc	r19, r25
    3078:	78 f0       	brcs	.+30     	; 0x3098 <malloc+0x124>
    307a:	ac 01       	movw	r20, r24
    307c:	4e 5f       	subi	r20, 0xFE	; 254
    307e:	5f 4f       	sbci	r21, 0xFF	; 255
    3080:	24 17       	cp	r18, r20
    3082:	35 07       	cpc	r19, r21
    3084:	48 f0       	brcs	.+18     	; 0x3098 <malloc+0x124>
    3086:	4e 0f       	add	r20, r30
    3088:	5f 1f       	adc	r21, r31
    308a:	50 93 5e 03 	sts	0x035E, r21
    308e:	40 93 5d 03 	sts	0x035D, r20
    3092:	81 93       	st	Z+, r24
    3094:	91 93       	st	Z+, r25
    3096:	02 c0       	rjmp	.+4      	; 0x309c <malloc+0x128>
    3098:	e0 e0       	ldi	r30, 0x00	; 0
    309a:	f0 e0       	ldi	r31, 0x00	; 0
    309c:	cf 01       	movw	r24, r30
    309e:	df 91       	pop	r29
    30a0:	cf 91       	pop	r28
    30a2:	08 95       	ret

000030a4 <free>:
    30a4:	cf 93       	push	r28
    30a6:	df 93       	push	r29
    30a8:	00 97       	sbiw	r24, 0x00	; 0
    30aa:	09 f4       	brne	.+2      	; 0x30ae <free+0xa>
    30ac:	87 c0       	rjmp	.+270    	; 0x31bc <free+0x118>
    30ae:	fc 01       	movw	r30, r24
    30b0:	32 97       	sbiw	r30, 0x02	; 2
    30b2:	13 82       	std	Z+3, r1	; 0x03
    30b4:	12 82       	std	Z+2, r1	; 0x02
    30b6:	c0 91 5f 03 	lds	r28, 0x035F
    30ba:	d0 91 60 03 	lds	r29, 0x0360
    30be:	20 97       	sbiw	r28, 0x00	; 0
    30c0:	81 f4       	brne	.+32     	; 0x30e2 <free+0x3e>
    30c2:	20 81       	ld	r18, Z
    30c4:	31 81       	ldd	r19, Z+1	; 0x01
    30c6:	28 0f       	add	r18, r24
    30c8:	39 1f       	adc	r19, r25
    30ca:	80 91 5d 03 	lds	r24, 0x035D
    30ce:	90 91 5e 03 	lds	r25, 0x035E
    30d2:	82 17       	cp	r24, r18
    30d4:	93 07       	cpc	r25, r19
    30d6:	79 f5       	brne	.+94     	; 0x3136 <free+0x92>
    30d8:	f0 93 5e 03 	sts	0x035E, r31
    30dc:	e0 93 5d 03 	sts	0x035D, r30
    30e0:	6d c0       	rjmp	.+218    	; 0x31bc <free+0x118>
    30e2:	de 01       	movw	r26, r28
    30e4:	20 e0       	ldi	r18, 0x00	; 0
    30e6:	30 e0       	ldi	r19, 0x00	; 0
    30e8:	ae 17       	cp	r26, r30
    30ea:	bf 07       	cpc	r27, r31
    30ec:	50 f4       	brcc	.+20     	; 0x3102 <free+0x5e>
    30ee:	12 96       	adiw	r26, 0x02	; 2
    30f0:	4d 91       	ld	r20, X+
    30f2:	5c 91       	ld	r21, X
    30f4:	13 97       	sbiw	r26, 0x03	; 3
    30f6:	9d 01       	movw	r18, r26
    30f8:	41 15       	cp	r20, r1
    30fa:	51 05       	cpc	r21, r1
    30fc:	09 f1       	breq	.+66     	; 0x3140 <free+0x9c>
    30fe:	da 01       	movw	r26, r20
    3100:	f3 cf       	rjmp	.-26     	; 0x30e8 <free+0x44>
    3102:	b3 83       	std	Z+3, r27	; 0x03
    3104:	a2 83       	std	Z+2, r26	; 0x02
    3106:	40 81       	ld	r20, Z
    3108:	51 81       	ldd	r21, Z+1	; 0x01
    310a:	84 0f       	add	r24, r20
    310c:	95 1f       	adc	r25, r21
    310e:	8a 17       	cp	r24, r26
    3110:	9b 07       	cpc	r25, r27
    3112:	71 f4       	brne	.+28     	; 0x3130 <free+0x8c>
    3114:	8d 91       	ld	r24, X+
    3116:	9c 91       	ld	r25, X
    3118:	11 97       	sbiw	r26, 0x01	; 1
    311a:	84 0f       	add	r24, r20
    311c:	95 1f       	adc	r25, r21
    311e:	02 96       	adiw	r24, 0x02	; 2
    3120:	91 83       	std	Z+1, r25	; 0x01
    3122:	80 83       	st	Z, r24
    3124:	12 96       	adiw	r26, 0x02	; 2
    3126:	8d 91       	ld	r24, X+
    3128:	9c 91       	ld	r25, X
    312a:	13 97       	sbiw	r26, 0x03	; 3
    312c:	93 83       	std	Z+3, r25	; 0x03
    312e:	82 83       	std	Z+2, r24	; 0x02
    3130:	21 15       	cp	r18, r1
    3132:	31 05       	cpc	r19, r1
    3134:	29 f4       	brne	.+10     	; 0x3140 <free+0x9c>
    3136:	f0 93 60 03 	sts	0x0360, r31
    313a:	e0 93 5f 03 	sts	0x035F, r30
    313e:	3e c0       	rjmp	.+124    	; 0x31bc <free+0x118>
    3140:	d9 01       	movw	r26, r18
    3142:	13 96       	adiw	r26, 0x03	; 3
    3144:	fc 93       	st	X, r31
    3146:	ee 93       	st	-X, r30
    3148:	12 97       	sbiw	r26, 0x02	; 2
    314a:	4d 91       	ld	r20, X+
    314c:	5d 91       	ld	r21, X+
    314e:	a4 0f       	add	r26, r20
    3150:	b5 1f       	adc	r27, r21
    3152:	ea 17       	cp	r30, r26
    3154:	fb 07       	cpc	r31, r27
    3156:	79 f4       	brne	.+30     	; 0x3176 <free+0xd2>
    3158:	80 81       	ld	r24, Z
    315a:	91 81       	ldd	r25, Z+1	; 0x01
    315c:	84 0f       	add	r24, r20
    315e:	95 1f       	adc	r25, r21
    3160:	02 96       	adiw	r24, 0x02	; 2
    3162:	d9 01       	movw	r26, r18
    3164:	11 96       	adiw	r26, 0x01	; 1
    3166:	9c 93       	st	X, r25
    3168:	8e 93       	st	-X, r24
    316a:	82 81       	ldd	r24, Z+2	; 0x02
    316c:	93 81       	ldd	r25, Z+3	; 0x03
    316e:	13 96       	adiw	r26, 0x03	; 3
    3170:	9c 93       	st	X, r25
    3172:	8e 93       	st	-X, r24
    3174:	12 97       	sbiw	r26, 0x02	; 2
    3176:	e0 e0       	ldi	r30, 0x00	; 0
    3178:	f0 e0       	ldi	r31, 0x00	; 0
    317a:	8a 81       	ldd	r24, Y+2	; 0x02
    317c:	9b 81       	ldd	r25, Y+3	; 0x03
    317e:	00 97       	sbiw	r24, 0x00	; 0
    3180:	19 f0       	breq	.+6      	; 0x3188 <free+0xe4>
    3182:	fe 01       	movw	r30, r28
    3184:	ec 01       	movw	r28, r24
    3186:	f9 cf       	rjmp	.-14     	; 0x317a <free+0xd6>
    3188:	ce 01       	movw	r24, r28
    318a:	02 96       	adiw	r24, 0x02	; 2
    318c:	28 81       	ld	r18, Y
    318e:	39 81       	ldd	r19, Y+1	; 0x01
    3190:	82 0f       	add	r24, r18
    3192:	93 1f       	adc	r25, r19
    3194:	20 91 5d 03 	lds	r18, 0x035D
    3198:	30 91 5e 03 	lds	r19, 0x035E
    319c:	28 17       	cp	r18, r24
    319e:	39 07       	cpc	r19, r25
    31a0:	69 f4       	brne	.+26     	; 0x31bc <free+0x118>
    31a2:	30 97       	sbiw	r30, 0x00	; 0
    31a4:	29 f4       	brne	.+10     	; 0x31b0 <free+0x10c>
    31a6:	10 92 60 03 	sts	0x0360, r1
    31aa:	10 92 5f 03 	sts	0x035F, r1
    31ae:	02 c0       	rjmp	.+4      	; 0x31b4 <free+0x110>
    31b0:	13 82       	std	Z+3, r1	; 0x03
    31b2:	12 82       	std	Z+2, r1	; 0x02
    31b4:	d0 93 5e 03 	sts	0x035E, r29
    31b8:	c0 93 5d 03 	sts	0x035D, r28
    31bc:	df 91       	pop	r29
    31be:	cf 91       	pop	r28
    31c0:	08 95       	ret

000031c2 <strnlen_P>:
    31c2:	fc 01       	movw	r30, r24
    31c4:	05 90       	lpm	r0, Z+
    31c6:	61 50       	subi	r22, 0x01	; 1
    31c8:	70 40       	sbci	r23, 0x00	; 0
    31ca:	01 10       	cpse	r0, r1
    31cc:	d8 f7       	brcc	.-10     	; 0x31c4 <strnlen_P+0x2>
    31ce:	80 95       	com	r24
    31d0:	90 95       	com	r25
    31d2:	8e 0f       	add	r24, r30
    31d4:	9f 1f       	adc	r25, r31
    31d6:	08 95       	ret

000031d8 <memset>:
    31d8:	dc 01       	movw	r26, r24
    31da:	01 c0       	rjmp	.+2      	; 0x31de <memset+0x6>
    31dc:	6d 93       	st	X+, r22
    31de:	41 50       	subi	r20, 0x01	; 1
    31e0:	50 40       	sbci	r21, 0x00	; 0
    31e2:	e0 f7       	brcc	.-8      	; 0x31dc <memset+0x4>
    31e4:	08 95       	ret

000031e6 <strnlen>:
    31e6:	fc 01       	movw	r30, r24
    31e8:	61 50       	subi	r22, 0x01	; 1
    31ea:	70 40       	sbci	r23, 0x00	; 0
    31ec:	01 90       	ld	r0, Z+
    31ee:	01 10       	cpse	r0, r1
    31f0:	d8 f7       	brcc	.-10     	; 0x31e8 <strnlen+0x2>
    31f2:	80 95       	com	r24
    31f4:	90 95       	com	r25
    31f6:	8e 0f       	add	r24, r30
    31f8:	9f 1f       	adc	r25, r31
    31fa:	08 95       	ret

000031fc <fputc>:
    31fc:	0f 93       	push	r16
    31fe:	1f 93       	push	r17
    3200:	cf 93       	push	r28
    3202:	df 93       	push	r29
    3204:	18 2f       	mov	r17, r24
    3206:	09 2f       	mov	r16, r25
    3208:	eb 01       	movw	r28, r22
    320a:	8b 81       	ldd	r24, Y+3	; 0x03
    320c:	81 fd       	sbrc	r24, 1
    320e:	03 c0       	rjmp	.+6      	; 0x3216 <fputc+0x1a>
    3210:	8f ef       	ldi	r24, 0xFF	; 255
    3212:	9f ef       	ldi	r25, 0xFF	; 255
    3214:	20 c0       	rjmp	.+64     	; 0x3256 <fputc+0x5a>
    3216:	82 ff       	sbrs	r24, 2
    3218:	10 c0       	rjmp	.+32     	; 0x323a <fputc+0x3e>
    321a:	4e 81       	ldd	r20, Y+6	; 0x06
    321c:	5f 81       	ldd	r21, Y+7	; 0x07
    321e:	2c 81       	ldd	r18, Y+4	; 0x04
    3220:	3d 81       	ldd	r19, Y+5	; 0x05
    3222:	42 17       	cp	r20, r18
    3224:	53 07       	cpc	r21, r19
    3226:	7c f4       	brge	.+30     	; 0x3246 <fputc+0x4a>
    3228:	e8 81       	ld	r30, Y
    322a:	f9 81       	ldd	r31, Y+1	; 0x01
    322c:	9f 01       	movw	r18, r30
    322e:	2f 5f       	subi	r18, 0xFF	; 255
    3230:	3f 4f       	sbci	r19, 0xFF	; 255
    3232:	39 83       	std	Y+1, r19	; 0x01
    3234:	28 83       	st	Y, r18
    3236:	10 83       	st	Z, r17
    3238:	06 c0       	rjmp	.+12     	; 0x3246 <fputc+0x4a>
    323a:	e8 85       	ldd	r30, Y+8	; 0x08
    323c:	f9 85       	ldd	r31, Y+9	; 0x09
    323e:	81 2f       	mov	r24, r17
    3240:	09 95       	icall
    3242:	89 2b       	or	r24, r25
    3244:	29 f7       	brne	.-54     	; 0x3210 <fputc+0x14>
    3246:	2e 81       	ldd	r18, Y+6	; 0x06
    3248:	3f 81       	ldd	r19, Y+7	; 0x07
    324a:	2f 5f       	subi	r18, 0xFF	; 255
    324c:	3f 4f       	sbci	r19, 0xFF	; 255
    324e:	3f 83       	std	Y+7, r19	; 0x07
    3250:	2e 83       	std	Y+6, r18	; 0x06
    3252:	81 2f       	mov	r24, r17
    3254:	90 2f       	mov	r25, r16
    3256:	df 91       	pop	r29
    3258:	cf 91       	pop	r28
    325a:	1f 91       	pop	r17
    325c:	0f 91       	pop	r16
    325e:	08 95       	ret

00003260 <__ultoa_invert>:
    3260:	fa 01       	movw	r30, r20
    3262:	aa 27       	eor	r26, r26
    3264:	28 30       	cpi	r18, 0x08	; 8
    3266:	51 f1       	breq	.+84     	; 0x32bc <__ultoa_invert+0x5c>
    3268:	20 31       	cpi	r18, 0x10	; 16
    326a:	81 f1       	breq	.+96     	; 0x32cc <__ultoa_invert+0x6c>
    326c:	e8 94       	clt
    326e:	6f 93       	push	r22
    3270:	6e 7f       	andi	r22, 0xFE	; 254
    3272:	6e 5f       	subi	r22, 0xFE	; 254
    3274:	7f 4f       	sbci	r23, 0xFF	; 255
    3276:	8f 4f       	sbci	r24, 0xFF	; 255
    3278:	9f 4f       	sbci	r25, 0xFF	; 255
    327a:	af 4f       	sbci	r26, 0xFF	; 255
    327c:	b1 e0       	ldi	r27, 0x01	; 1
    327e:	3e d0       	rcall	.+124    	; 0x32fc <__ultoa_invert+0x9c>
    3280:	b4 e0       	ldi	r27, 0x04	; 4
    3282:	3c d0       	rcall	.+120    	; 0x32fc <__ultoa_invert+0x9c>
    3284:	67 0f       	add	r22, r23
    3286:	78 1f       	adc	r23, r24
    3288:	89 1f       	adc	r24, r25
    328a:	9a 1f       	adc	r25, r26
    328c:	a1 1d       	adc	r26, r1
    328e:	68 0f       	add	r22, r24
    3290:	79 1f       	adc	r23, r25
    3292:	8a 1f       	adc	r24, r26
    3294:	91 1d       	adc	r25, r1
    3296:	a1 1d       	adc	r26, r1
    3298:	6a 0f       	add	r22, r26
    329a:	71 1d       	adc	r23, r1
    329c:	81 1d       	adc	r24, r1
    329e:	91 1d       	adc	r25, r1
    32a0:	a1 1d       	adc	r26, r1
    32a2:	20 d0       	rcall	.+64     	; 0x32e4 <__ultoa_invert+0x84>
    32a4:	09 f4       	brne	.+2      	; 0x32a8 <__ultoa_invert+0x48>
    32a6:	68 94       	set
    32a8:	3f 91       	pop	r19
    32aa:	2a e0       	ldi	r18, 0x0A	; 10
    32ac:	26 9f       	mul	r18, r22
    32ae:	11 24       	eor	r1, r1
    32b0:	30 19       	sub	r19, r0
    32b2:	30 5d       	subi	r19, 0xD0	; 208
    32b4:	31 93       	st	Z+, r19
    32b6:	de f6       	brtc	.-74     	; 0x326e <__ultoa_invert+0xe>
    32b8:	cf 01       	movw	r24, r30
    32ba:	08 95       	ret
    32bc:	46 2f       	mov	r20, r22
    32be:	47 70       	andi	r20, 0x07	; 7
    32c0:	40 5d       	subi	r20, 0xD0	; 208
    32c2:	41 93       	st	Z+, r20
    32c4:	b3 e0       	ldi	r27, 0x03	; 3
    32c6:	0f d0       	rcall	.+30     	; 0x32e6 <__ultoa_invert+0x86>
    32c8:	c9 f7       	brne	.-14     	; 0x32bc <__ultoa_invert+0x5c>
    32ca:	f6 cf       	rjmp	.-20     	; 0x32b8 <__ultoa_invert+0x58>
    32cc:	46 2f       	mov	r20, r22
    32ce:	4f 70       	andi	r20, 0x0F	; 15
    32d0:	40 5d       	subi	r20, 0xD0	; 208
    32d2:	4a 33       	cpi	r20, 0x3A	; 58
    32d4:	18 f0       	brcs	.+6      	; 0x32dc <__ultoa_invert+0x7c>
    32d6:	49 5d       	subi	r20, 0xD9	; 217
    32d8:	31 fd       	sbrc	r19, 1
    32da:	40 52       	subi	r20, 0x20	; 32
    32dc:	41 93       	st	Z+, r20
    32de:	02 d0       	rcall	.+4      	; 0x32e4 <__ultoa_invert+0x84>
    32e0:	a9 f7       	brne	.-22     	; 0x32cc <__ultoa_invert+0x6c>
    32e2:	ea cf       	rjmp	.-44     	; 0x32b8 <__ultoa_invert+0x58>
    32e4:	b4 e0       	ldi	r27, 0x04	; 4
    32e6:	a6 95       	lsr	r26
    32e8:	97 95       	ror	r25
    32ea:	87 95       	ror	r24
    32ec:	77 95       	ror	r23
    32ee:	67 95       	ror	r22
    32f0:	ba 95       	dec	r27
    32f2:	c9 f7       	brne	.-14     	; 0x32e6 <__ultoa_invert+0x86>
    32f4:	00 97       	sbiw	r24, 0x00	; 0
    32f6:	61 05       	cpc	r22, r1
    32f8:	71 05       	cpc	r23, r1
    32fa:	08 95       	ret
    32fc:	9b 01       	movw	r18, r22
    32fe:	ac 01       	movw	r20, r24
    3300:	0a 2e       	mov	r0, r26
    3302:	06 94       	lsr	r0
    3304:	57 95       	ror	r21
    3306:	47 95       	ror	r20
    3308:	37 95       	ror	r19
    330a:	27 95       	ror	r18
    330c:	ba 95       	dec	r27
    330e:	c9 f7       	brne	.-14     	; 0x3302 <__ultoa_invert+0xa2>
    3310:	62 0f       	add	r22, r18
    3312:	73 1f       	adc	r23, r19
    3314:	84 1f       	adc	r24, r20
    3316:	95 1f       	adc	r25, r21
    3318:	a0 1d       	adc	r26, r0
    331a:	08 95       	ret

0000331c <__prologue_saves__>:
    331c:	2f 92       	push	r2
    331e:	3f 92       	push	r3
    3320:	4f 92       	push	r4
    3322:	5f 92       	push	r5
    3324:	6f 92       	push	r6
    3326:	7f 92       	push	r7
    3328:	8f 92       	push	r8
    332a:	9f 92       	push	r9
    332c:	af 92       	push	r10
    332e:	bf 92       	push	r11
    3330:	cf 92       	push	r12
    3332:	df 92       	push	r13
    3334:	ef 92       	push	r14
    3336:	ff 92       	push	r15
    3338:	0f 93       	push	r16
    333a:	1f 93       	push	r17
    333c:	cf 93       	push	r28
    333e:	df 93       	push	r29
    3340:	cd b7       	in	r28, 0x3d	; 61
    3342:	de b7       	in	r29, 0x3e	; 62
    3344:	ca 1b       	sub	r28, r26
    3346:	db 0b       	sbc	r29, r27
    3348:	0f b6       	in	r0, 0x3f	; 63
    334a:	f8 94       	cli
    334c:	de bf       	out	0x3e, r29	; 62
    334e:	0f be       	out	0x3f, r0	; 63
    3350:	cd bf       	out	0x3d, r28	; 61
    3352:	09 94       	ijmp

00003354 <__epilogue_restores__>:
    3354:	2a 88       	ldd	r2, Y+18	; 0x12
    3356:	39 88       	ldd	r3, Y+17	; 0x11
    3358:	48 88       	ldd	r4, Y+16	; 0x10
    335a:	5f 84       	ldd	r5, Y+15	; 0x0f
    335c:	6e 84       	ldd	r6, Y+14	; 0x0e
    335e:	7d 84       	ldd	r7, Y+13	; 0x0d
    3360:	8c 84       	ldd	r8, Y+12	; 0x0c
    3362:	9b 84       	ldd	r9, Y+11	; 0x0b
    3364:	aa 84       	ldd	r10, Y+10	; 0x0a
    3366:	b9 84       	ldd	r11, Y+9	; 0x09
    3368:	c8 84       	ldd	r12, Y+8	; 0x08
    336a:	df 80       	ldd	r13, Y+7	; 0x07
    336c:	ee 80       	ldd	r14, Y+6	; 0x06
    336e:	fd 80       	ldd	r15, Y+5	; 0x05
    3370:	0c 81       	ldd	r16, Y+4	; 0x04
    3372:	1b 81       	ldd	r17, Y+3	; 0x03
    3374:	aa 81       	ldd	r26, Y+2	; 0x02
    3376:	b9 81       	ldd	r27, Y+1	; 0x01
    3378:	ce 0f       	add	r28, r30
    337a:	d1 1d       	adc	r29, r1
    337c:	0f b6       	in	r0, 0x3f	; 63
    337e:	f8 94       	cli
    3380:	de bf       	out	0x3e, r29	; 62
    3382:	0f be       	out	0x3f, r0	; 63
    3384:	cd bf       	out	0x3d, r28	; 61
    3386:	ed 01       	movw	r28, r26
    3388:	08 95       	ret

0000338a <_exit>:
    338a:	f8 94       	cli

0000338c <__stop_program>:
    338c:	ff cf       	rjmp	.-2      	; 0x338c <__stop_program>
